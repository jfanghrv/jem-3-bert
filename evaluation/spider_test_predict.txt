select count(*) from singer
select count(*) from singer
select name, country, age from singer order by age desc
select name, country, age from singer order by age desc
select avg(age), min(age), max(age) from singer where country = "France"
select avg(age), min(age), max(age) from singer where country = "France"
select song_name, song_release_year from singer order by age asc limit 1
select song_name, song_release_year from singer order by age asc limit 1
select distinct country from singer where age > 20
select distinct country from singer where age > 20
select country, count(*) from singer group by country
select country, count(*) from singer group by country
select song_name from singer where age > (select avg(age) from singer)
select song_name from singer where age > (select avg(age) from singer)
select location, name from stadium where capacity between 5000 and 10000
select location, name from stadium where capacity between 5000 and 10000
select max(capacity), avg(capacity) from stadium
select avg(capacity), max(capacity) from stadium
select name, capacity from stadium order by average desc limit 1
select name, capacity from stadium order by average desc limit 1
select count(*) from concert where year = 2014 or year = 2015
select count(*) from concert where year = 2014 or year = 2015
select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id
select t1.location, count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t2.stadium_id
select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t1.stadium_id order by count(*) desc limit 1
select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year > 2013 group by t1.stadium_id order by count(*) desc limit 1
select year from concert group by year order by count(*) desc limit 1
select year from concert group by year order by count(*) desc limit 1
select name from stadium where stadium_id not in (select stadium_id from concert)
select name from stadium where stadium_id not in (select stadium_id from concert)
select country from singer where age > 40 intersect select country from singer where age < 30
select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014
select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014
select t2.concert_name, t3.theme, count(*) from singer as t1 join concert as t2 on t1.concert_id = t2.concert_id join singer as t3 on t1.song_id = t3.song_id group by t1.song_id
select t2.concert_name, t3.theme, count(*) from concert as t1 join singer as t2 on t1.song_id = t2.song_id join concert as t3 on t3.musical_id = t1.musical_id group by t1.musical_id
select t2.name, count(*) from performance as t1 join singer as t2 on t1.song_id = t2.song_id group by t1.song_id
select t2.name, count(*) from performance as t1 join singer as t2 on t1.song_id = t2.song_id group by t1.song_id
select t2.name from performance as t1 join singer as t2 on t1.song_id = t2.song_id where t1.year = 2014
select t2.name from performance as t1 join singer as t2 on t1.song_id = t2.song_id where t1.year = 2014
select t2.name, t2.country from song as t1 join singer as t2 on t1.song_id = t2.song_id where t1.song_name like "%hey%"
select name, country from singer where song_name like '%hey%'
select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2014 intersect select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2015
select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2014 intersect select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2015
select count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t1.capacity = (select max(capacity) from stadium)
select count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t1.capacity = (select max(capacity) from stadium)
select count(*) from pets where weight > 10
select count(*) from pets where weight > 10
select t2.weight from pets as t1 join pets as t2 on t1.petid = t2.petid where t1.age = (select min(age) from pets)
select weight from pets order by age asc limit 1
select max(weight), pettype from pets group by pettype
select max(weight), pettype from pets group by pettype
select count(*) from pets as t1 join has pet as t2 on t1.petid = t2.petid where t1.age > 20
select count(distinct t2.petid) from has as t1 join pets as t2 on t1.petid = t2.petid where t1.age > 20
select count(*) from pets as t1 join has pet as t2 on t1.petid = t2.petid join student as t3 on t2.stuid = t3.stuid where t3.sex = "F" and t2.pet_age = "0.3"
select count(*) from pets as t1 join has student as t2 on t1.stuid = t2.stuid where t2.sex = "F" and t1.pet_age = "(*)"
select count(distinct pettype) from pets
select count(distinct pettype) from pets
select distinct t1.fname from student as t1 join has pet as t2 on t1.stuid = t2.stuid where t2.petid in (select t2.petid from pets as t3 join pets as t4 on t3.petid = t4.petid)
select distinct t1.fname from student as t1 join has pet as t2 on t1.stuid = t2.stuid where t2.petid in (select t2.petid from pets as t3 join pets as t4 on t3.petid = t4.petid)
select fname from student where stuid in (select stuid from has pets) intersect select stuid from has pets
select fname from student where stuid in (select stuid from has pets) intersect select stuid from has pets
select major, age from student except select t1.major, t1.age from student as t1 join has pet as t2 on t1.stuid = t2.stuid where t2.petid = "cat"
select major, age from student where stuid not in (select stuid from has pets)
select stuid from student except select stuid from has pet
select stuid from student except select stuid from has pet
select fname, age from student where stuid in (select stuid from has pets) except select stuid from has pets
select fname from student where stuid in (select stuid from has pets) except select stuid from has pets
select pettype, weight from pets order by age asc limit 1
select pettype, weight from pets order by pet_age asc limit 1
select petid, weight from pets where pet_age > 1
select petid, weight from pets where pet_age > 1
select pettype, avg(pet_age), max(pet_age) from pets group by pettype
select pettype, avg(pet_age), max(pet_age) from pets group by pettype
select pettype, avg(weight) from pets group by pettype
select avg(weight), pettype from pets group by pettype
select distinct t1.fname, t1.age from student as t1 join has pet as t2 on t1.stuid = t2.stuid
select distinct t1.fname, t1.age from student as t1 join has pet as t2 on t1.stuid = t2.stuid
select t2.petid from has as t1 join pets as t2 on t1.petid = t2.petid join student as t3 on t1.stuid = t3.stuid where t3.lname = 'Smith'
select t2.petid from has as t1 join pets as t2 on t1.petid = t2.petid join student as t3 on t1.stuid = t3.stuid where t3.lname = 'Smith'
select count(*), stuid from has pet group by stuid
select count(*), stuid from has pet group by stuid
select t1.fname, t1.sex from student as t1 join has pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1
select t1.fname, t1.sex from student as t1 join has pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1
select lname from student where stuid in (select stuid from has pets)
select lname from student where stuid in (select stuid from has pets) and age = 3
select avg(age) from student where stuid not in (select stuid from has pets)
select avg(age) from student where stuid not in (select stuid from has pets)
select count(*) from continents
select count(*) from continents
select t1.continent, t1.countryname, count(*) from continents as t1 join countries as t2 on t1.continent = t2.continent group by t1.continent
select t1.id, t1.countryname, count(*) from continents as t1 join countries as t2 on t1.continent = t2.continent group by t1.id
select count(*) from countries
select count(*) from countries
select t1.fullname, t1.id, count(*) from car manufacturers as t1 join model list as t2 on t1.id = t2.makeid group by t1.id
select t1.fullname, t1.id, count(*) from car manufacturers as t1 join model list as t2 on t1.id = t2.makeid group by t1.id
select model from cars order by horsepower limit 1
select t1.model from car as t1 join cars data as t2 on t1.id = t2.modelid order by t2.height limit 1
select t2.model from cars as t1 join model list as t2 on t1.modelid = t2.modelid where t1.weight < (select avg(weight) from cars)
select t1.model from model list as t1 join cars as t2 on t1.modelid = t2.id where t2.weight < (select avg(weight) from cars)
select distinct t1.maker from car manufacturers as t1 join cars as t2 on t1.id = t2.makeid where t2.year = 1970
select distinct t1.make from car manufacturers as t1 join model list as t2 on t1.id = t2.modelid where t2.year = 1970
select make, year from cars order by year asc limit 1
select t1.maker, t1.year from car as t1 join cars as t2 on t1.id = t2.modelid order by t2.year limit 1
select distinct model from model list where year > 1980
select distinct model from model list where year > 1980
select count(*), t1.continent from continents as t1 join car makers as t2 on t1.continentid = t2.countryid group by t1.continent
select count(*), t1.continent from continents as t1 join car makers as t2 on t1.contid = t2.countryid group by t1.continent
select t1.countryname from countries as t1 join car makers as t2 on t1.countryid = t2.countryid group by t1.countryname order by count(*) desc limit 1
select t1.countryname from countries as t1 join car makers as t2 on t1.countryid = t2.countryid group by t1.countryname order by count(*) desc limit 1
select count(*), t1.fullname from car manufacturers as t1 join model list as t2 on t1.id = t2.makeid group by t1.makeid
select count(*), t1.id, t1.fullname from car manufacturers as t1 join model list as t2 on t1.id = t2.makeid group by t1.id
select accelerate from cars where model ='make' and sportabout ='sw'
select t1.accel from cars as t1 join model as t2 on t1.modelid = t2.id where t2.make ='sw'
select count(*) from car makers where country = "France"
select count(distinct maker) from manufacturers where country = "France"
select count(*) from model list where country = 'USA'
select count(*) from model list where country = "USA"
select avg(mpg) from cars where cylinders = 4
select avg(mpg) from cars where cylinders = 4
select min(weight) from cars where cylinders = 8 and year = 1974
select min(weight) from cars where cylinders = 8 and year = 1974
select maker, model from model list
select maker, model from model list
select distinct t1.countryname, t1.id from countries as t1 join car manufacturers as t2 on t1.countryid = t2.countryid
select distinct t1.countryname, t1.id from countries as t1 join car manufacturers as t2 on t1.countryid = t2.countryid
select count(*) from cars where horsepower > 150
select count(*) from cars where horsepower > 150
select avg(weight), year from cars group by year
select avg(weight), year from cars group by year
select t1.countryname from countries as t1 join car manufacturers as t2 on t1.countryid = t2.countryid group by t1.countryname having count(*) >= 3
select countryname from countries where continent = "Europe" group by countryname having count(*) >= 3
select max(t1.hp), t2.make from cars as t1 join model as t2 on t1.modelid = t2.modelid where t1.cylinders = 3
select max(hp), t1.make from cars as t1 join model list as t2 on t1.modelid = t2.modelid where t1.cylinders = 3
select model from cars data group by model order by sum(mpg) desc limit 1
select t2.model from cars as t1 join model list as t2 on t1.modelid = t2.modelid order by t1.mpg desc limit 1
select avg(horse) from cars where year < 1980
select avg(horse) from cars where year < 1980
select avg(t1.edispl) from cars as t1 join model as t2 on t1.modelid = t2.modelid where t2.model = "voluvo"
select avg(edispl) from cars
select max(accelerator), cylinders from cars group by cylinders
select max(accelerator), cylinders from cars group by cylinders
select model from model list group by modelid order by count(*) desc limit 1
select model from model group by model order by count(*) desc limit 1
select count(*) from cars where cylinders > 4
select count(*) from cars where cylinders > 4
select count(*) from cars where year = 1980
select count(*) from cars where year = 1980
select count(*) from car manufacturers as t1 join model list as t2 on t1.id = t2.modelid where t1.make = "American Motor Co"
select count(*) from model list as t1 join car manufacturers as t2 on t1.manufacturer = t2.id where t2.make = "American Motor Co"
select t1.fullname, t1.id from car manufacturers as t1 join model list as t2 on t1.id = t2.modelid group by t1.id having count(*) > 3
select t1.name, t1.id from car manufacturers as t1 join model list as t2 on t1.id = t2.makerid group by t1.id having count(*) > 3
select distinct t2.model from cars as t1 join model list as t2 on t1.modelid = t2.modelid join car manufacturers as t3 on t2.manufacturer = t3.id where t3.fullname = 'General Motors' or t1.weight > 3500
select distinct t1.model from model list as t1 join cars as t2 on t1.modelid = t2.modelid where t2.make = "General Motors" or t2.weight > 3500
select year from cars where weight < 3000 intersect select year from cars where weight > 4000
select distinct year from cars where weight < 4000 intersect select distinct year from cars where weight > 3000
select horsepower from cars order by accelerate desc limit 1
select horsepower from cars order by accelerate desc limit 1
select max(cylinders), t1.model from cars as t1 join cars as t2 on t1.modelid = t2.modelid where t1.speed = (select min(speed) from cars)
select t1.model, t1.cylinders, count(*) from cars as t1 join cars as t2 on t1.model = t2.modelid group by t1.modelid order by count(*) asc limit 1
select count(*) from cars where accelerate > (select max(accel) from cars)
select count(*) from cars where accelerate > (select max(accel) from cars)
select count(*) from (select country from car makers group by countryid having count(*) > 2
select count(*) from (select country from car makers group by countryid having count(*) > 2).
select count(*) from cars where cylinders > 6
select count(*) from cars where cylinders > 6
select model from cars where cylinders = 4 order by horsepower desc limit 4
select model from cars where cylinders = 4 order by horsepower desc limit 1
select t1.id, t1.make from cars as t1 join model list as t2 on t1.modelid = t2.modelid where t1.height > (select min(height) from cars) and t2.make > 3
select t1.makeid, t1.model from cars as t1 join cars as t2 on t1.model = t2.modelid where t2.horsepower < 4
select max(mpg) from cars where cylinders = 8 or year < 1980
select max(mpg) from cars where cylinders = 8 or year < 1980
select model from model list where weight < 3500 except select t2.model from cars as t1 join model list as t2 on t1.modelid = t2.modelid where t1.make = 'Ford Motor Co'
select distinct model from model list where weight < 3500 except select distinct model from model where make = "Ford Motor Co."
select countryname from countries except select t1.countryname from countries as t1 join car manufacturers as t2 on t1.countryid = t2.countryid
select countryname from countries except select t1.countryname from countries as t1 join car manufacturers as t2 on t1.countryid = t2.countryid
select t1.id, t1.maker from car manufacturers as t1 join model list as t2 on t1.id = t2.makeid group by t1.id having count(*) >= 2 intersect select t1.id, t1.maker from car manufacturers as t1 join model list as t2 on t1.id = t2.makeid group by t1.id having count(*) > 3
select t1.id, t1.maker from car manufacturers as t1 join model list as t2 on t1.id = t2.modelid group by t1.id having count(*) >= 2 intersect select t1.id, t1.maker from car manufacturers as t1 join model list as t2 on t1.id = t2.modelid group by t1.id having count(*) > 3
select t1.id, t1.countryname from countries as t1 join model list as t2 on t1.countryid = t2.countryid group by t1.id having count(*) > 3 union select t1.id, t1.countryname from countries as t1 join model list as t2 on t1.countryid = t2.countryid where t2.model = 'fiat'
select t1.id, t1.countryname from countries as t1 join car makers as t2 on t1.countryid = t2.countryid group by t1.id having count(*) > 3 union select t1.id, t1.countryname from countries as t1 join model list as t2 on t1.countryid = t2.countryid where t2.model = 'F'
select distinct t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.name = "JetBlue Airways"
select t1.country from airlines as t1 join routes as t2 on t1.uid = t2.airline where t2.name = "Japan"
select t1.abbreviation from airlines as t1 join routes as t2 on t1.uid = t2.airline where t2.name = "JetBlue Airways"
select abbreviation from airlines where airline = "Japan"
select airline, abbreviation from airlines where country = "USA"
select airline, abbreviation from airlines where country = "USA"
select airportcode, airportname from airports where city = " Anthony"
select t2.airportcode, t1.airportname from airports as t1 join airports as t2 on t1.airportcode = t2.airportcode where t1.city = " Anthony"
select count(*) from airlines
select count(*) from airlines
select count(*) from airports
select count(*) from airports
select count(*) from flights
select count(*) from flights
select airline from airlines where abbreviation like '%ual%'
select airline from airlines where abbreviation = 'UAL'
select count(*) from airlines where country = "USA"
select count(*) from airlines where country = "USA"
select city, country from airports where airportcode = "Alton"
select city, country from airports where airportcode = "Alton"
select airportname from airports where airportcode = 'AKO'
select airportname from airports where airportcode = 'AKO'
select airportname from airports where city = 'Aberdeen'
select airportname from airports where country = "Aberdeen"
select count(*) from airlines as t1 join routes as t2 on t1.uid = t2.airline where t1.country = 'APG'
select count(*) from airlines as t1 join routes as t2 on t1.uid = t2.airline where t1.country = 'APG'
select count(*) from routes where destairport = "ATO"
select count(*) from flights where country = "ATO"
select count(*) from airports as t1 join routes as t2 on t1.city = t2.sourceairport where t1.city = "Aberdeen"
select count(*) from airports as t1 join routes as t2 on t1.city = t2.sourceairport where t1.country = "Aberdeen"
select count(*) from airports as t1 join routes as t2 on t1.airportcode = t2.airport where t1.city = "Aberdeen"
select count(*) from airports as t1 join routes as t2 on t1.city = t2.sourceairport where t1.country = "Aberdeen"
select count(*) from airports as t1 join routes as t2 on t1.airport = t2.airport where t1.city = 'Aberdeen' and t2.destroport = 'Ashley'
select count(*) from airlines as t1 join routes as t2 on t1.uid = t2.airportno where t1.country = "Aberdeen" and t2.airportname = "Ashley"
select count(*) from airlines as t1 join routes as t2 on t1.uid = t2.airline where t1.name = 'JetBlue Airways'
select count(*) from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.company = "Joinblue Airways"
select count(*) from airlines as t1 join routes as t2 on t1.uid = t2.airline where t1.country = 'ASY'
select count(*) from airlines as t1 join routes as t2 on t1.uid = t2.airline where t1.country = "ASY"
select count(*) from airlines as t1 join routes as t2 on t1.uid = t2.airline where t1.country = 'AHD'
select count(*) from airlines as t1 join routes as t2 on t1.uid = t2.airline where t1.country = "AHD"
select count(*) from airlines as t1 join routes as t2 on t1.uid = t2.airline where t1.country = 'Aberdeen'
select count(*) from airlines as t1 join routes as t2 on t1.uid = t2.airline where t1.country = "Aberdeen"
select city from airports group by city order by count(*) desc limit 1
select city from airports group by city order by count(*) desc limit 1
select t1.city from airports as t1 join flights as t2 on t1.airportcode = t2.airportcode group by t1.city order by count(*) desc limit 1
select city from airports group by city order by count(*) desc limit 1
select t1.airportcode from airports as t1 join flights as t2 on t1.city = t2.sourceairport group by t2.sourceairport order by count(*) desc limit 1
select t1.airportcode from airports as t1 join flights as t2 on t1.city = t2.sourceairport group by t2.sourceairport order by count(*) desc limit 1
select airportcode from airports group by airportcode order by count(*) limit 1
select airportcode from flights group by airportcode order by count(*) limit 1
select t1.aircraft from airlines as t1 join flights as t2 on t1.uid = t2.airport group by t2.airport order by count(*) desc limit 1
select t1.aircraft from airlines as t1 join flights as t2 on t1.uid = t2.airport group by t1.uid order by count(*) desc limit 1
select t1.address, t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airline group by t2.address order by count(*) limit 1
select t1.abbreviation, t1.country from airlines as t1 join flights as t2 on t1.uid = t2.airilne group by t2.airilne order by count(*) limit 1
select t2.address from airports as t1 join flights as t2 on t1.city = t2.airport where t1.airportname = "AHD"
select t1.aircraft from airlines as t1 join flights as t2 on t1.uid = t2.aircraft where t2.sourceairport = "AHD"
select t2.address from airports as t1 join flights as t2 on t1.city = t2.sourceairport where t1.airportname = "AHD"
select t1.aircraft from airlines as t1 join flights as t2 on t1.uid = t2.aircraft where t2.detourport = "AHD"
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.airportcode = 'APG' intersect select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.airportcode = 'CVO'
select t1.aircraft from airlines as t1 join flights as t2 on t1.uid = t2.aircraftno where t2.sourceairport = "APG" intersect select t1.aircraft from airlines as t1 join flights as t2 on t1.uid = t2.aircraftno where t2.sourceairport = "CVO"
select t1.aero from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.airportcode = 'CVO' except select t1.aero from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.airportcode = 'APG'
select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.airportcode = "CVO" except select t1.airline from airlines as t1 join flights as t2 on t1.uid = t2.airline where t2.airportcode = "APG"
select t1.aircraft from airlines as t1 join flights as t2 on t1.uid = t2.aircraft group by t1.uid having count(*) >= 10
select t1.aircraft from airlines as t1 join flights as t2 on t1.uid = t2.aircraft group by t1.uid having count(*) >= 10
select t1.aircraft from airlines as t1 join flights as t2 on t1.uid = t2.aircraft group by t2.aircraft having count(*) < 200
select t1.aircraft from airlines as t1 join flights as t2 on t1.uid = t2.aircraftno group by t1.uid having count(*) < 200
select t2.flightno from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.company = "United Airlines"
select t1.flightno from airlines as t1 join flights as t2 on t1.uid = t2.airline where t1.company = "United Airlines"
select t2.flightno from airports as t1 join flights as t2 on t1.airport = t2.sourceairport where t1.airportname = "APG"
select flightno from flights where descendedport = "APG"
select t2.flightno from airports as t1 join flights as t2 on t1.city = t2.sourceairport where t1.airportname = "APG"
select t2.flightno from airlines as t1 join flights as t2 on t1.uid = t2.airport where t1.country = "APG"
select t2.flightno from airports as t1 join flights as t2 on t1.airport = t2.airport where t1.city = "Aberdeen"
select t2.flightno from airports as t1 join flights as t2 on t1.city = t2.sourceairport where t1.country = "Aberdeen"
select t3.flightno from airports as t1 join flights as t2 on t1.airportcode = t2.airportcode join airports as t3 on t2.airportcode = t3.airportcode where t1.city = "Aberdeen"
select t2.flightno from airports as t1 join flights as t2 on t1.airport = t2.sourceairport where t1.country = "Aberdeen"
select count(*) from airports as t1 join routes as t2 on t1.airportcode = t2.airport where t1.city = "Adams" or t1.country = "Birn"
select count(*) from airports as t1 join routes as t2 on t1.airportcode = t2.airport where t1.country = "Adaberg" or t1.country = "Abilene"
select airportname from airports where airportcode not in (select airport from flights)
select airportname from airports except select t1.airportname from airports as t1 join flights as t2 on t1.airportcode = t2.airportcode where t2.flightno = 1
select count(*) from employee
select count(*) from employee
select name from employee order by age asc
select name from employee order by age asc
select city, count(*) from employee group by city
select city, count(*) from employee group by city
select city from employee where age > 30 group by city having count(*) > 1
select city from employee where age < 30 group by city having count(*) > 1
select location, count(*) from shop group by location
select location, count(*) from shop group by location
select manager_name, district from shop order by number_products desc limit 1
select manager_name, district from shop order by number_products desc limit 1
select min(number_products), max(number_products) from shop
select min(number_products), max(number_products) from shop
select name, location, district from shop order by number_products desc
select name, location, district from shop order by number_products desc
select name from shop where number_products > (select avg(number_products) from shop)
select name from shop where number_products > (select avg(number_products) from shop)
select t2.name from evaluation as t1 join employee as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by count(*) desc limit 1
select t2.name from evaluation as t1 join employee as t2 on t1.employee_id = t2.employee_id group by t1.employee_id order by count(*) desc limit 1
select t2.name from evaluation as t1 join employee as t2 on t1.employee_id = t2.employee_id order by t1.year_awarded desc limit 1
select t2.name from evaluation as t1 join employee as t2 on t1.employee_id = t2.employee_id order by t1.year_awarded desc limit 1
select name from employee where employee_id not in (select employee_id from evaluation)
select name from employee where employee_id not in (select employee_id from evaluation)
select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count(*) desc limit 1
select t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count(*) desc limit 1
select name from shop where shop_id not in (select shop_id from hiring)
select name from shop where shop_id not in (select shop_id from hiring)
select t2.name, count(*) from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id
select count(*), t2.name from hiring as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t2.name
select sum(bonus) from evaluation
select sum(bonus) from evaluation
select * from hiring
select * from hiring
select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000
select district from shop where number_products < 3000 intersect select district from shop where number_products > 10000
select count(distinct location) from shop
select count(distinct location) from shop
select count(*) from documents
select count(*) from documents
select document_id, document_name, document_description from documents
select document_id, document_name, document_description from documents
select document_name, template_id from documents where document_description like '%w%'
select document_name, template_id from documents where document_description like "%w%"
select document_id, template_id, document_description from documents where document_name = "Robbin CV"
select document_id, template_id, document_description from documents where document_name = "Robbin CV"
select count(distinct template_id) from documents
select count(distinct template_id) from documents
select count(*) from documents where template_type_code = 'PPT'
select count(*) from documents where template_type_code = "PPT"
select template_id, count(*) from documents group by template_id
select template_id, count(*) from documents group by template_id
select t1.theme_id, t1.theme_type_code from templates as t1 join documents as t2 on t1.theme_id = t2.theme_id group by t1.theme_id order by count(*) desc limit 1
select t1.theme_id, t1.theme_type_code from templates as t1 join documents as t2 on t1.theme_id = t2.theme_id group by t1.theme_id order by count(*) desc limit 1
select template_id from documents group by template_id having count(*) > 1
select template_id from documents group by template_id having count(*) > 1
select template_id from templates except select template_id from documents
select template_id from templates except select template_id from documents
select count(*) from templates
select count(*) from templates
select template_id, version_number, template_type_code from templates
select template_id, version_number, template_type_code from templates
select distinct template_type_code from templates
select distinct template_type_code from templates
select template_id from templates where template_type_code = "PP" or template_type_code = "PPT"
select template_id from templates where template_type_code = "PP" or template_type_code = "PPT"
select count(*) from templates where template_type_code = "CV"
select count(*) from templates where template_type_code = "CV"
select version_number, template_type_code from templates where version_number > 5
select version_number, template_type_code from templates where version_number > 5
select template_type_code, count(*) from templates group by template_type_code
select template_type_code, count(*) from templates group by template_type_code
select template_type_code from templates group by template_type_code order by count(*) desc limit 1
select template_type_code from templates group by template_type_code order by count(*) desc limit 1
select template_type_code from templates group by template_type_code having count(*) < 3
select template_type_code from templates group by template_type_code having count(*) < 3
select version_number, template_type_code from templates order by version_number asc limit 1
select version_number, template_type_code from templates order by version_number asc limit 1
select t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t
select t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t1.t
select document_name from documents where template_type_code = "BK"
select document_name from documents where template_code = "BK"
select t1.type_type_code, count(*) from templates as t1 join documents as t2 on t1.type_id = t2.type_id group by t1.type_type_code
select t1.type_type_code, count(*) from templates as t1 join documents as t2 on t1.type_id = t2.type_id group by t1.type_type_code
select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code order by count(*) desc limit 1
select t1.template_type_code from templates as t1 join documents as t2 on t1.template_id = t2.template_id group by t1.template_type_code order by count(*) desc limit 1
select template_type_code from templates except select template_type_code from documents
select template_type_code from templates except select template_type_code from documents
select template_type_code, template_type_description from reference template types
select template_type_code, template_type_description from reference template types
select t1.theme_type_description from reference template types as t1 join templates as t2 on t1.type_code = t2.type_code where t2.type_code = "AD"
select t1.theme_type_description from reference template types as t1 join templates as t2 on t1.type_type_code = t2.type_type_code where t2.type_code = "AD"
select template_type_code from reference template types where template_type_description = "Book"
select template_type_code from reference template types where template_type_description = "Book"
select distinct t1.template_type_description from reference template types as t1 join documents as t2 on t1.template_type_code = t2.template_type_code
select distinct t1.theme_type_description from reference template types as t1 join documents as t2 on t1.theme_type_code = t2.theme_type_code
select t1.template_id from templates as t1 join reference template types as t2 on t1.type_code = t2.type_code where t2.template_type_description = "Presentation"
select t1.template_id from templates as t1 join reference template types as t2 on t1.type_code = t2.type_code where t2.type_description = 'Presentation'
select count(*) from paragraphs
select count(*) from paragraphs
select count(*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Summer Show"
select count(*) from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Summer Show"
select other_details from paragraphs where paragraph_text like '%korea%'
select other_details from paragraphs where paragraph_text like '%korea%'
select t1.paragraph_id, t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Welcome to NY"
select t1.paragraph_id, t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Welcome to NY"
select t2.paragraph_text from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id where t1.document_name = "Customer reviews"
select t1.paragraph_text from paragraphs as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_name = "Customer reviews"
select document_id, count(*) from paragraphs group by document_id order by document_id
select document_id, count(*) from paragraphs group by document_id order by document_id
select document_id, document_name, count(*) from paragraphs group by document_id
select document_id, document_name, count(*) from paragraphs group by document_id
select document_id from paragraphs group by document_id having count(*) >= 2
select document_id from paragraphs group by document_id having count(*) >= 2
select t1.document_id, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id group by t1.document_id order by count(*) desc limit 1
select t1.document_id, t1.document_name from documents as t1 join paragraphs as t2 on t1.document_id = t2.document_id group by t1.document_id order by count(*) desc limit 1
select document_id from paragraphs group by document_id order by count(*) asc limit 1
select document_id from paragraphs group by document_id order by count(*) asc limit 1
select document_id from paragraphs group by document_id having count(*) between 1 and 2
select document_id from paragraphs group by document_id having count(*) between 1 and 2
select document_id from paragraphs where paragraph_text like '%brazil%' intersect select document_id from paragraphs where paragraph_text like '%ireland%'
select document_id from paragraphs where paragraph_text like '%brazil%' intersect select document_id from paragraphs where paragraph_text like '%ireland%'
select count(*) from teacher
select count(*) from teacher
select name from teacher order by age asc
select name from teacher order by age asc
select age, hometown from teacher
select age, hometown from teacher
select name from teacher where hometown!= 'Little Lever Urban District'
select name from teacher where hometown!= 'Little Lever Urban District'
select name from teacher where age = 32 or age = 33
select name from teacher where age = 32 or age = 33
select hometown from teacher order by age asc limit 1
select hometown from teacher order by age asc limit 1
select hometown, count(*) from teacher group by hometown
select hometown, count(*) from teacher group by hometown
select hometown from teacher group by hometown order by count(*) desc limit 1
select hometown from teacher group by hometown order by count(*) desc limit 1
select hometown from teacher group by hometown having count(*) >= 2
select hometown from teacher group by hometown having count(*) >= 2
select t2.name, t3.course_id from course arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id
select t2.name, t3.course_id from course as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id
select t2.name, t3.course_id from course arrange as t1 join instructor as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id order by t2.name
select t2.name, t3.course_id from course as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id order by t2.name
select t2.name from course as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id join course as t3 on t1.course_id = t3.course_id
select t2.name from course as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id
select t2.name, count(*) from course arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name
select t2.name, count(*) from course as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name
select t2.name from course arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t2.name having count(*) >= 2
select t2.name from course arrange as t1 join teacher as t2 on t1.teacher_id = t2.teacher_id group by t1.teacher_id having count(*) >= 2
select name from teacher where teacher_id not in (select teacher_id from course arrange)
select name from teacher where teacher_id not in (select teacher_id from course arrange)
select count(*) from customer where age < 30
select name from customer where level_of_membership > 4 order by level_of_membership
select avg(age) from customer where level_of_membership!= 4
select name, level_of_membership from customer where level_of_membership > 4 order by age
select t1.museum_id, t1.name from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t1.museum_id order by num_of_staff desc limit 1
select avg(num_of_staff) from museum where open_year < 2009
select open_year, num_of_staff from museum where name = 'Paloma'
select name from museum where num_of_staff > (select min(num_of_staff) from museum where open_year > 2010)
select t1.id, t1.name, t1.age from customer as t1 join visit as t2 on t1.id = t2.customer_id group by t1.id having count(*) > 1
select t1.id, t1.name, t1.level_of_membership from customer as t1 join visit as t2 on t1.id = t2.customer_id group by t2.customer_id order by sum(t2.total_spent) desc limit 1
select t1.museum_id, t1.name from museum as t1 join visit as t2 on t1.museum_id = t2.museum_id group by t1.museum_id order by count(*) desc limit 1
select name from museum where museum_id not in (select museum_id from visit)
select t1.name, t1.age from customer as t1 join visit as t2 on t1.id = t2.customer_id group by t2.customer_id order by sum(t2.num_of_ticket) desc limit 1
select avg(num_of_ticket), max(num_of_ticket) from visit
select sum(total_spent) from visit as t1 join customer as t2 on t1.customer_id = t2.id where t2.level_of_membership = 1
select t1.name from customer as t1 join visit as t2 on t1.id = t2.customer_id join museum as t3 on t2.museum_id = t3.museum_id where t3.open_year < 2009 intersect select t1.name from customer as t1 join visit as t2 on t1.id = t2.customer_id join museum as t3 on t2.museum_id = t3.museum_id where t3.open_year > 2011
select count(*) from visitor where id not in ( select visitor_id from visit where open_year > 2010 );
select count(*) from museum where open_year > 2013 or open_year < 2008
select count(*) from players
select count(*) from players
select count(*) from matches
select count(*) from matches
select first_name, birth_date from players where country_code = "USA"
select first_name, birth_date from players where country_code = "USA"
select avg(loser_age), avg(winner_age) from matches
select avg(loser_age), avg(winner_age) from matches
select avg(winner_rank_points) from matches
select avg(winner_rank_points), t2.winner_name from matches as t1 join rankings as t2 on t1.rank_date = t2.rank_date join winners as t3 on t2.winner_id = t3.winner_id
select max(loser_rank_points) from matches
select loser_rank_points from matches order by loser_rank_points desc limit 1
select count(distinct country_code) from players
select count(distinct country_code) from players
select count(distinct loser_name) from players
select count(distinct loser_name) from matches
select tourney_name from matches group by tourney_name having count(*) > 10
select tourney_name from matches group by tourney_name having count(*) > 10
select t1.winner_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.year = 2013 intersect select t1.winner_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.year = 2016
select t1.player_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.year = 2013 intersect select t1.player_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.year = 2016
select count(*) from matches where year = 2013 or year = 2016
select count(*) from matches where year = 2013 or year = 2016
select t1.country_code, t2.first_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tournament_name = "WTA Championships" intersect select t1.country_code, t2.first_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id where t2.tournament_name = "Australian Open"
select t2.first_name, t2.country_code from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.tournament_name = "WTA Championships" intersect select t2.first_name, t2.country_code from matches as t1 join players as t2 on t1.winner_id = t2.player_id where t1.tournament_name = "Australian Open"
select first_name, country_code from players order by birth_date desc limit 1
select first_name, country_code from players order by birth_date desc limit 1
select first_name, last_name from players order by birth_date
select first_name, last_name from players order by birth_date
select first_name, last_name from players where hand = "left" order by birth_date
select first_name, last_name from players where hand = "left" order by birth_date
select t1.first_name, t1.country_code from players as t1 join tours as t2 on t1.player_id = t2.player_id group by t2.player_id order by count(*) desc limit 1
select t1.first_name, t1.country_code from players as t1 join tours as t2 on t1.player_id = t2.player_id group by t2.player_id order by count(*) desc limit 1
select year from matches group by year order by count(*) desc limit 1
select year from matches group by year order by count(*) desc limit 1
select t1.winner_name, t1.winner_rank_points from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.winner_id order by count(*) desc limit 1
select t1.winner_name, t1.winner_rank_points from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.winner_id order by count(*) desc limit 1
select t2.winner_name from rankings as t1 join players as t2 on t1.player_id = t2.player_id join events as t3 on t1.tournament_id = t3.tournament_id where t3.tournament_name = "Australian open" and t3.rank_points = (select max(rank_points) from rankings)
select t2.winner_name from rankings as t1 join players as t2 on t1.player_id = t2.player_id join events as t3 on t1.tournament_id = t3.tournament_id where t3.tournament_name = "Australian open" group by t2.winner_name order by t3.winner_rank_points desc limit 1
select t2.loser_name, t2.winner_name from matches as t1 join players as t2 on t1.loser_id = t2.loser_id order by t1.minutes desc limit 1
select t1.winner_name, t1.loser_name from players as t1 join matches as t2 on t1.player_id = t2.winner_id order by t2.year desc limit 1
select t1.player_id, t2.first_name, avg(t1.ranking_date) from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t2.player_id
select t1.first_name, avg(t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t2.player_id
select sum(t1.ranking_points), t2.first_name from rankings as t1 join players as t2 on t1.player_id = t2.player_id group by t2.player_id
select t1.first_name, sum(t2.ranking_points) from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.player_id
select country_code, count(*) from players group by country_code
select country_code, count(*) from players group by country_code
select country_code from players group by country_code order by count(*) desc limit 1
select country_code from players group by country_code order by count(*) desc limit 1
select country_code from players group by country_code having count(*) > 50
select country_code from players group by country_code having count(*) > 50
select ranking_date, count(*) from rankings group by ranking_date
select ranking_date, count(*) from rankings group by ranking_date
select count(*), year from matches group by year
select count(*), year from matches group by year
select t1.winner_name, t1.winner_rank from players as t1 join matches as t2 on t1.player_id = t2.winner_id order by t2.birth_date asc limit 3
select t1.first_name, t1.last_name, t1.winner_rank from players as t1 join matches as t2 on t1.player_id = t2.winner_id order by t2.birth_date asc limit 3
select count(distinct winner_entry) from matches where tourney_name = "WTA Championships" intersect select count(distinct winner_entry) from matches where tourney_name = "left"
select count(*) from players as t1 join events as t2 on t1.player_id = t2.winner_id where t2.winner_hand = "left"
select t1.first_name, t1.country_code, t1.birth_date from players as t1 join rankings as t2 on t1.player_id = t2.winner_id order by t2.winning_rank_points desc limit 1
select t1.first_name, t1.country_code, t1.birth_date from players as t1 join rankings as t2 on t1.player_id = t2.player_id group by t1.player_id order by count(*) desc limit 1
select hand_type, count(*) from players group by hand_type
select hand, count(*) from players group by hand
select count(*) from ship where disposition_of_ship = 'Captured'
select name, tonnage from ship order by name desc
select name, date, result from battle
select max(t1.killed), min(t1.killed) from death as t1 join battle as t2 on t1.force_by_ship_id = t2.id group by t1.killed
select avg(injured), count(*) from death group by injured
select killed, injured from death where tonnage = 't'
select name, result from battle where bulgarian_commander not in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander from battle where he is in (select bulgarian_commander
select distinct t1.id, t1.name from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.ship_type = 'Brig'
select t1.id, t1.name from battle as t1 join death as t2 on t1.id = t2.force_by_ship_id group by t1.id having sum(t2.killed) > 10
select t1.id, t1.name from ship as t1 join death as t2 on t1.id = t2.created_by_ship_id group by t1.id order by sum(t2.injured) desc limit 1
select distinct t1.name from battle as t1 join army as t2 on t1.galoyan = t2.bulgar_commander intersect select distinct t1.name from battle as t1 join army as t2 on t1.galoyan = t2.bulgar_commander where t2.latin_commander = 'Baldwin I'
select count(distinct result) from battle
select count(*) from battle where id not in ( select lost_in_battle from ship where tonnage = 225 )
select t1.name, t1.date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = 'Lettice' intersect select t1.name, t1.date from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.name = 'HMS Atalanta'
select name, result, bulgarian_commander from battle except select t1.name, t1.result, t1.bulgar_commander from battle as t1 join ship as t2 on t1.id = t2.lost_in_battle where t2.location = 'English Channel'
select note from death where note like '%east%'
select address_id from addresses where line_1, line_2 intersect select address_id from addresses where line_1 and line_2
select line_1, line_2 from addresses
select count(*) from courses
select count(*) from courses
select t2.course_description from courses as t1 join sections as t2 on t1.course_id = t2.course_id where t1.course_name = "Math"
select course_description from courses
select zip_postcode from addresses where city = "Port Chelsea"
select zip_postcode from addresses where city like "%port_chelsea%"
select t1.department_name, t2.department_id from departments as t1 join degree programs as t2 on t1.department_id = t2.department_id group by t2.department_id order by count(*) desc limit 1
select t1.department_name, t1.department_id from departments as t1 join degree programs as t2 on t1.department_id = t2.department_id group by t1.department_id order by count(*) desc limit 1
select count(distinct department_id) from degree programs
select count(distinct department_id) from degree programs
select count(distinct degree_name) from degree programs
select count(distinct degree_program_id) from degree programs
select count(*) from departments as t1 join degree programs as t2 on t1.department_id = t2.department_id where t1.department_name = "engineering"
select count(*) from departments as t1 join degree programs as t2 on t1.department_id = t2.department_id where t1.department_name = "engineering"
select section_name, section_description from sections
select section_name, section_description from sections
select t1.course_name, t1.course_id from courses as t1 join sections as t2 on t1.course_id = t2.course_id group by t1.course_id having count(*) <= 2
select t1.course_name, t1.course_id from courses as t1 join sections as t2 on t1.course_id = t2.course_id group by t1.course_id having count(*) < 2
select section_name from sections order by section_name
select section_name from sections order by section_name
select t1.semester_name, t1.semester_id from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id group by t1.semester_id order by count(*) desc limit 1
select t1.semester_name, t1.ssn, count(*) from semesters as t1 join student_enrolment as t2 on t1.semester_id = t2.semester_id group by t1.semester_id order by count(*) desc limit 1
select department_description from departments where department_name like "%computer%"
select department_description from departments where department_name like "%computer%"
select t1.first_name, t1.middle_name, t1.last_name, t1.student_enrolment_id from students as t1 join student_enrolment as t2 on t1.student_enrolment_id = t2.student_enrolment_id group by t1.student_enrolment_id having count(*) = 2
select t1.first_name, t1.middle_name, t1.student_id from students as t1 join student_enrolment as t2 on t1.student_enrolment_id = t2.student_enrolment_id group by t1.student_id having count(*) = 2
select t2.first_name, t2.middle_name, t2.last_name from student enrolment as t1 join students as t2 on t1.student_enrolment_id = t2.student_id where t1.degree_program_id = 'Bachelor'
select t2.first_name, t2.middle_name, t2.last_name from student_enrolment as t1 join students as t2 on t1.student_id = t2.student_id where t1.degree_program_id = 'Bachelor'
select t1.degree_program_id from student enrolment as t1 join student_enrolment courses as t2 on t1.student_enrolment_id = t2.student_enrolment_id group by t1.degree_program_id order by count(*) desc limit 1
select t1.degree_summary_name from degrees as t1 join student_enrolment as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_summary_name order by count(*) desc limit 1
select t1.student_enrolment_id, t2.degree_program_id from student enrolment as t1 join courses as t2 on t1.course_id = t2.course_id group by t1.student_enrolment_id order by count(*) desc limit 1
select t1.degree_program_id, t2.degree_summary_description from student_enrolment as t1 join degrees as t2 on t1.degree_program_id = t2.degree_program_id group by t1.degree_program_id order by count(*) desc limit 1
select t1.student_id, t2.first_name, t2.last_name, count(*) from student_enrolment as t1 join students as t2 on t1.student_enrolment_id = t2.student_enrolment_id group by t1.student_id order by count(*) desc limit 1
select t1.first_name, t1.middle_name, t1.last_name, count(*) from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id group by t1.student_id order by count(*) desc limit 1
select semester_name from semesters where semester_id not in (select semester_id from student_enrolment)
select semester_name from semesters where semester_id not in (select semester_id from student_enrolment)
select distinct t1.course_name from courses as t1 join student_enrolment courses as t2 on t1.course_id = t2.course_id
select distinct t1.course_name from courses as t1 join student_enrolment as t2 on t1.course_id = t2.course_id
select t1.course_name from courses as t1 join student_enrolment courses as t2 on t1.course_id = t2.course_id group by t1.course_name order by count(*) desc limit 1
select t1.course_name from courses as t1 join student_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_name order by count(*) desc limit 1
select last_name from students where current_address_id not in (select current_address_id from student_enrolment)
select last_name from students where state_province_county = "North Carolina" except select t1.last_name from students as t1 join student_enrolment as t2 on t1.student_id = t2.student_id join addresses as t3 on t2.address_id = t3.address_id where t2.degree_program_id = "COMPUTER LITERACY"
select t1.transcript_date, t1.transcript_id from transcripts as t1 join courses as t2 on t1.course_id = t2.course_id group by t1.transcript_id having count(*) >= 2
select t1.transcript_date, t1.transcript_id from transcripts as t1 join courses as t2 on t1.course_id = t2.course_id group by t1.transcript_id having count(*) >= 2
select cell_mobile_number from students where first_name = "Timmothy" and last_name = "Ward"
select cell_mobile_number from students where first_name = "Timmothy" and last_name = "Ward"
select first_name, middle_name, last_name from students order by date_first_registered
select first_name, middle_name, last_name from students order by date_first_registered
select first_name, middle_name, last_name from students order by date_first_registered limit 1
select first_name, middle_name, last_name from students order by date_first_registered limit 1
select first_name from students where current_address_id not in (select permanent_address_id from students)
select first_name from students where permanent_address_id differ from students
select t2.address_id, t1.line_1, t1.line_2 from addresses as t1 join students as t2 on t1.address_id = t2.address_id group by t2.address_id order by count(*) desc limit 1
select t2.address_id, t1.line_1, t1.line_2 from addresses as t1 join students as t2 on t1.address_id = t2.address_id group by t2.address_id order by count(*) desc limit 1
select avg(transcript_date) from transcripts
select avg(transcript_date) from transcripts
select date_first_registered, date_first_registered from transcripts order by date_first_registered
select transcript_date, other_details from transcripts order by transcript_date asc limit 1
select count(*) from transcripts
select count(*) from transcripts
select max(transcript_date) from transcripts
select max(transcript_date) from transcripts
select count(*), t1.course_id from courses as t1 join student_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_id
select max(t1.course_id), t2.course_id from transcripts as t1 join courses as t2 on t1.course_id = t2.course_id group by t2.course_id
select t1.transcript_date, t1.transcript_id from transcripts as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count(*) asc limit 1
select t1.transcript_date, t1.transcript_id from transcripts as t1 join transcripts as t2 on t1.transcript_id = t2.transcript_id group by t1.transcript_id order by count(*) asc limit 1
select t1.semester_id from student_enrolment as t1 join students as t2 on t1.student_id = t2.student_id where t2.degree_program_id = 'MA' intersect select t1.semester_id from student_enrolment as t1 join students as t2 on t1.student_id = t2.student_id where t2.degree_program_id = 'B'
select semester_id from student_enrolment where degree_program_id = 'MA' intersect select semester_id from student_enrolment where degree_program_id = 'Bachelor'
select count(distinct address_id) from students
select distinct t1.address_id from addresses as t1 join students as t2 on t1.address_id = t2.address_id
select other_student_details from students order by other_student_details
select other_student_details from students order by other_student_details
select section_name from sections
select section_description from sections where section_name = "h"
select first_name from students where permanent_address_id = "Haiti" or cell_mobile_number = "09700166592"
select first_name from students where permanent_address_id = "Haiti" or cell_mobile_number = "09700166592"
select title from cartoon order by title
select title from cartoon order by title
select t2.title from cartoon as t1 join video as t2 on t1.id = t2.directed_by where t1.title = "Ben Jones"
select title from cartoon where directed_by = "Ben Jones"
select count(*) from cartoon where written_by = "Joseph kuhr"
select count(*) from cartoon where written_by = "James Kuhr"
select title, directed_by from cartoon order by original_air_date
select title, directed_by from cartoon order by air_date
select title from cartoon where directed_by = "Ben Jones" or directed_by = "Brandon Vietti"
select title from cartoon where directed_by = "Ben Jones" or directed_by = "Ben Vietti"
select country, count(*) from tv channel group by country order by count(*) desc limit 1
select country, count(*) from tv channel group by country order by count(*) desc limit 1
select count(distinct series_name), count(distinct content) from tv channel
select count(distinct t2.series_name), count(distinct t1.content) from tv channel as t1 join tv series as t2 on t1.id = t2.channel
select content from tv channel where serial_name = "Sky Radio"
select content from tvseries where series_name = "Sky Radio"
select package_option from tv channel where serial_name = "Sky Radio"
select t2.package_option from tv series as t1 join tv channel as t2 on t1.id = t2.channel where t1.series_name = "Sky Radio"
select count(*) from tv channel where language = "english"
select count(*) from tv channel where language = "english"
select language, count(*) from tv channel group by language order by count(*) asc limit 1
select language, count(*) from tv channel group by language order by count(*) asc limit 1
select language, count(*) from tv channel group by language
select language, count(*) from tv channel group by language
select t2.series_name from cartoon as t1 join tv channel as t2 on t1.id = t2.channel where t1.title = "The Rise of the Blue Beetle"
select t2.series_name from cartoon as t1 join tv channel as t2 on t1.channel = t2.id where t1.title = "The Rise of the Blue Beetle"
select t2.title from tv channel as t1 join cartoon as t2 on t1.id = t2.directed_by where t1.series_name = "Sky Radio"
select t2.title from tvseries as t1 join cartoon as t2 on t1.id = t2.channel where t1.series_name = "Sky Radio"
select episode from tv series order by rating
select episode from tvseries order by rating
select t2.episode, t2.rating_share from tv series as t1 join tv series as t2 on t1.id = t2.id order by t1.rating_share desc limit 3
select episode, rating from tvseries order by rating desc limit 3
select min(share), max(share) from tv series
select max(share), min(share) from tv series
select t2.air_date from tvseries as t1 join tv series as t2 on t1.id = t2.id where t1.episode = "A love_of_aLifetime"
select t1.air_date from tvseries as t1 join drama as t2 on t1.id = t2.tvseries where t2.title = "A love_of_a_Lifetime"
select weekly_rank from tvseries where episode = "A love_of_a_Lifetime"
select t2.weekly_rank from tvseries as t1 join tvseries as t2 on t1.id = t2.t1.id where t1.title = "A love of a Lifetime"
select t2.series_name from tvseries as t1 join tv channel as t2 on t1.id = t2.channel where t1.episode = "A love_of_aLifetime"
select t2.series_name from tvseries as t1 join channel as t2 on t1.channel = t2.id where t1.episode = "A love_of_aLifetime"
select t2.episode from tv channel as t1 join tvseries as t2 on t1.id = t2.channel where t1.series_name = "Sky Radio"
select t2.episode from tv channel as t1 join tvseries as t2 on t1.id = t2.channel where t1.series_name = "Sky Radio"
select directed_by, count(*) from cartoon group by directed_by
select directed_by, count(*) from cartoon group by directed_by
select production_code, channel from cartoon order by original_air_date desc limit 1
select production_code, channel from cartoon order by original_air_date desc limit 1
select t1.package_option, t2.series_name from tv channel as t1 join tvseries as t2 on t1.id = t2.channel where t1.hight_definition_tv = (select hight_definition_tv from tvshow)
select t2.series_name, t1.channel_name from tv channel as t1 join tvseries as t2 on t1.id = t2.channel_id where t1.hight_definition_tv >= 4
select t1.country from tv channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.writer_by = "Tucky Casey"
select t1.country from tvchannel as t1 join cartoon as t2 on t1.id = t2.directed_by where t2.writer_by = "Tucky Casey"
select country from tv channel except select t1.country from tv channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.title = "Tucky Casey"
select country from tv channel except select t1.country from tv channel as t1 join cartoon as t2 on t1.id = t2.directed_by where t2.writer_by = "Tucky Casey"
select t2.series_name, t2.country from cartoon as t1 join tv channel as t2 on t1.channel = t2.id where t1.directed_by = "Ben Jones" intersect select t2.series_name, t2.country from cartoon as t1 join tv channel as t2 on t1.channel = t2.id where t1.directed_by = "Michael Chang"
select t2.series_name, t2.country from cartoon as t1 join tv channel as t2 on t1.id = t2.channel where t1.directed_by = "Ben Jones" intersect select t2.series_name, t2.country from cartoon as t1 join tv channel as t2 on t1.id = t2.channel where t1.directed_by = "Michael Chang"
select pixel_aspect_ratio_par, country from tv channel where language!= 'English'
select pixel_aspect_ratio_par, country from tv channel where language!= 'English'
select t2.id from tv channel as t1 join channel as t2 on t1.id = t2.channel group by t2.id having count(*) > 2
select t2.id from tv channel as t1 join channel as t2 on t1.id = t2.id group by t1.id having count(*) > 2
select id from tv except select channel from cartoon where directed_by = "Ben Jones"
select id from tv except select channel from cartoon where directed_by = "Ben Jones"
select package_option from tv channel except select t1.package_option from tv channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = "Ben Jones"
select package_option from tv channel except select t1.package_option from tv channel as t1 join cartoon as t2 on t1.id = t2.channel where t2.directed_by = "Ben Jones"
select count(*) from poker player
select count(*) from poker player
select earnings from poker player order by earnings desc
select earnings from poker player order by earnings desc
select final_table_made, best_finish from poker player
select final_table_made, best_finish from poker player
select avg(employees) from poker player
select avg(employees) from poker player
select money_rank from poker player order by earnings desc limit 1
select money_rank from poker player order by earnings desc limit 1
select max(final_table_made) from poker player where earnings < 200000
select max(final_table_made) from poker player where earnings < 200000
select t2.name from poker player as t1 join people as t2 on t1.people_id = t2.people_id
select t2.name from poker player as t1 join people as t2 on t1.people_id = t2.people_id
select t2.name from poker player as t1 join people as t2 on t1.people_id = t2.people_id where t1.employees > 300000
select t2.name from poker player as t1 join people as t2 on t1.people_id = t2.people_id where t1.employees > 300000
select t2.name from poker player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.final_table_made asc
select t2.name from poker player as t1 join people as t2 on t1.people_id = t2.people_id group by t2.name order by count(*) asc
select t2.birth_date from poker player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.enrollment limit 1
select t2.birth_date from poker player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.enrollment limit 1
select t1.money_rank from poker player as t1 join people as t2 on t1.people_id = t2.people_id order by t2.height desc limit 1
select t1.money_rank from poker player as t1 join people as t2 on t1.people_id = t2.people_id order by t2.height desc limit 1
select avg(t1.employees) from poker player as t1 join people as t2 on t1.people_id = t2.people_id where t2.height > 200
select avg(t2.economy) from people as t1 join poker player as t2 on t1.people_id = t2.people_id where t1.height > 200
select t2.name from poker player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.employees desc
select t2.name from poker player as t1 join people as t2 on t1.people_id = t2.people_id order by t1.employees desc
select nationality, count(*) from people group by nationality
select nationality, count(*) from people group by nationality
select nationality from people group by nationality order by count(*) desc limit 1
select nationality from people group by nationality order by count(*) desc limit 1
select nationality from people group by nationality having count(*) >= 2
select nationality from people group by nationality having count(*) >= 2
select name, birth_date from people order by name asc
select name, birth_date from people order by name asc
select name from people where nationality!= "Russia"
select name from people where nationality!= "Russia"
select name from people where people_id not in (select people_id from poker player)
select name from people where people_id not in (select people_id from poker)
select count(distinct nationality) from people
select count(distinct nationality) from people
select count(*) from state
select contestant_number, contestant_name from contestants order by contestant_name desc
select vote_id, phone_number, state from votes
select max(area_code), min(area_code) from area code
select t1.created from votes as t1 join area code as t2 on t1.area_code = t2.area_code where t2.state = 'CA'
select contestant_name from contestants where contestant_name!= 'Jessie Alloway'
select distinct state, created from votes
select t2.competitionant_number, t2.competitionant_name from votes as t1 join contestants as t2 on t1.competitionant_number = t2.competitionant_number group by t1.competitionant_number having count(*) >= 2
select t1.competition_number, t1.competition_name from contestants as t1 join votes as t2 on t1.competition_number = t2.competition_number group by t1.competition_number order by count(*) asc limit 1
select count(*) from votes where state = "NY" or state = "CA"
select count(*) from contestants where contestant_number not in (select contestant_number from votes)
select area_code from votes group by area_code order by count(*) desc limit 1
select t1.created, t1.state, t1.phone_number from votes as t1 join contestants as t2 on t1.competition_number = t2.competition_number where t2.competition_name = 'Tabatha Gehling'
select t1.area_code from votes as t1 join contestants as t2 on t1.candidate_number = t2.candidate_number where t2.competition_name = 'Tabatha Gehling' intersect select t1.area_code from votes as t1 join contestants as t2 on t1.candidate_number = t2.candidate_number where t2.competition_name = 'Kelly Clauss'
select contestant_name from contestants where contestant_name like '%al%'
select name from country where independence > 1950
select name from country where birthyear > 1950
select count(*) from country where governmentform = 'Republic'
select count(distinct countrycode) from country where governmentform = "Republican"
select sum(surfacearea) from country where region = "Cuba"
select sum(surfacearea) from country where countrycode = 'Carribean'
select continent from country where countrycode = "Anguilla"
select distinct continent from country where countrycode = "Anguilla"
select region from city where name like "%kabul%"
select region from city where population > 4000
select t2.language from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t1.population = (select max(population) from city)
select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.population > 100
select population, lifeexpectancy from country where countrycode = 'Brazil'
select population, lifeexpectancy from country
select region, population from city where countrycode = 'Angola'
select region, population from city where countrycode = 'Angola'
select avg(lifeexpectancy) from country where region = "Central Africa"
select avg(lifeexpectancy) from country where region = 'Central Africa'
select name from country where countrycode = 'Asia' order by lifeexpectancy limit 1
select name from country where countrycode = 'Asia' order by lifeexpectancy limit 1
select sum(population), max(gnp) from country where region = 'Asia'
select count(*), gnp from country where countrycode = (select countrycode from country where population > 100)
select avg(lifeexpectancy) from country where countrycode = 'Afghanistan' and headofstate = 'Republican'
select avg(lifeexpectancy) from country where continent = "Africa" and headofstate = "Republican"
select sum(surfacearea) from country where continent = "Asia" intersect select sum(surfacearea) from country where continent = "Europe"
select sum(surfacearea) from country where region = "Asia" or region = "Europe"
select sum(population) from city where district ='Gelderland'
select sum(population) from city where district ='Gelderland'
select avg(gnp), sum(population) from country where countrycode = 'USA'
select avg(gnp), sum(population) from country where countrycode = 'USA'
select count(distinct language) from countrylanguage
select count(distinct language) from countrylanguage
select count(distinct governmentform) from country
select count(distinct governmentform) from country
select count(distinct language) from countrylanguage
select count(distinct language) from countrylanguage
select count(distinct language) from countrylanguage
select count(distinct language) from countrylanguage
select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t2.countrycode order by count(*) desc limit 1
select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name order by count(*) desc limit 1
select continent from country group by continent order by count(*) desc limit 1
select continent from country group by continent order by count(*) desc limit 1
select count(*) from country where language = "English" intersect select count(*) from country where language = "Dutch"
select count(*) from country where language = "English" intersect select count(*) from country where language = "Dutch"
select name from country where language = "English" intersect select name from country where language = "France"
select name from country where language = "English" intersect select name from country where language = "France"
select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'English' intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'French'
select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'English' intersect select t1.name from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t2.language = 'French'
select count(distinct continent) from country where language = 'Chinese'
select count(*) from country where language = "Chinese"
select region from country where language = "English" or language = "Dutch"
select region from country where language = "Dutch" or language = "English"
select countrycode from country where language = "English" or language = "Dutch"
select distinct countrycode from countrylanguage where language = "English" or language = "Dutch"
select language from country where continent = (select continent from country group by continent order by count(*) desc limit 1)
select language from countrycode group by language order by count(*) desc limit 1
select language from countrylanguage group by language having count(*) = 1
select language from country except select language from countrylanguage where governmentform = "Republican"
select name from city where population like "%english%" order by population desc limit 1
select name from city where language = 'English' group by name order by count(*) desc limit 1
select name, population, lifeexpectancy from country order by area desc limit 1
select name, population, lifeexpectancy from country order by land area desc limit 1
select avg(lifeexpectancy) from country where language not in (select countrycode from countrylanguage)
select avg(lifeexpectancy) from country where language not in (select countrycode from countrylanguage)
select sum(population) from country where language!= 'English'
select count(*) from country where language!= 'English'
select t2.language from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode where t1.headofstate = 'Batrix'
select t1.language from country as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t1.headofstate = 'Batrix'
select count(distinct language) from countrylanguage where countrycode < 1930
select count(distinct language) from countrylanguage where founded < 1930
select name from country where surfacearea > (select max(surfacearea) from country where region = 'Europe')
select name from country where region > (select max(regional) from country where region = 'Europe')
select name from country where population < (select min(population) from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where country
select name from country where population < (select min(population) from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where countryname from country where country
select name from country where population > (select max(population) from country where continent = 'Africa')
select name from country where population > (select min(population) from country where continent = 'Africa')
select countrycode from country where language!= "english"
select countrycode from country where language!= "english"
select countrycode from country where language!= "English"
select countrycode from country where language!= "english"
select code from country where language not in (select countrycode from countrylanguage) and governmentform!= "Republic")
select countrycode from country except select countrycode from countrylanguage where governmentform = "Republic"
select name from city where countrycode not in (select countrycode from countrylanguage)
select name from city where countrycode not in (select countrycode from countrylanguage)
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "Chinese"
select distinct t1.name from city as t1 join countrylanguage as t2 on t1.countrycode = t2.countrycode where t2.language = "Chinese" and t2.language = "Chinese"
select name, independence year, surfacearea from country order by population asc limit 1
select name, year of independence, surfacearea from country order by population asc limit 1
select population, name, headofstate from country order by surfacearea desc limit 1
select name, population, headofstate from country order by surfacearea desc limit 1
select t1.name, count(*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count(*) >= 3
select t1.name, count(*) from country as t1 join countrylanguage as t2 on t1.code = t2.countrycode group by t1.name having count(*) > 2
select count(*), district from city where population > (select avg(population) from city) group by district
select count(*), district from city where population > (select avg(population) from city) group by district
select t1.name, avg(t2.lifeexpectancy) from country as t1 join country as t2 on t1.code = t2.code group by t1.governmentform having avg(t2.lifeexpectancy) > 72
select sum(population), governmentform from country group by governmentform having avg(lifeexpectancy) > 72
select avg(lifeexpectancy), sum(population) from country where lifeexpectancy < 72 group by continent
select continent, sum(population), avg(lifeexpectancy) from country where lifeexpectancy < 72 group by continent
select name, region from country order by area desc limit 5
select name, surfacearea from country order by population desc limit 5
select name from country order by population desc limit 3
select name from country order by population desc limit 3
select name from country order by population asc limit 3
select name from country order by population asc limit 3
select count(*) from country where countrycode in (select countrycode from country where population > 100)
select count(*) from country where countrycode in (select countrycode from city where population > 100)
select name from country where continent = "Europe" and population = 80000
select name from country where continent = "Europe" and population = 80000
select sum(population), avg(population) from country where continent > 3000
select sum(population), avg(surfacearea) from country where region > 3000
select name from city where population between 160000 and 900000
select name from city where population between 160000 and 900000
select language from countrylanguage group by language order by count(*) desc limit 1
select language from countrylanguage group by language order by count(*) desc limit 1
select language, percentage from countrylanguage group by language
select countrycode, language, population from countrylanguage group by countrycode order by count(*) desc limit 1
select count(*) from country where language = (select language from countrylanguage order by population desc limit 1)
select count(*) from country where language = "Spain" group by countrycode order by count(*) desc limit 1
select countrycode from countrylanguage where language = "Spain" group by countrycode order by count(*) desc limit 1
select countrycode from country where language = "Spain" group by countrycode order by count(*) desc limit 1
select count(*) from conductor
select count(*) from conductor
select name from conductor order by age asc
select name from conductor order by age
select name from conductor where nationality!= "USA"
select name from conductor where nationality!= "USA"
select record_company from orchestra order by year_of_founded desc
select record_company from orchestra order by year_of_founded desc
select avg(attendance) from show
select avg(attendance) from show
select max(share), min(share) from performance where type!= "Live final"
select max(share), min(share) from performance where type!= "Live final"
select count(distinct nationality) from conductor
select count(distinct nationality) from conductor
select name from conductor order by year_of_work desc
select name from conductor order by year_of_work desc
select name from conductor order by year_of_work desc limit 1
select name from conductor order by year_of_work desc limit 1
select t2.name, t3.name from orchestra as t1 join conductor as t2 on t1.opera_id = t2.opera_id join orchestra as t3 on t1.orchest_id = t3.orchest_id
select t1.name, t2.name from conductor as t1 join orchestra as t2 on t1.conductor_id = t2.conductor_id
select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id group by t2.name having count(*) > 1
select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id group by t2.name having count(*) > 1
select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id group by t2.name order by count(*) desc limit 1
select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id group by t2.name order by count(*) desc limit 1
select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id where t1.year_of_founded > 2008
select t2.name from orchestra as t1 join conductor as t2 on t1.conductor_id = t2.conductor_id where t1.year_of_founded > 2008
select record_company, count(*) from orchestra group by record_company
select record_company, count(*) from orchestra group by record_company
select major_record_format from orchestra order by count(*) asc
select major_record_format from orchestra group by major_record_format order by count(*) asc
select record_company from orchestra group by record_company order by count(*) desc limit 1
select record_company from orchestra group by record_company order by count(*) desc limit 1
select orchestra from orchestra where orchestra_id not in (select orchestra_id from performance)
select orchestra from orchestra except select orchestra from performance
select record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003
select record_company from orchestra where year_of_founded < 2003 intersect select record_company from orchestra where year_of_founded > 2003
select count(*) from orchestra where major_record_format = "CD" or major_record_format = "DVD"
select count(*) from orchestra where major_record_format = "CD" or major_record_format = "DVD"
select t1.year_of_founded from orchestra as t1 join performance as t2 on t1.opera_id = t2.opera_id group by t1.opera_id having count(*) > 1
select t2.year_of_founded from performance as t1 join orchestra as t2 on t1.opera_id = t2.opera_id group by t1.opera_id having count(*) > 1
select count(*) from high schooler
select count(*) from high schooler
select name, grade from high schooler
select name, grade from high schooler
select distinct grade from high schooler
select distinct grade from high schooler
select distinct grade from high schooler
select grade from high schooler where name = 'Kyle'
select name from high schooler where grade = 10
select name from high schooler where grade = 10
select id from high schooler where name = "Kyle"
select id from high schooler where grade = 1
select count(*) from high schooler where grade = 9 or grade = 10
select count(*) from high schooler where grade = 9 or grade = 10
select grade, count(*) from high schooler group by grade
select grade, count(*) from high schooler group by grade
select grade from high schooler group by grade order by count(*) desc limit 1
select grade from high schooler group by grade order by count(*) desc limit 1
select grade from high schooler group by grade having count(*) >= 4
select grade from high schooler group by grade having count(*) >= 4
select student_id, count(*) from friend group by student_id
select count(*) from friend
select t1.name, count(*) from high schooler as t1 join friend as t2 on t1.id = t2.friend_id group by t1.id
select t1.name, count(*) from high schooler as t1 join friend as t2 on t1.id = t2.friend_id group by t1.id
select t1.name from high schooler as t1 join friend as t2 on t1.id = t2.friend_id group by t2.friend_id order by count(*) desc limit 1
select t1.name from high schooler as t1 join friend as t2 on t1.id = t2.friend_id group by t2.friend_id order by count(*) desc limit 1
select t1.name from high schooler as t1 join friend as t2 on t1.id = t2.friend_id group by t2.friend_id having count(*) >= 3
select t1.name from high schooler as t1 join friend as t2 on t1.id = t2.friend_id group by t2.friend_id having count(*) >= 3
select t2.name from high school as t1 join friend as t2 on t1.id = t2.friend_id where t1.grade = 'K'
select t2.name from high school as t1 join friend as t2 on t1.id = t2.friend_id where t1.grade = 'K'
select count(distinct t2.friend_id) from high school as t1 join friend as t2 on t1.id = t2.friend_id where t1.grade = 'K'
select count(distinct friend_id) from friend
select student_id from student except select student_id from friend
select student_id from high school except select student_id from friend
select name from high schooler except select t1.name from high schooler as t1 join friend as t2 on t1.id = t2.friend_id
select name from student where id not in (select student_id from friend)
select t1.id from high schooler as t1 join likes as t2 on t1.id = t2.student_id intersect select t1.id from high schooler as t1 join likes as t2 on t1.id = t2.student_id
select student_id from friend intersect select student_id from likes
select t1.name from student as t1 join likes as t2 on t1.student_id = t2.student_id
select t1.name from high schooler as t1 join friend as t2 on t1.id = t2.friend_id intersect select t1.name from high schooler as t1 join likes as t2 on t1.id = t2.friend_id
select count(*), student_id from likes group by student_id
select student_id, count(*) from likes group by student_id
select t1.name, count(*) from high schooler as t1 join likes as t2 on t1.id = t2.like_id group by t2.name
select t1.name, count(*) from high schooler as t1 join likes as t2 on t1.id = t2.like_id group by t2.like_id
select t1.name from high schooler as t1 join likes as t2 on t1.id = t2.like_id group by t2.name order by count(*) desc limit 1
select t1.name from high schooler as t1 join likes as t2 on t1.id = t2.student_id group by t2.student_id order by count(*) desc limit 1
select t1.name from student as t1 join likes as t2 on t1.id = t2.student_id group by t2.student_id having count(*) >= 2
select t1.name from high schooler as t1 join likes as t2 on t1.id = t2.student_id group by t2.student_id having count(*) >= 2
select t1.name from high schooler as t1 join friend as t2 on t1.id = t2.student_id where t1.grade > 5 group by t2.student_id having count(*) >= 2
select t1.name from high schooler as t1 join friend as t2 on t1.id = t2.friend_id group by t1.id having count(*) >= 2
select count(*) from Kyle
select count(*) from high schooler as t1 join likes as t2 on t1.id = t2.friend_id where t1.name = "Kyle"
select avg(t1.grade) from high schooler as t1 join friend as t2 on t1.id = t2.friend_id
select avg(t1.grade) from high schooler as t1 join friend as t2 on t1.id = t2.friend_id group by t2.friend_id
select min(grade) from high schooler where id not in (select student_id from friend)
select grade from high schooler where id not in (select student_id from friend)
select state from owners intersect select state from professionals
select state from owners intersect select state from professionals
select avg(age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id
select avg(age) from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id
select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) > 2 union select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join procedures as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) > 2
select t1.professional_id, t1.last_name, t1.cell_number from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id where t1.state = "Indiana" or t2.treatment_id > 2
select t1.name from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t2.cost_of_treatment > 1000
select t2.name from treatments as t1 join dogs as t2 on t1.dog_id = t2.owner_id where t1.cost_of_treatment > 1000
select first_name from professionals except select first_name from dogs
select first_name from professionals except select first_name from dogs
select professional_id, role_code, email_address from professionals except select t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id
select professional_id, role_code, email_address from professionals except select t1.professional_id, t1.role_code, t1.email_address from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id
select t1.owner_id, t1.first_name, t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1
select t1.owner_id, t1.first_name, t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1
select t1.professional_id, t1.role_code, t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2
select t1.professional_id, t1.role_code, t1.first_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2
select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code = t2.breed_code group by t1.breed_code order by count(*) desc limit 1
select t1.breed_name from breeds as t1 join dogs as t2 on t1.breed_code = t2.breed_code group by t1.breed_code order by count(*) desc limit 1
select t1.owner_id, t1.last_name from owners as t1 join treatments as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by count(*) desc limit 1
select t1.owner_id, t2.last_name from treatments as t1 join pets as t2 on t1.dog_id = t2.owner_id group by t1.owner_id order by sum(t1.cost_of_treatment) desc limit 1
select t1.treatment_type_description from treatment types as t1 join treatments as t2 on t1.treatment_type_code = t2.treatment_type_code group by t2.treatment_type_code order by sum(t2.cost_of_treatment) asc limit 1
select t1.treatment_type_description from treatment types as t1 join treatments as t2 on t1.treatment_type_code = t2.treatment_type_code group by t2.treatment_type_code order by sum(t2.cost_of_treatment) limit 1
select t1.owner_id, t1.zip_code from owners as t1 join charges as t2 on t1.owner_id = t2.charge_id group by t1.owner_id order by sum(t2.charge_amount) desc limit 1
select t1.owner_id, t1.zip_code from owners as t1 join pets as t2 on t1.owner_id = t2.owner_id group by t1.owner_id order by sum(t2.cost_of_treatment) desc limit 1
select t1.professional_id, t2.cell_number from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2
select t1.professional_id, t2.cell_number from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id group by t1.professional_id having count(*) >= 2
select t1.first_name, t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id where t2.cost_of_treatment < (select avg(cost_of_treatment) from treatments)
select t1.first_name, t1.last_name from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id where t2.cost_of_treatment < (select avg(cost_of_treatment) from treatments)
select t1.date_of_treatment, t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id
select t1.date_of_treatment, t2.first_name from treatments as t1 join professionals as t2 on t1.professional_id = t2.professional_id
select t1.cost_of_treatment, t2.treatment_type_description from treatments as t1 join treatment types as t2 on t1.treatment_type_code = t2.treatment_type_code
select cost_of_treatment, treatment_type_description from treatments
select t1.first_name, t1.last_name, t2.size_code from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id
select t1.first_name, t1.last_name, t2.size_code from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id
select t1.first_name, t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id
select t1.first_name, t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id
select t1.name, t2.date_of_treatment from dogs as t1 join treatments as t2 on t1.dog_id = t2.dog_id where t1.breed_code = (select t1.breed_code from breeds as t1 join treatment as t2 on t1.breed_code = t2.breed_code order by count(*) desc limit 1)
select name, date_of_treatment from dogs order by breed_code limit 1
select t2.first_name, t2.name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t1.state = "VA"
select t1.first_name, t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id where t1.state = "VA"
select date_arrived, date_departed from dogs
select date_arrived, date_departed from dogs
select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id order by t2.age limit 1
select t1.last_name from owners as t1 join dogs as t2 on t1.owner_id = t2.owner_id order by t2.age limit 1
select email_address from professionals where state = "Hawaii" or state = "Wisconsin"
select email_address from professionals where state = "Hawaii" or state = "Wisconsin"
select date_arrived, date_departed from dogs
select date_arrived, date_departed from dogs
select count(distinct dog_id) from treatments
select count(distinct dog_id) from treatments
select count(distinct professional_id) from treatments
select count(distinct professional_id) from treatments
select role_code, street, city, state from professionals where street like '%west%'
select role_code, street, city, state from professionals where street like '%west%'
select first_name, last_name, email_address from owners where state like '%north%'
select first_name, last_name, email_address from owners where state like '%north%'
select count(*) from dogs where age < (select avg(age) from dogs)
select count(*) from dogs where age < (select avg(age) from dogs)
select max(cost_of_treatment) from treatments order by date_of_treatment desc limit 1
select cost_of_treatment from treatments order by date_of_treatment desc limit 1
select count(*) from dogs where dog_id not in (select dog_id from treatment)
select count(*) from dogs where dog_id not in (select dog_id from treatment)
select count(*) from owners where owner_id not in (select owner_id from dogs)
select count(*) from owners where owner_id not in (select owner_id from dogs)
select count(*) from professionals where professional_id not in ( select professional_id from treatments );
select count(*) from professionals where professional_id not in (select professional_id from treatments)
select name, age, weight from dogs where abandoned_yn = 1
select name, age, weight from dogs where abandoned_yn = 1
select avg(age) from dogs
select avg(age) from dogs
select age from dogs order by age desc limit 1
select age from dogs order by age desc limit 1
select charge_type, charge_amount from charges group by charge_type
select charge_type, charge_amount from charges group by charge_type
select charge_type from charges order by charge_amount desc limit 1
select charge_amount from charges order by charge_type desc limit 1
select email_address, cell_phone, cell_number from professionals
select email_address, cell_number, home_phone from professionals
select breed_code, size_code from breeds
select distinct breed_code, size_code from dogs
select t1.first_name, t3.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id join treatment types as t3 on t2.treatment_type_code = t3.treatment_type_code
select t1.first_name, t3.treatment_type_description from professionals as t1 join treatments as t2 on t1.professional_id = t2.professional_id join treatment types as t3 on t2.treatment_type_code = t3.treatment_type_code
select count(*) from singer
select count(*) from singer
select name from singer order by net_worth_millions asc
select name from singer order by net_worth_millions asc
select birth_year, citizenship from singer
select birth_year, citizenship from singer
select name from singer where citizenship!= "France"
select name from singer where citizenship!= 'France'
select name from singer where birth_year = 1948 or birth_year = 1949
select name from singer where birth_year = 1948 or birth_year = 1949
select name from singer order by net_worth_millions desc limit 1
select name from singer order by net_worth_millions desc limit 1
select citizenship, count(*) from singer group by citizenship
select citizenship, count(*) from singer group by citizenship
select citizenship from singer group by citizenship order by count(*) desc limit 1
select citizenship from singer group by citizenship order by count(*) desc limit 1
select citizenship, max(net_worth_millions) from singer group by citizenship
select citizenship, max(net_worth_millions) from singer group by citizenship
select t2.title, t3.name from song as t1 join artist as t2 on t1.song_id = t2.song_id join singer as t3 on t1.song_id = t3.song_id
select t2.title, t3.name from song as t1 join singer as t2 on t1.song_id = t2.song_id join song as t3 on t1.song_id = t3.song_id
select distinct t1.name from singer as t1 join song as t2 on t1.song_id = t2.song_id where t2.sales > 300000
select distinct t1.name from singer as t1 join song as t2 on t1.song_id = t2.song_id where t2.sales > 300000
select t2.name from song as t1 join singer as t2 on t1.song_id = t2.song_id group by t1.song_id having count(*) > 1
select t2.name from song as t1 join singer as t2 on t1.song_id = t2.song_id group by t1.song_id having count(*) > 1
select t2.name, sum(t1.sales) from song as t1 join singer as t2 on t1.song_id = t2.song_id group by t2.name
select t2.name, sum(t1.sales) from song as t1 join singer as t2 on t1.song_id = t2.song_id group by t2.name
select name from singer where singer_id not in (select Singer_id from song)
select name from singer where singer_id not in (select singer_id from song)
select citizenship from singer where birth_year < 1945 intersect select citizenship from singer where birth_year > 1956
select citizenship from singer where birth_year < 1945 intersect select citizenship from singer where birth_year > 1956
select count(*) from available features
select t1.feature_type_name from reference feature types as t1 join other available features as t2 on t1.feature_type_code = t2.feature_type_code where t2.feature_name = "AirCon"
select t1.property_type_description from reference property types as t1 join properties as t2 on t1.property_type_code = t2.property_type_code
select property_name from properties where room_count > 1 or room_count = 2
