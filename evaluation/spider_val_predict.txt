select t1.pname from player as t1 join tryout as t2 on t1.pid = t2.pid order by t1.pname
select t1.pname from player as t1 join tryout as t2 on t1.pid = t2.pid order by t1.pname
select t1.pname, t1.hs from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes'
select t1.pname, t1.hs from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes'
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos ='striker'
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos ='striker'
select t1.pname from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes' and t2.ppos ='striker'
select t1.pname from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes' and t2.ppos ='striker'
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname join player as t3 on t2.pid = t3.pid where t3.pname = 'Charles'
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname join player as t3 on t2.pid = t3.pid where t3.pname = 'Charles'
select avg(t1.hs), max(t1.hs) from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes'
select avg(t1.hs), max(t1.hs) from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes'
select avg(t1.hs) from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'no'
select avg(t1.hs) from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'no'
select max(t1.hs), ppos from player as t1 join tryout as t2 on t1.pid = t2.pid where t1.hs > 1000 group by t2.ppos
select max(t1.hs), ppos from player as t1 join tryout as t2 on t1.pid = t2.pid where t1.hs > 1000 group by t2.ppos
select t1.cname from tryout as t1 join player as t2 on t1.pid = t2.pid where t2.pname like 'D%'
select t1.cname from tryout as t1 join player as t2 on t1.pid = t2.pid where t2.pname like 'D%'
select cname from tryout where decision = 'yes' and player = 'goalie'
select cname from tryout where decision = 'yes' and ppos = 'goalie'
select t2.pname from tryout as t1 join player as t2 on t1.pid = t2.pid where t1.cname = (select cname from college order by enr desc limit 1)
select t2.pname from tryout as t1 join player as t2 on t1.pid = t2.pid where t1.cname = (select cname from college order by enr desc limit 1)
select distinct t1.state, t1.enr from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.decision = 'yes'
select distinct t1.state, t1.enr from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.decision = 'yes'
select cname from college where enr < 13000 and state = "AZ" union select cname from college where enr > 15000 and state = "LA"
select cname from college where enr < 13000 and state = "AZ" union select cname from college where enr > 15000 and state = "LA"
select cname from tryout where ppos = 'goalie' intersect select cname from tryout where ppos ='mid'
select cname from tryout where ppos = 'goalie' intersect select cname from tryout where ppos ='mid'
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie' intersect select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos ='mid'
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie' intersect select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos ='mid'
select count(*) from (select cname from tryout where ppos = 'goalie' intersect select cname from tryout where ppos ='mid')
select count(*) from (select cname from tryout where ppos = 'goalie' intersect select cname from tryout where ppos ='mid')
select cname from tryout where ppos ='mid' except select cname from tryout where ppos = 'goalie'
select cname from tryout where ppos ='mid' except select cname from tryout where ppos = 'goalie'
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos ='mid' except select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie'
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos ='mid' except select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie'
select count(*) from (select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos ='mid' except select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie')
select count(*) from (select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos ='mid' except select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie')
select distinct state from college where enr < (select max(enr) from college)
select distinct state from college where enr < (select max(enr) from college)
select distinct cname from college where enr > (select min(enr) from college where state = 'FL')
select distinct cname from college where enr > (select min(enr) from college where state = 'FL')
select cname from college where enr > (select max(enr) from college where state = 'FL')
select cname from college where enr > (select max(enr) from college where state = 'FL')
select sum(enr) from college where cname not in (select cname from tryout where ppos = "goalie")
select sum(enr) from college where cname not in (select cname from tryout)
select count(distinct state) from college where enr > (select avg(enr) from college)
select count(distinct state) from college where enr > (select avg(enr) from college)
select count(distinct state) from college where enr < (select avg(enr) from college)
select count(distinct state) from college where enr < (select avg(enr) from college)
select count(*) from device
select count(*) from device
select carrier from device order by carrier asc
select carrier from device order by carrier asc
select carrier from device where software_platform!= 'Android'
select carrier from device where software_platform!= 'Android'
select shop_name from shop order by open_year asc
select shop_name from shop order by open_year asc
select avg(quantity) from stock
select avg(quantity) from stock
select shop_name, location from shop order by shop_name asc
select shop_name, location from shop order by shop_name asc
select count(distinct software_platform) from device
select count(distinct software_platform) from device
select open_date, open_year from shop where shop_name = "Apple"
select open_date, open_year from shop where shop_name = "Apple"
select shop_name from shop order by open_year desc limit 1
select shop_name from shop order by open_year desc limit 1
select t3.shop_name, t2.carrier from stock as t1 join device as t2 on t1.device_id = t2.device_id join shop as t3 on t1.shop_id = t3.shop_id
select t3.shop_name, t2.carrier from stock as t1 join device as t2 on t1.device_id = t2.device_id join shop as t3 on t1.shop_id = t3.shop_id
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id having count(*) > 1
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id having count(*) > 1
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count(*) desc limit 1
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count(*) desc limit 1
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by sum(t1.quantity) desc limit 1
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by sum(t1.quantity) desc limit 1
select software_platform, count(*) from device group by software_platform
select software_platform, count(*) from device group by software_platform
select software_platform from device group by software_platform order by count(*) desc
select software_platform from device group by software_platform order by count(*) desc
select software_platform from device group by software_platform order by count(*) desc limit 1
select software_platform from device group by software_platform order by count(*) desc limit 1
select shop_name from shop where shop_id not in (select shop_id from stock)
select shop_name from shop where shop_id not in (select shop_id from stock)
select location from shop where open_year > 2012 intersect select location from shop where open_year < 2008
select location from shop where open_year > 2012 intersect select location from shop where open_year < 2008
select carrier from device where device_id not in (select device_id from stock)
select carrier from device where device_id not in (select device_id from stock)
select t2.carrier from stock as t1 join device as t2 on t1.device_id = t2.device_id group by t1.device_id having count(*) > 1
select t2.carrier from stock as t1 join device as t2 on t1.device_id = t2.device_id group by t1.device_id having count(*) > 1
select count(*) from bookings
select count(*) from bookings
select order_date from bookings
select order_date from bookings
select planned_delivery_date, actual_delivery_date from bookings
select planned_delivery_date, actual_delivery_date from bookings
select count(*) from customers
select count(*) from customers
select customer_phone, customer_email_address from customers where customer_id = 1
select customer_phone, customer_email_address from customers where customer_name = "Harold"
select store_name from drama workshop groups
select store_name from drama workshop groups
select min(order_quantity), avg(order_quantity), max(order_quantity) from invoices
select min(order_quantity), avg(order_quantity), max(order_quantity) from invoices
select distinct payment_method_code from invoices
select distinct payment_method_code from invoices
select marketing_region_descriptrion from marketing regions where marketing_region_name = "China"
select marketing_region_descriptrion from marketing regions where marketing_region_name = "China"
select distinct product_name from products where product_price > (select avg(product_price) from products)
select distinct product_name from products where product_price > (select avg(product_price) from products)
select product_name from products order by product_price desc limit 1
select product_name from products order by product_price desc limit 1
select product_name from products order by product_price asc
select product_name from products order by product_price asc
select customer_phone from performers where customer_name = "Ashley"
select customer_phone from performers where customer_name = "Ashley"
select payment_method_code, count(*) from invoices group by payment_method_code
select payment_method_code, count(*) from invoices group by payment_method_code
select payment_method_code from invoices group by payment_method_code order by count(*) desc limit 1
select payment_method_code from invoices group by payment_method_code order by count(*) desc limit 1
select t1.city_town from addresses as t1 join stores as t2 on t1.address_id = t2.address_id where t2.store_name = "FJA Filming"
select t1.city_town from addresses as t1 join stores as t2 on t1.address_id = t2.address_id where t2.store_name = "FJA Filming"
select t1.state_county from addresses as t1 join stores as t2 on t1.address_id = t2.address_id where t2.marketing_region_code = "CA"
select t1.state_county from addresses as t1 join stores as t2 on t1.address_id = t2.address_id where t2.marketing_region_code = "CA"
select t1.marketing_region_name from marketing regions as t1 join stores as t2 on t1.marketing_region_code = t2.marketing_region_code where t2.store_name = "Rob Dinning"
select t1.marketing_region_name from marketing regions as t1 join stores as t2 on t1.marketing_region_code = t2.marketing_region_code where t2.store_name = "Rob Dinning"
select t1.service_type_description from reference service types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_price > 100
select t1.service_type_description from reference service types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_price > 100
select t1.service_type_description, t2.service_type_code, count(*) from reference service types as t1 join services as t2 on t1.service_type_code = t2.service_type_code group by t2.service_type_code
select t1.service_type_description, t2.service_type_code, count(*) from reference service types as t1 join services as t2 on t1.service_type_code = t2.service_type_code group by t2.service_type_code
select t1.service_type_description, t1.service_type_code from reference service types as t1 join services as t2 on t1.service_type_code = t2.service_type_code group by t1.service_type_code order by count(*) desc limit 1
select t1.service_type_description, t1.service_type_code from reference service types as t1 join services as t2 on t1.service_type_code = t2.service_type_code group by t1.service_type_code order by count(*) desc limit 1
select t1.store_phone, t1.store_email_address from drama workshop groups as t1 join services as t2 on t1.workshop_group_id = t2.workshop_group_id
select t1.store_phone, t1.store_email_address from drama workshop groups as t1 join services as t2 on t1.workshop_group_id = t2.workshop_group_id
select t1.store_phone, t1.store_email_address from drama workshop groups as t1 join services as t2 on t1.workshop_group_id = t2.workshop_group_id where t2.product_name = "film"
select t1.store_phone, t1.store_email_address from drama workshop groups as t1 join services as t2 on t1.workshop_group_id = t2.workshop_group_id where t2.product_name = "film"
select product_name, avg(product_price) from products group by product_name
select product_name, avg(product_price) from products group by product_name
select product_name from products group by product_name having avg(product_price) < 1000000
select product_name from products group by product_name having avg(product_price) < 1000000
select sum(t1.order_quantity) from order_items as t1 join products as t2 on t1.product_id = t2.product_id where t2.product_name = "photo"
select sum(t1.order_quantity) from order_items as t1 join products as t2 on t1.product_id = t2.product_id where t2.product_name = "photo"
select t1.other_item_details from order_items as t1 join products as t2 on t1.product_id = t2.product_id where t2.product_price > 2000
select t1.other_item_details from order_items as t1 join products as t2 on t1.product_id = t2.product_id where t2.product_price > 2000
select t1.actual_delivery_date from customer orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t2.order_quantity = 1
select t1.actual_delivery_date from customer orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t2.order_quantity = 1
select t1.order_date from customer orders as t1 join order_items as t2 on t1.order_id = t2.order_id join products as t3 on t2.product_id = t3.product_id where t3.product_price > 1000
select t1.order_date from customer orders as t1 join order_items as t2 on t1.order_id = t2.order_id join products as t3 on t2.product_id = t3.product_id where t3.product_price > 1000
select count(distinct currency_code) from drama workshop groups
select count(distinct currency_code) from drama workshop groups
select t2.store_name from addresses as t1 join drama workshop groups as t2 on t1.address_id = t2.address_id where t1.city_town = "Feliciaberg"
select t2.store_name from addresses as t1 join drama workshop groups as t2 on t1.address_id = t2.address_id where t1.city_town = "Feliciaberg"
select t2.store_email_address from addresses as t1 join drama workshop groups as t2 on t1.address_id = t2.address_id where t1.state_county = "Alaska"
select t2.store_email_address from addresses as t1 join drama workshop groups as t2 on t1.address_id = t2.address_id where t1.state_county = "Alaska"
select t1.city_town, count(*) from addresses as t1 join drama workshop groups as t2 on t1.address_id = t2.address_id group by t1.city_town
select t1.city_town, count(*) from addresses as t1 join drama workshop groups as t2 on t1.address_id = t2.address_id group by t1.city_town
select marketing_region_code from drama workshop groups group by marketing_region_code order by count(*) desc limit 1
select marketing_region_code from drama workshop groups group by marketing_region_code order by count(*) desc limit 1
select t1.city_town from addresses as t1 join customers as t2 on t1.address_id = t2.address_id except select t1.city_town from addresses as t1 join performers as t2 on t1.address_id = t2.address_id
select t1.city_town from addresses as t1 join customers as t2 on t1.address_id = t2.address_id except select t1.city_town from addresses as t1 join performers as t2 on t1.address_id = t2.address_id
select status_code from bookings group by status_code order by count(*) desc limit 1
select status_code from bookings group by status_code order by count(*) desc limit 1
select t2.store_name from bookings as t1 join drama workshop groups as t2 on t1.workshop_group_id = t2.workshop_group_id where t1.status_code = "stop"
select t2.store_name from bookings as t1 join drama workshop groups as t2 on t1.workshop_group_id = t2.workshop_group_id where t1.status_code = "stop"
select customer_name from clients except select t2.customer_name from bookings as t1 join clients as t2 on t1.customer_id = t2.client_id
select customer_name from clients except select t2.customer_name from bookings as t1 join clients as t2 on t1.customer_id = t2.client_id
select avg(order_quantity) from invoices where payment_method_code = "MasterCard"
select avg(order_quantity) from invoices where payment_method_code = "MasterCard"
select product_id from invoices group by product_id order by count(*) desc limit 1
select product_id from invoices group by product_id order by count(*) desc limit 1
select t1.service_type_description from reference service types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_name = 'photo' intersect select t1.service_type_description from reference service types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_name = 'film'
select t1.service_type_description from reference service types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_name = 'photo' intersect select t1.service_type_description from reference service types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_name = 'film'
select count(*) from band
select count(*) from band
select distinct label from albums
select distinct label from albums
select * from albums where year = 2012
select * from albums where year = 2012
select distinct t1.stageposition from performance as t1 join band as t2 on t1.bandmate = t2.id where firstname = "Solveig"
select distinct t1.stageposition from performance as t1 join band as t2 on t1.bandmate = t2.id where firstname = "Solveig"
select count(*) from songs
select count(*) from songs
select t3.title from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t2.lastname = "Heilo"
select t3.title from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t2.lastname = "Heilo"
select count(*) from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = "Flash"
select count(*) from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = "Flash"
select t3.title from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t2.firstname = "Marianne"
select t3.title from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t2.firstname = "Marianne"
select t2.firstname, t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = "Badlands"
select t2.firstname, t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = "Badlands"
select t2.firstname, t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = "Badlands" and t1.stageposition = "back"
select t2.firstname, t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = "Badlands" and t1.stageposition = "back"
select count(distinct label) from albums
select count(distinct label) from albums
select label from albums group by label order by count(*) desc limit 1
select label from albums group by label order by count(*) desc limit 1
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by lastname order by count(*) desc limit 1
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by lastname order by count(*) desc limit 1
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id where stageposition = "back" group by lastname order by count(*) desc limit 1
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id where stageposition = "back" group by lastname order by count(*) desc limit 1
select title from songs where title like '% the %'
select title from songs where title like '% the %'
select distinct instrument from instruments
select distinct instrument from instruments
select t4.instrument from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid join instruments as t4 on t4.songid = t3.songid and t4.bandmateid = t2.id where t2.lastname = "Heilo" and t3.title = "Le Pop"
select t4.instrument from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid join instruments as t4 on t4.songid = t3.songid and t4.bandmateid = t2.id where t2.lastname = "Heilo" and t3.title = "Le Pop"
select instrument from instruments group by instrument order by count(*) desc limit 1
select instrument from instruments group by instrument order by count(*) desc limit 1
select count(*) from instruments where instrument = "drums"
select count(*) from instruments where instrument = "drums"
select instrument from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = "Le Pop"
select instrument from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = "Le Pop"
select count(distinct instrument) from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = "Le Pop"
select count(distinct instrument) from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = "Le Pop"
select count(distinct instrument) from instruments as t1 join band as t2 on t1.bandmateid = t2.id where t2.lastname = "Heilo"
select count(distinct instrument) from instruments as t1 join band as t2 on t1.bandmateid = t2.id where t2.lastname = "Heilo"
select instrument from instruments as t1 join band as t2 on t1.bandmateid = t2.id where t2.lastname = "Heilo"
select instrument from instruments as t1 join band as t2 on t1.bandmateid = t2.id where t2.lastname = "Heilo"
select title from vocals as t1 join songs as t2 on t1.songid = t2.songid group by t1.songid order by count(*) desc limit 1
select title from vocals as t1 join songs as t2 on t1.songid = t2.songid group by t1.songid order by count(*) desc limit 1
select type from vocals group by type order by count(*) desc limit 1
select type from vocals group by type order by count(*) desc limit 1
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where lastname = "Heilo" group by type order by count(*) desc limit 1
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where lastname = "Heilo" group by type order by count(*) desc limit 1
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = "Le Pop"
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = "Le Pop"
select count(*) from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = "Demon kitty Rag"
select count(*) from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = "Demon kitty Rag"
select count(distinct title) from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = "lead"
select count(distinct title) from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = "lead"
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid join band as t3 on t1.bandmate = t3.id where t3.firstname = "Solveig" and t2.title = "A bar in Amsterdam"
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid join band as t3 on t1.bandmate = t3.id where t3.firstname = "Solveig" and t2.title = "A bar in Amsterdam"
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = "lead"
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = "lead"
select distinct type from vocals
select distinct type from vocals
select * from albums where year = 2010
select * from albums where year = 2010
select t2.firstname, t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = "Le Pop"
select t2.firstname, t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = "Le Pop"
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by lastname order by count(*) desc limit 1
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by lastname order by count(*) desc limit 1
select t4.instrument from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid join instruments as t4 on t4.songid = t3.songid and t4.bandmateid = t2.id where t2.lastname = "Heilo" and t3.title = "Badlands"
select t4.instrument from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid join instruments as t4 on t4.songid = t3.songid and t4.bandmateid = t2.id where t2.lastname = "Heilo" and t3.title = "Badlands"
select count(distinct instrument) from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = "Badlands"
select count(distinct instrument) from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = "Badlands"
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = "Badlands"
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = "Badlands"
select count(*) from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = "Le Pop"
select count(*) from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = "Le Pop"
select count(distinct title) from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = "shared"
select count(distinct title) from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = "shared"
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = "back"
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = "back"
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where firstname = "Solveig" group by type order by count(*) desc limit 1
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where firstname = "Solveig" group by type order by count(*) desc limit 1
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid join band as t3 on t1.bandmate = t3.id where t3.lastname = "Heilo" and t2.title = "Der Kapitan"
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid join band as t3 on t1.bandmate = t3.id where t3.lastname = "Heilo" and t2.title = "Der Kapitan"
select t2.firstname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by firstname order by count(*) desc limit 1
select t2.firstname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by firstname order by count(*) desc limit 1
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where firstname = "Marianne" group by type order by count(*) desc limit 1
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where firstname = "Marianne" group by type order by count(*) desc limit 1
select t2.firstname, t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = "Der Kapitan" and t1.stageposition = "back"
select t2.firstname, t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = "Der Kapitan" and t1.stageposition = "back"
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = "back"
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = "back"
select t3.title from albums as t1 join track lists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.title = "A kiss before you go: live in Hamburg"
select t3.title from albums as t1 join track lists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.title = "A kiss before you go: live in Hamburg"
select t3.title from albums as t1 join track lists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.label = "Universal music Group"
select t3.title from albums as t1 join track lists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.label = "Universal music Group"
select count(distinct t3.title) from albums as t1 join track lists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.type = "Studio"
select count(distinct t3.title) from albums as t1 join track lists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.type = "Studio"
select founder from manufacturers where name = 'Sony'
select founder from manufacturers where name = 'Sony'
select headquarter from manufacturers where founder = 'James'
select headquarter from manufacturers where founder = 'James'
select name, headquarter from manufacturers order by revenue desc
select name, headquarter from manufacturers order by revenue desc
select avg(revenue), max(revenue), sum(revenue) from manufacturers
select avg(revenue), max(revenue), sum(revenue) from manufacturers
select count(*) from manufacturers where founder = 'Andy'
select count(*) from manufacturers where founder = 'Andy'
select sum(revenue) from manufacturers where headquarter = 'Austin'
select sum(revenue) from manufacturers where headquarter = 'Austin'
select distinct headquarter from manufacturers
select distinct headquarter from manufacturers
select count(*) from manufacturers where headquarter = 'Tokyo' or headquarter = 'Beijing'
select count(*) from manufacturers where headquarter = 'Tokyo' or headquarter = 'Beijing'
select founder from manufacturers where name like 'S%'
select founder from manufacturers where name like 'S%'
select name from manufacturers where revenue between 100 and 150
select name from manufacturers where revenue between 100 and 150
select sum(revenue) from manufacturers where headquarter = 'Tokyo' or headquarter = 'Taiwan'
select sum(revenue) from manufacturers where headquarter = 'Tokyo' or headquarter = 'Taiwan'
select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'Creative Labs' intersect select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'Sony'
select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'Creative Labs' intersect select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'Sony'
select name, headquarter, founder from manufacturers order by revenue desc limit 1
select name, headquarter, founder from manufacturers order by revenue desc limit 1
select name, headquarter, revenue from manufacturers order by revenue desc
select name, headquarter, revenue from manufacturers order by revenue desc
select name from manufacturers where revenue > (select avg(revenue) from manufacturers)
select name from manufacturers where revenue > (select avg(revenue) from manufacturers)
select name from manufacturers where revenue < (select min(revenue) from manufacturers where headquarter = 'Austin')
select name from manufacturers where revenue < (select min(revenue) from manufacturers where headquarter = 'Austin')
select sum(revenue) from manufacturers where revenue > (select min(revenue) from manufacturers where headquarter = 'Austin')
select sum(revenue) from manufacturers where revenue > (select min(revenue) from manufacturers where headquarter = 'Austin')
select sum(revenue), founder from manufacturers group by founder
select sum(revenue), founder from manufacturers group by founder
select name, max(revenue), headquarter from manufacturers group by headquarter
select name, max(revenue), headquarter from manufacturers group by headquarter
select sum(revenue), name from manufacturers group by name
select sum(revenue), name from manufacturers group by name
select avg(t1.price), t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select avg(t1.price), t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select count(distinct t1.name), t2.headquarter from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.headquarter
select count(distinct t1.name), t2.headquarter from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.headquarter
select count(distinct name) from products where name not in (select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'Sony')
select count(distinct name) from products where name not in (select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'Sony')
select name from manufacturers except select t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t1.name = 'DVD drive'
select name from manufacturers except select t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t1.name = 'DVD drive'
select count(*), t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select count(*), t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select name from products
select name from products
select name, price from products
select name, price from products
select name from products where price <= 200
select name from products where price <= 200
select * from products where price between 60 and 120
select * from products where price between 60 and 120
select avg(price) from products
select avg(price) from products
select avg(price) from products where manufacturer = 2
select avg(price) from products where manufacturer = 2
select count(*) from products where price >= 180
select count(*) from products where price >= 180
select name, price from products where price >= 180 order by price desc, name asc
select name, price from products where price >= 180 order by price desc, name asc
select * from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code
select * from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code
select avg(price), manufacturer from products group by manufacturer
select avg(price), manufacturer from products group by manufacturer
select avg(t1.price), t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select avg(t1.price), t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select avg(t1.price), t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name having avg(t1.price) >= 150
select avg(t1.price), t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name having avg(t1.price) >= 150
select name, price from products order by price asc limit 1
select name, price from products order by price asc limit 1
select t1.name, max(t1.price), t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select t1.name, max(t1.price), t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select code, name, min(price) from products group by name
select code, name, min(price) from products group by name
select problem_log_id from problem log order by log_entry_date desc limit 1
select problem_log_id from problem log order by log_entry_date desc limit 1
select problem_log_id, problem_id from problem log order by log_entry_date limit 1
select problem_log_id, problem_id from problem log order by log_entry_date limit 1
select problem_log_id, log_entry_date from problem log where problem_id = 10
select problem_log_id, log_entry_date from problem log where problem_id = 10
select problem_log_id, log_entry_description from problem log
select problem_log_id, log_entry_description from problem log
select distinct staff_first_name, staff_last_name from staff as t1 join problem log as t2 on t1.staff_id = t2.assigned_to_staff_id where t2.problem_id = 1
select distinct staff_first_name, staff_last_name from staff as t1 join problem log as t2 on t1.staff_id = t2.assigned_to_staff_id where t2.problem_id = 1
select distinct t2.problem_id, t2.problem_log_id from staff as t1 join problem log as t2 on t1.staff_id = t2.assigned_to_staff_id where t1.staff_first_name = "Rylan" and t1.staff_last_name = "Homenick"
select distinct t2.problem_id, t2.problem_log_id from staff as t1 join problem log as t2 on t1.staff_id = t2.assigned_to_staff_id where t1.staff_first_name = "Rylan" and t1.staff_last_name = "Homenick"
select count(*) from product as t1 join problems as t2 on t1.product_id = t2.product_id where t1.product_name = "voluptatem"
select count(*) from product as t1 join problems as t2 on t1.product_id = t2.product_id where t1.product_name = "voluptatem"
select count(*), t1.product_name from product as t1 join problems as t2 on t1.product_id = t2.product_id group by t1.product_name order by count(*) desc limit 1
select count(*), t1.product_name from product as t1 join problems as t2 on t1.product_id = t2.product_id group by t1.product_name order by count(*) desc limit 1
select t1.problem_description from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = "Christop"
select t1.problem_description from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = "Christop"
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_last_name = "Bosco"
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_last_name = "Bosco"
select problem_id from problems where date_problem_reported > "1978-06-26"
select problem_id from problems where date_problem_reported > "1978-06-26"
select problem_id from problems where date_problem_reported < "1978-06-26"
select problem_id from problems where date_problem_reported < "1978-06-26"
select count(*), t2.product_id from problems as t1 join product as t2 on t1.product_id = t2.product_id group by t2.product_id
select count(*), t2.product_id from problems as t1 join product as t2 on t1.product_id = t2.product_id group by t2.product_id
select count(*), t2.product_id from problems as t1 join product as t2 on t1.product_id = t2.product_id where t1.date_problem_reported > "1986-11-13" group by t2.product_id
select count(*), t2.product_id from problems as t1 join product as t2 on t1.product_id = t2.product_id where t1.date_problem_reported > "1986-11-13" group by t2.product_id
select distinct product_name from product order by product_name
select distinct product_name from product order by product_name
select distinct product_name from product order by product_id
select distinct product_name from product order by product_id
select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = "Dameon" and t2.staff_last_name = "Frami" union select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = "Jolie" and t2.staff_last_name = "Weber"
select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = "Dameon" and t2.staff_last_name = "Frami" union select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = "Jolie" and t2.staff_last_name = "Weber"
select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = "Christop" and t2.staff_last_name = "Berge" intersect select product_id from problems as t1 join staff as t2 on t1.closure_authorised_by_staff_id = t2.staff_id where t2.staff_first_name = "Ashley" and t2.staff_last_name = "Medhurst"
select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = "Christop" and t2.staff_last_name = "Berge" intersect select product_id from problems as t1 join staff as t2 on t1.closure_authorised_by_staff_id = t2.staff_id where t2.staff_first_name = "Ashley" and t2.staff_last_name = "Medhurst"
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where date_problem_reported < ( select min(date_problem_reported) from problems as t3 join staff as t4 on t3.reported_by_staff_id = t4.staff_id where t4.staff_first_name = "Lysanne" and t4.staff_last_name = "Turcotte" );
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where date_problem_reported < ( select min(date_problem_reported) from problems as t3 join staff as t4 on t3.reported_by_staff_id = t4.staff_id where t4.staff_first_name = "Lysanne" and t4.staff_last_name = "Turcotte" );
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where date_problem_reported > ( select max(date_problem_reported) from problems as t3 join staff as t4 on t3.reported_by_staff_id = t4.staff_id where t4.staff_first_name = "Rylan" and t4.staff_last_name = "Homenick" );
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where date_problem_reported > ( select max(date_problem_reported) from problems as t3 join staff as t4 on t3.reported_by_staff_id = t4.staff_id where t4.staff_first_name = "Rylan" and t4.staff_last_name = "Homenick" );
select t2.product_name from problems as t1 join product as t2 on t1.product_id = t2.product_id group by t2.product_name order by count(*) desc limit 3
select t2.product_name from problems as t1 join product as t2 on t1.product_id = t2.product_id group by t2.product_name order by count(*) desc limit 3
select t1.problem_id from problems as t1 join product as t2 on t1.product_id = t2.product_id where t2.product_name = "voluptatem" and t1.date_problem_reported > "1995"
select t1.problem_id from problems as t1 join product as t2 on t1.product_id = t2.product_id where t2.product_name = "voluptatem" and t1.date_problem_reported > "1995"
select t3.staff_first_name, t3.staff_last_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t2.product_name = "rem" except select t3.staff_first_name, t3.staff_last_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t2.product_name = "aut"
select t3.staff_first_name, t3.staff_last_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t2.product_name = "rem" except select t3.staff_first_name, t3.staff_last_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t2.product_name = "aut"
select t2.product_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t3.staff_first_name = "Lacey" and t3.staff_last_name = "Bosco" intersect select t2.product_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t3.staff_first_name = "Kenton" and t3.staff_last_name = "Champlin"
select t2.product_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t3.staff_first_name = "Lacey" and t3.staff_last_name = "Bosco" intersect select t2.product_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t3.staff_first_name = "Kenton" and t3.staff_last_name = "Champlin"
select count(*) from branch where membership_amount > (select avg(membership_amount) from branch)
select count(*) from branch where membership_amount > (select avg(membership_amount) from branch)
select name, address_road, city from branch order by open_year
select name, address_road, city from branch order by open_year
select name from branch order by membership_amount desc limit 3
select name from branch order by membership_amount desc limit 3
select distinct city from branch where membership_amount >= 100
select distinct city from branch where membership_amount >= 100
select open_year from branch group by open_year having count(*) >= 2
select open_year from branch group by open_year having count(*) >= 2
select min(membership_amount), max(membership_amount) from branch where open_year = 2011 or city = 'London'
select min(membership_amount), max(membership_amount) from branch where open_year = 2011 or city = 'London'
select city, count(*) from branch where open_year < 2010 group by city
select city, count(*) from branch where open_year < 2010 group by city
select count(distinct level) from member
select count(distinct level) from member
select card_number, name, hometown from member order by level desc
select card_number, name, hometown from member order by level desc
select level from member group by level order by count(*) desc limit 1
select level from member group by level order by count(*) desc limit 1
select t3.name, t2.name from membership_register branch as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id order by t1.register_year
select t3.name, t2.name from membership_register branch as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id order by t1.register_year
select t2.name, count(*) from membership_register as t1 join branch as t2 on t1.branch_id = t2.branch_id where t1.register_year > 2015 group by t2.branch_id
select t2.name, count(*) from membership_register as t1 join branch as t2 on t1.branch_id = t2.branch_id where t1.register_year > 2015 group by t2.branch_id
select name from member where member_id not in (select member_id from membership register branch)
select name from member where member_id not in (select member_id from membership register branch)
select name, city from branch where branch_id not in (select branch_id from membership register branch)
select name, city from branch where branch_id not in (select branch_id from membership register branch)
select t2.name, t2.open_year from membership_register as t1 join branch as t2 on t1.branch_id = t2.branch_id where t1.register_year = 2016 group by t2.branch_id order by count(*) desc limit 1
select t2.name, t2.open_year from membership_register as t1 join branch as t2 on t1.branch_id = t2.branch_id where t1.register_year = 2016 group by t2.branch_id order by count(*) desc limit 1
select t2.name, t2.hometown from membership_register as t1 join member as t2 on t1.member_id = t2.member_id where t1.register_year = 2016
select t2.name, t2.hometown from membership_register as t1 join member as t2 on t1.member_id = t2.member_id where t1.register_year = 2016
select city from branch where open_year = 2001 and membership_amount > 100
select city from branch where open_year = 2001 and membership_amount > 100
select city from branch except select city from branch where membership_amount > 100
select city from branch except select city from branch where membership_amount > 100
select sum(total_pounds) from purchase as t1 join branch as t2 on t1.branch_id = t2.branch_id where t2.city = 'London' and t1.year = 2018
select sum(total_pounds) from purchase as t1 join branch as t2 on t1.branch_id = t2.branch_id where t2.city = 'London' and t1.year = 2018
select count(*) from purchase as t1 join member as t2 on t1.member_id = t2.member_id where t2.level = 6
select count(*) from purchase as t1 join member as t2 on t1.member_id = t2.member_id where t2.level = 6
select t2.name from membership_register as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id where t3.hometown = 'Louisville, Kentucky' intersect select t2.name from membership_register as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id where t3.hometown = 'Hiram, Georgia'
select t2.name from membership_register as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id where t3.hometown = 'Louisville, Kentucky' intersect select t2.name from membership_register as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id where t3.hometown = 'Hiram, Georgia'
select card_number from member where hometown like "%kentucky%"
select card_number from member where hometown like "%kentucky%"
select count(*) from student
select count(*) from student
select count(*) from voting record
select count(*) from voting record
select count(distinct president_vote) from voting record
select count(distinct president_vote) from voting record
select max(age) from student
select max(age) from student
select lname from student where major = 50
select lname from student where major = 50
select fname from student where age > 22
select fname from student where age > 22
select major from student where sex = "M"
select major from student where sex = "M"
select avg(age) from student where sex = "F"
select avg(age) from student where sex = "F"
select max(age), min(age) from student where major = 600
select max(age), min(age) from student where major = 600
select advisor from student where city_code = "BAL"
select advisor from student where city_code = "BAL"
select distinct secretary_vote from voting record where election_cycle = "Fall"
select distinct secretary_vote from voting record where election_cycle = "Fall"
select distinct president_vote from voting record where registration_date = "08/30/2015"
select distinct president_vote from voting record where registration_date = "08/30/2015"
select distinct registration_date, election_cycle from voting record
select distinct registration_date, election_cycle from voting record
select distinct president_vote, vice_president_vote from voting record
select distinct president_vote, vice_president_vote from voting record
select distinct t1.lname from student as t1 join voting record as t2 on t1.stuid = t2.class_president_vote
select distinct t1.lname from student as t1 join voting record as t2 on t1.stuid = t2.class_president_vote
select distinct t1.fname from student as t1 join voting record as t2 on t1.stuid = t2.class_senator_vote
select distinct t1.fname from student as t1 join voting record as t2 on t1.stuid = t2.class_senator_vote
select distinct t1.age from student as t1 join voting record as t2 on t1.stuid = t2.secretary_vote where t2.election_cycle = "Fall"
select distinct t1.age from student as t1 join voting record as t2 on t1.stuid = t2.secretary_vote where t2.election_cycle = "Fall"
select distinct t1.advisor from student as t1 join voting record as t2 on t1.stuid = t2.treasurer_vote where t2.election_cycle = "Spring"
select distinct t1.advisor from student as t1 join voting record as t2 on t1.stuid = t2.treasurer_vote where t2.election_cycle = "Spring"
select distinct t1.major from student as t1 join voting record as t2 on t1.stuid = t2.treasurer_vote
select distinct t1.major from student as t1 join voting record as t2 on t1.stuid = t2.treasurer_vote
select distinct t1.fname, t1.lname from student as t1 join voting record as t2 on t1.stuid = t2.president_vote where t1.sex = "F"
select distinct t1.fname, t1.lname from student as t1 join voting record as t2 on t1.stuid = t2.president_vote where t1.sex = "F"
select distinct t1.fname, t1.lname from student as t1 join voting record as t2 on t1.stuid = t2.vice_president_vote where t1.age = 18
select distinct t1.fname, t1.lname from student as t1 join voting record as t2 on t1.stuid = t2.vice_president_vote where t1.age = 18
select count(*) from student as t1 join voting record as t2 on t1.stuid = class_senator_vote where t1.sex = "M" and t2.election_cycle = "Fall"
select count(*) from student as t1 join voting record as t2 on t1.stuid = class_senator_vote where t1.sex = "M" and t2.election_cycle = "Fall"
select count(*) from student as t1 join voting record as t2 on t1.stuid = class_senator_vote where t1.city_code = "NYC" and t2.election_cycle = "Spring"
select count(*) from student as t1 join voting record as t2 on t1.stuid = class_senator_vote where t1.city_code = "NYC" and t2.election_cycle = "Spring"
select avg(t1.age) from student as t1 join voting record as t2 on t1.stuid = secretary_vote where t1.city_code = "NYC" and t2.election_cycle = "Spring"
select avg(t1.age) from student as t1 join voting record as t2 on t1.stuid = secretary_vote where t1.city_code = "NYC" and t2.election_cycle = "Spring"
select avg(t1.age) from student as t1 join voting record as t2 on t1.stuid = secretary_vote where t1.sex = "F" and t2.election_cycle = "Spring"
select avg(t1.age) from student as t1 join voting record as t2 on t1.stuid = secretary_vote where t1.sex = "F" and t2.election_cycle = "Spring"
select distinct t1.fname from student as t1 join voting record as t2 on t1.stuid = t2.vice_president_vote except select distinct fname from student where city_code = "PIT"
select distinct t1.fname from student as t1 join voting record as t2 on t1.stuid = t2.vice_president_vote except select distinct fname from student where city_code = "PIT"
select distinct t1.lname from student as t1 join voting record as t2 on t1.stuid = president_vote except select distinct lname from student where advisor = "2192"
select distinct t1.lname from student as t1 join voting record as t2 on t1.stuid = president_vote except select distinct lname from student where advisor = "2192"
select distinct t1.lname from student as t1 join voting record as t2 on t1.stuid = president_vote intersect select distinct lname from student where advisor = "8741"
select distinct t1.lname from student as t1 join voting record as t2 on t1.stuid = president_vote intersect select distinct lname from student where advisor = "8741"
select advisor, count(*) from student group by advisor
select advisor, count(*) from student group by advisor
select advisor from student group by advisor having count(*) > 2
select advisor from student group by advisor having count(*) > 2
select major from student group by major having count(*) < 3
select major from student group by major having count(*) < 3
select election_cycle, count(*) from voting record group by election_cycle
select election_cycle, count(*) from voting record group by election_cycle
select major from student group by major order by count(*) desc limit 1
select major from student group by major order by count(*) desc limit 1
select major from student where sex = "F" group by major order by count(*) desc limit 1
select major from student where sex = "F" group by major order by count(*) desc limit 1
select city_code from student group by city_code order by count(*) desc limit 1
select city_code from student group by city_code order by count(*) desc limit 1
select advisor from student group by advisor having count(*) > 2
select advisor from student group by advisor having count(*) > 2
select count(*) from products
select count(*) from products
select count(*) from reference colors
select count(*) from reference colors
select count(*) from characteristics
select count(*) from characteristics
select product_name, typical_buying_price from products
select product_name, typical_buying_price from products
select color_description from reference colors
select color_description from reference colors
select distinct characteristic_name from characteristics
select distinct characteristic_name from characteristics
select product_name from products where product_category_code = "Spices"
select product_name from products where product_category_code = "Spices"
select t1.product_name, t2.color_description, t1.product_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where product_category_code = "Herbs"
select t1.product_name, t2.color_description, t1.product_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where product_category_code = "Herbs"
select count(*) from products where product_category_code = "Seeds"
select count(*) from products where product_category_code = "Seeds"
select count(*) from products where product_category_code = "Spices" and typical_buying_price > 1000
select count(*) from products where product_category_code = "Spices" and typical_buying_price > 1000
select product_category_code, typical_buying_price from products where product_name = "cumin"
select product_category_code, typical_buying_price from products where product_name = "cumin"
select product_category_code from products where product_name = "flax"
select product_category_code from products where product_name = "flax"
select t1.product_name from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where t2.color_description = 'yellow'
select t1.product_name from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where t2.color_description = 'yellow'
select t1.product_category_description from reference product categories as t1 join products as t2 on t1.product_category_code = t2.product_category_code where t2.product_description like '%t%'
select t1.product_category_description from reference product categories as t1 join products as t2 on t1.product_category_code = t2.product_category_code where t2.product_description like '%t%'
select t2.color_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where t1.product_name = "catnip"
select t2.color_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where t1.product_name = "catnip"
select t1.color_code, t2.color_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where t1.product_name = "chervil"
select t1.color_code, t2.color_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where t1.product_name = "chervil"
select t1.product_id, t2.color_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code join product characteristics as t3 on t1.product_id = t3.product_id group by t1.product_id having count(*) >= 2
select t1.product_id, t2.color_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code join product characteristics as t3 on t1.product_id = t3.product_id group by t1.product_id having count(*) >= 2
select t1.product_name from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where t2.color_description = "white"
select t1.product_name from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where t2.color_description like "%white%"
select t1.product_name, t1.typical_buying_price, t1.typical_selling_price from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where t2.color_description = "yellow"
select t1.product_name, t1.typical_buying_price, t1.typical_selling_price from products as t1 join reference colors as t2 on t1.color_code = t2.color_code where t2.color_description like "%yellow%"
select count(*) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id where t1.product_name = "sesame"
select count(*) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id where t1.product_name = "sesame"
select count(distinct t3.characteristic_name) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "sesame"
select count(distinct t3.characteristic_name) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "sesame"
select t3.characteristic_name from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "sesame"
select t3.characteristic_name from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "sesame"
select t3.characteristic_name, t3.characteristic_data_type from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "cumin"
select t3.characteristic_name, t3.characteristic_data_type from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "cumin"
select t3.characteristic_name from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "sesame" and t3.characteristic_type_code = "Grade"
select t3.characteristic_name from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "sesame" and t3.characteristic_type_code = "Grade"
select count(*) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "laurel"
select count(*) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "laurel"
select count(*) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "flax"
select count(*) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = "flax"
select product_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join reference colors as t4 on t1.color_code = t4.color_code where t4.color_description = "red" and t3.characteristic_name = "fast"
select product_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join reference colors as t4 on t1.color_code = t4.color_code where t4.color_description = "red" and t3.characteristic_name = "fast"
select count(*) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t3.characteristic_name = "hot"
select count(*) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t3.characteristic_value = "hot"
select distinct t1.product_name from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t3.characteristic_name = "warm"
select distinct t1.product_name from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t3.characteristic_name = "warm"
select count(*) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join colors as t4 on t1.color_code = t4.color_code where t4.color_description = "red" and t3.characteristic_name = "slow"
select count(*) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join colors as t4 on t1.color_code = t4.color_code where t4.color_description = "red" and t3.characteristic_name = "slow"
select count(*) from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join colors as t4 on t1.color_code = t4.color_code where t4.color_description = "white" or t3.characteristic_name = "hot"
select count(*) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join products as t4 on t1.product_id = t4.product_id join characteristics as t5 on t2.characteristic_id = t5.characteristic_id join products as t5 on t3.product_id = t4.product_id join characteristics as t5 on t4.characteristic_id = t5.characteristic_id join products as t5 on t5.product_id = t4.product_id join characteristics as t5 on t4.characteristic_id = t5.characteristic_id join characteristics as t5 on t5.characteristic_id = t5.characteristic_id join products as t5 on t5.product_id = t5.product_id join characteristics as
select t2.unit_of_measure from products as t1 join reference product categories as t2 on t1.product_category_code = t2.product_category_code where t1.product_category_code = "Herbs"
select t2.unit_of_measure from products as t1 join reference product categories as t2 on t1.product_category_code = t2.product_category_code where t1.product_name = "Herb"
select product_category_description from reference product categories where product_category_code = "Spices"
select product_category_description from reference product categories where product_category_code = "Spices"
select product_category_description, unit_of_measure from reference product categories where category = "Herbs"
select product_category_description, unit_of_measure from reference product categories where product_category_code = "Herbs"
select t2.unit_of_measure from products as t1 join reference product categories as t2 on t1.product_category_code = t2.product_category_code where t1.product_name = "cumin"
select t2.unit_of_measure from products as t1 join reference product categories as t2 on t1.product_category_code = t2.product_category_code where t1.product_name = "cumin"
select t2.unit_of_measure, t2.product_category_code from products as t1 join reference product categories as t2 on t1.product_category_code = t2.product_category_code where t1.product_name = "chervil"
select t2.unit_of_measure, t2.product_category_code from products as t1 join reference product categories as t2 on t1.product_category_code = t2.product_category_code where t1.product_name = "chervil"
select t1.product_name from products as t1 join reference product categories as t2 on t1.product_category_code = t2.product_category_code join reference colors as t3 on t1.color_code = t3.color_code where t3.color_description = "white" and t2.unit_of_measure!= "Handful"
select t1.product_name from products as t1 join product_category_code as t2 on t1.product_category_code = t2.product_category_code join reference colors as t3 on t1.color_code = t3.color_code where t3.color_description like "%hanful%" and t2.unit_of_measure!= "Handful"
select t2.color_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code group by t2.color_description order by count(*) desc limit 1
select t2.color_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code group by t2.color_description order by count(*) desc limit 1
select t2.color_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code group by t2.color_description order by count(*) asc limit 1
select t2.color_description from products as t1 join reference colors as t2 on t1.color_code = t2.color_code group by t2.color_description order by count(*) asc limit 1
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id group by t3.characteristic_name order by count(*) desc limit 1
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id group by t3.characteristic_name order by count(*) desc limit 1
select characteristic_name, other_characteristic_details, characteristic_data_type from characteristics except select t1.characteristic_name, t1.other_characteristic_details, t1.characteristic_data_type from characteristics as t1 join product characteristics as t2 on t1.characteristic_id = t2.characteristic_id
select characteristic_name, other_characteristic_details, characteristic_data_type from characteristics except select t1.characteristic_name, t1.other_characteristic_details, t1.characteristic_data_type from characteristics as t1 join product characteristics as t2 on t1.characteristic_id = t2.characteristic_id
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id group by t3.characteristic_name having count(*) >= 2
select t3.characteristic_name from products as t1 join product characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id group by t3.characteristic_name having count(*) >= 2
select count(*) from reference colors where color_code not in ( select color_code from products )
select count(*) from reference colors where color_code not in ( select color_code from products )
select count(*) from event
select name from event order by year desc
select name from event order by year desc limit 1
select count(*) from stadium
select name from stadium order by capacity desc limit 1
select name from stadium where capacity < (select avg(capacity) from stadium)
select country from stadium group by country order by count(*) desc limit 1
select country from stadium group by country having count(*) <= 3
select country from stadium where capacity > 60000 intersect select country from stadium where capacity < 50000
select count(distinct city) from stadium where opening_year < 2006
select country, count(*) from stadium group by country
select country from stadium except select country from stadium where opening_year > 2006
select count(*) from stadium where country!= 'Russia'
select name from swimmer order by meter_100
select count(distinct nationality) from swimmer
select nationality, count(*) from swimmer group by nationality having count(*) > 1
select meter_200, meter_300 from swimmer where nationality = 'Australia'
select t1.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id where result = 'Win'
select t1.name from stadium as t1 join event as t2 on t1.id = t2.stadium_id group by t2.stadium_id order by count(*) desc limit 1
select t1.name, t1.capacity from stadium as t1 join event as t2 on t1.id = t2.stadium_id where t2.name = 'World Junior'
select name from stadium where id not in (select stadium_id from event)
select t1.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id group by t2.swimmer_id order by count(*) desc limit 1
select t1.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id group by t2.swimmer_id having count(*) >= 2
select t1.name, t1.nationality from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id where result = 'win' group by t2.swimmer_id having count(*) > 1
select name from swimmer where id not in (select swimmer_id from record)
select t1.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id where result = 'Win' intersect select t1.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id where result = 'Loss'
select t4.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id join event as t3 on t2.event_id = t3.id join stadium as t4 on t4.id = t3.stadium_id where t1.nationality = 'Australia'
select t3.name from record as t1 join event as t2 on t1.event_id = t2.id join stadium as t3 on t3.id = t2.stadium_id group by t2.stadium_id order by count(*) desc limit 1
select * from swimmer
select avg(capacity) from stadium where opening_year = 2005
select count(*) from railway
select builder from railway order by builder asc
select wheels, location from railway
select max(level) from manager where country!= "Australia "
select avg(age) from manager
select name from manager order by level asc
select name, arrival from train
select name from manager order by age desc limit 1
select t2.name, t1.location from railway as t1 join train as t2 on t1.railway_id = t2.railway_id
select t1.builder from railway as t1 join train as t2 on t1.railway_id = t2.railway_id where t2.name = "Andaman Exp"
select t2.railway_id, t1.location from railway as t1 join train as t2 on t1.railway_id = t2.railway_id group by t2.railway_id having count(*) > 1
select t2.railway_id, t1.builder from railway as t1 join train as t2 on t1.railway_id = t2.railway_id group by t2.railway_id order by count(*) desc limit 1
select builder, count(*) from railway group by builder
select builder from railway group by builder order by count(*) desc limit 1
select location, count(*) from railway group by location
select location from railway group by location having count(*) > 1
select objectnumber from railway where railway_id not in (select railway_id from train)
select country from manager where age > 50 intersect select country from manager where age < 46
select distinct country from manager
select working_year_starts from manager order by level desc
select country from manager where age > 50 or age < 46
select count(*) from addresses where country = 'USA'
select distinct city from addresses
select state_province_county, count(*) from addresses group by state_province_county
select customer_name, customer_phone from customers where customer_id not in (select customer_id from customer address history)
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1
select product_type_code from products group by product_type_code having count(*) >= 2
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id where t2.order_status_code = 'Completed' intersect select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id where t2.order_status_code = 'Part'
select customer_name, customer_phone, payment_method_code from customers order by customer_number desc
select t1.product_name, sum(t2.order_quantity) from products as t1 join order_items as t2 on t1.product_id = t2.product_id group by t1.product_id
select min(product_price), max(product_price), avg(product_price) from products
select count(*) from products where product_price > (select avg(product_price) from products)
select t2.customer_name, t3.city, t1.date_from, t1.date_to from customer address history as t1 join customers as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t1.address_id = t3.address_id
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id where t1.payment_method_code = 'Credit Card' group by t1.customer_id having count(*) > 2
select t1.customer_name, t1.customer_phone from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t3.order_id = t2.order_id group by t1.customer_id order by sum(t3.order_quantity) desc limit 1
select product_type_code, product_name from products where product_price > 1000 or product_price < 500
select dorm_name from dorm where gender = 'F'
select dorm_name from dorm where gender = 'F'
select dorm_name from dorm where student_capacity > 300
select dorm_name from dorm where student_capacity > 300
select count(*) from student where sex = 'F' and age < 25
select count(*) from student where sex = 'F' and age < 25
select fname from student where age > 20
select fname from student where age > 20
select fname from student where city_code = 'PHL' and age between 20 and 25
select fname from student where city_code = 'PHL' and age between 20 and 25
select count(*) from dorm
select count(*) from dorm
select count(*) from dorm amenity
select count(*) from dorm amenity
select sum(student_capacity) from dorm
select sum(student_capacity) from dorm
select count(*) from student
select count(*) from student
select avg(age), city_code from student group by city_code
select avg(age), city_code from student group by city_code
select avg(student_capacity), sum(student_capacity) from dorm where gender = 'X'
select avg(student_capacity), sum(student_capacity) from dorm where gender = 'X'
select count(distinct dormid) from has amenity
select count(distinct dormid) from has amenity
select dorm_name from dorm where dormid not in (select dormid from has amenity)
select dorm_name from dorm where dormid not in (select dormid from has amenity)
select count(distinct gender) from dorm
select count(distinct gender) from dorm
select student_capacity, gender from dorm where dorm_name like '%donor%'
select student_capacity, gender from dorm where dorm_name like '%donor%'
select dorm_name, gender from dorm where student_capacity > 300 or student_capacity < 100
select dorm_name, gender from dorm where student_capacity > 300 or student_capacity < 100
select count(distinct major), count(distinct city_code) from student
select count(distinct major), count(distinct city_code) from student
select t1.dorm_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'TV Lounge' intersect select t1.dorm_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'Study Room'
select t1.dorm_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'TV Lounge' intersect select t1.dorm_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'Study Room'
select t1.dorm_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'TV Lounge' except select t1.dorm_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'Study Room'
select t1.dorm_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.dormid = t3.dormid where t3.room_number = 'TV Lounge' except select t1.dorm_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.dormid = t3.dormid where t3.room_number = 'Study Room'
select lname from student where sex = 'F' and city_code = 'BAL' union select lname from student where sex = 'M' and age < 20
select lname from student where sex = 'F' and city_code = 'BAL' union select lname from student where sex = 'M' and age < 20
select dorm_name from dorm order by student_capacity desc limit 1
select dorm_name from dorm order by student_capacity desc limit 1
select amenity_name from dorm amenity order by amenity_name
select amenity_name from dorm amenity order by amenity_name
select city_code from student group by city_code order by count(*) desc limit 1
select city_code from student group by city_code order by count(*) desc limit 1
select fname, lname from student where age < (select avg(age) from student)
select fname, lname from student where age < (select avg(age) from student)
select fname, lname from student where city_code!= 'HKG' order by age
select fname, lname from student where city_code!= 'HKG' order by age
select t1.amenity_name from dorm as t1 join has amenity as t2 on t2.amenid = t1.amenid join dorm as t3 on t2.amenid = t3.amenid order by t1.amenity_name
select t1.amenity_name from dorm amenity as t1 join has amenity as t2 on t2.amenid = t1.amenid join dorm as t3 on t2.dormid = t3.dormid where t3.dorm_name = 'Anonymous donor Hall' order by t1.amenity_name
select count(*), sum(student_capacity), gender from dorm group by gender
select count(*), sum(student_capacity), gender from dorm group by gender
select avg(age), max(age), sex from student group by sex
select avg(age), max(age), sex from student group by sex
select count(*), major from student group by major
select count(*), major from student group by major
select count(*), avg(age), city_code from student group by city_code
select count(*), avg(age), city_code from student group by city_code
select count(*), avg(age), city_code from student where sex = 'M' group by city_code
select count(*), avg(age), city_code from student where sex = 'M' group by city_code
select count(*), city_code from student group by city_code having count(*) > 1
select count(*), city_code from student group by city_code having count(*) > 1
select fname, lname from student where major!= (select major from student group by major order by count(*) desc limit 1)
select fname, lname from student where major!= (select major from student group by major order by count(*) desc limit 1)
select count(*), sex from student where age > (select avg(age) from student) group by sex
select count(*), sex from student where age > (select avg(age) from student) group by sex
select avg(t1.age), t3.dorm_name from student as t1 join lives as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid group by t3.dorm_name
select avg(t1.age), t3.dorm_name from student as t1 join lives as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid group by t3.dorm_name
select count(*), t1.dormid from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid where t1.student_capacity > 100 group by t1.dormid
select count(*), t1.dormid from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid where t1.student_capacity > 100 group by t1.dormid
select count(*), t3.dorm_name from student as t1 join lives as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t1.age > 20 group by t3.dorm_name
select count(*), t3.dorm_name from student as t1 join lives as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t1.age > 20 group by t3.dorm_name
select t1.fname from student as t1 join lives as t2 on t1.stuid = t2.stuid where t2.dormid in (select t3.dormid from dorm as t3 join hashcraft as t4 on t3.dormid = t4.dormid join dorm as t5 on t4.dormid = t5.dormid where t5.room_number = 'Smith Hall')
select t1.fname from student as t1 join lives as t2 on t1.stuid = t2.stuid where t2.dormid in (select t3.dormid from dorm as t3 join lives as t4 on t3.dormid = t4.dormid join dorm as t5 on t4.dormid = t5.dormid where t5.dorm_name = 'Smith Hall')
select avg(t1.age) from student as t1 join lives as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.student_capacity = (select max(student_capacity) from dorm)
select avg(t1.age) from student as t1 join lives as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.student_capacity = (select max(student_capacity) from dorm)
select count(*) from student as t1 join lives as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.gender = 'M'
select count(*) from student as t1 join lives as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.gender = 'M'
select count(*) from student as t1 join lives as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.dorm_name = 'Smith Hall' and t1.sex = 'F'
select count(*) from student as t1 join lives as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.dorm_name = 'Smith Hall' and t1.sex = 'F'
select t3.amenity_name from dorm as t1 join has as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t1.dormid in (select t3.dormid from dorm as t1 join has as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t1.student_capacity > 100)
select t3.amenity_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t1.dormid in (select t3.dormid from dorm as t4 join has amenity as t5 on t4.dormid = t1.dormid join dorm as t5 on t5.dormid = t4.dormid where t4.student_capacity > 100)
select t3.amenity_name from dorm as t1 join has as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t1.dormid in (select t3.dormid from dorm as t1 join has as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t1.dormid in (select t3.dormid from dorm as t1 join has as t2 on t1.dormid = t2.dormid where t1.student_capacity > 100) order by t3.amenity_name
select t3.amenity_name from dorm as t1 join has as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t1.dormid in (select t3.dormid from dorm as t1 join has as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t1.dormid in (select t3.dormid from dorm as t1 join has as t2 on t1.dormid = t2.dormid where t1.student_capacity > 100) order by t3.amenity_name
select t1.amenity_name from dorm amenity as t1 join has as t2 on t1.amenid = t2.amenid group by t2.amenid order by count(*) desc limit 1
select t1.amenity_name from dorm amenity as t1 join has as t2 on t1.amenid = t2.amenid group by t2.amenid order by count(*) desc limit 1
select t1.fname from student as t1 join lives as t2 on t1.stuid = t2.stuid where t2.dormid in (select t2.dormid from dorm as t3 join has amenity as t4 on t3.dormid = t4.dormid join dorm as t5 on t4.amenid = t5.amenid group by t3.dormid order by count(*) desc limit 1)
select t1.fname from student as t1 join lives as t2 on t1.stuid = t2.stuid where t2.dormid in (select t2.dormid from dorm as t3 join has amenity as t4 on t3.dormid = t4.dormid join dorm as t5 on t4.amenid = t5.amenid group by t3.dormid order by count(*) desc limit 1)
select t1.dorm_name, t1.student_capacity from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid group by t2.dormid order by count(*) limit 1
select t1.dorm_name, t1.student_capacity from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid group by t2.dormid order by count(*) limit 1
select dorm_name from dorm except select t1.dorm_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid where t2.amenity_name = 'TV Lounge'
select dorm_name from dorm except select t1.dorm_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid
select t1.fname, t1.lname from student as t1 join lives as t2 on t1.stuid = t2.stuid where t2.dormid in (select t3.dormid from has amenity as t3 join dorm as t4 on t3.amenid = t4.amenid where t4.amenity_name = 'TV Lounge')
select t1.fname, t1.lname from student as t1 join lives as t2 on t1.stuid = t2.stuid where t2.dormid in (select t3.dormid from has amenity as t3 join dorm as t4 on t3.amenid = t4.amenid where t4.room_number = 'TV Lounge')
select t1.fname, t1.age from student as t1 join lives as t2 on t1.stuid = t2.stuid where t2.dormid not in (select t3.dormid from has as t3 join dorm as t4 on t3.amenid = t4.amenid join has as t5 on t4.amenid = t5.amenid where t5.amenity_name = 'TV Lounge')
select t1.fname, t1.age from student as t1 join lives as t2 on t1.stuid = t2.stuid where t2.dormid not in (select t3.dormid from has amenity as t3 join dorm as t4 on t3.amenid = t4.amenid where t4.amenity_name = 'TV Lounge')
select t3.amenity_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid join lives as t4 on t4.dormid = t1.dormid join student as t5 on t5.stuid = t4.stuid where t5.lname = 'Smith'
select t3.amenity_name from dorm as t1 join has amenity as t2 on t1.dormid = t2.dormid join dorm as t3 on t2.amenid = t3.amenid join lives as t4 on t4.dormid = t1.dormid join student as t5 on t5.stuid = t4.stuid where t5.lname = 'Smith'
select count(*) from customers
select count(*) from customers
select email_address, phone_number from customers order by email_address, phone_number
select email_address, phone_number from customers order by email_address, phone_number
select town_city from customers where customer_type_code = "Good credit Rating" group by town_city order by count(*) limit 1
select town_city from customers where customer_type_code = "Good credit Rating" group by town_city order by count(*) limit 1
select t1.product_name, count(*) from products as t1 join complaints as t2 on t1.product_id = t2.product_id group by t1.product_name
select t1.product_name, count(*) from products as t1 join complaints as t2 on t1.product_id = t2.product_id group by t1.product_name
select t1.email_address from customers as t1 join complaints as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) limit 1
select t1.email_address from customers as t1 join complaints as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) limit 1
select distinct t1.product_name from products as t1 join complaints as t2 on t1.product_id = t2.product_id join customers as t3 group by t3.customer_id order by count(*) limit 1
select distinct t1.product_name from products as t1 join complaints as t2 on t1.product_id = t2.product_id join customers as t3 group by t3.customer_id order by count(*) limit 1
select t1.phone_number from customers as t1 join complaints as t2 on t1.customer_id = t2.customer_id order by t2.date_complaint_raised desc limit 1
select t1.phone_number from customers as t1 join complaints as t2 on t1.customer_id = t2.customer_id order by t2.date_complaint_raised desc limit 1
select email_address, phone_number from customers where customer_id not in (select customer_id from complaints)
select email_address, phone_number from customers where customer_id not in (select customer_id from complaints)
select phone_number from customers union select phone_number from staff
select phone_number from customers union select phone_number from staff
select product_description from products where product_name = "Chocolate"
select product_description from products where product_name = "Chocolate"
select product_name, product_category_code from products order by product_price desc limit 1
select product_name, product_category_code from products order by product_price desc limit 1
select product_price from products where product_id not in (select product_id from complaints)
select product_price from products where product_id not in (select product_id from complaints)
select avg(product_price), product_category_code from products group by product_category_code
select avg(product_price), product_category_code from products group by product_category_code
select t1.last_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id join products as t3 on t2.product_id = t3.product_id order by t3.product_price limit 1
select t1.last_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id join products as t3 on t2.product_id = t3.product_id order by t3.product_price limit 1
select complaint_status_code from complaints group by complaint_status_code having count(*) > 3
select complaint_status_code from complaints group by complaint_status_code having count(*) > 3
select last_name from staff where email_address like "%wrau%"
select last_name from staff where email_address like "%wrau%"
select count(*) from customers group by customer_type_code order by count(*) desc limit 1
select count(*) from customers group by customer_type_code order by count(*) desc limit 1
select t1.last_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id order by t2.date_complaint_raised limit 1
select t1.last_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id order by t2.date_complaint_raised limit 1
select count(distinct complaint_type_code) from complaints
select count(distinct complaint_type_code) from complaints
select address_line_1, address_line_2 from customers where email_address = "vbogisich@example.org"
select address_line_1, address_line_2 from customers where email_address = "vbogisich@example.org"
select complaint_status_code, count(*) from complaints where complaint_type_code = "Product Failure" group by complaint_status_code
select complaint_status_code, count(*) from complaints where complaint_type_code = "Product Failure" group by complaint_status_code
select t1.first_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id group by t2.staff_id order by count(*) limit 5
select t1.first_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id group by t2.staff_id order by count(*) limit 5
select state from customers group by state order by count(*) limit 1
select state from customers group by state order by count(*) limit 1
select count(*) from submission
select count(*) from submission
select author from submission order by scores asc
select author from submission order by scores asc
select author, college from submission
select author, college from submission
select author from submission where college = "Florida" or college = "Temple"
select author from submission where college = "Florida" or college = "Temple"
select avg(scores) from submission
select avg(scores) from submission
select author from submission order by scores desc limit 1
select author from submission order by scores desc limit 1
select college, count(*) from submission group by college
select college, count(*) from submission group by college
select college from submission group by college order by count(*) desc limit 1
select college from submission group by college order by count(*) desc limit 1
select college from submission where scores > 90 intersect select college from submission where scores < 80
select college from submission where scores > 90 intersect select college from submission where scores < 80
select t2.author, t1.result from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id
select t2.author, t1.result from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id
select t1.result from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id order by t2.scores desc limit 1
select t1.result from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id order by t2.scores desc limit 1
select t2.author, count(distinct t1.workshop_id) from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id group by t2.author
select t2.author, count(distinct t1.workshop_id) from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id group by t2.author
select t2.author from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id group by t2.author having count(distinct t1.workshop_id) > 1
select t2.author from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id group by t2.author having count(distinct t1.workshop_id) > 1
select date, venue from workshop order by venue
select date, venue from workshop order by venue
select author from submission where submission_id not in (select submission_id from acceptance)
select author from submission where submission_id not in (select submission_id from acceptance)
select count(*) from investors
select investor_details from investors
select distinct lot_details from lots
select max(amount_of_transaction) from transactions
select date_of_transaction, share_count from transactions
select sum(share_count) from transactions
select transaction_id from transactions where transaction_type_code = 'PUR'
select date_of_transaction from transactions where transaction_type_code = "SALE"
select avg(amount_of_transaction) from transactions where transaction_type_code = "SALE"
select transaction_type_description from reference transaction types where transaction_type_code = "PUR"
select min(amount_of_transaction) from transactions where transaction_type_code = "PUR" and share_count > 50
select max(share_count) from transactions where amount_of_transaction < 10000
select date_of_transaction from transactions where share_count > 100 or amount_of_transaction > 1000
select t1.transaction_type_description, t2.date_of_transaction from reference transaction types as t1 join transactions as t2 on t1.transaction_type_code = t2.transaction_type_code where t2.share_count < 10
select t1.investor_details from investors as t1 join transactions as t2 on t1.investor_id = t2.investor_id where t2.share_count > 100
select count(distinct transaction_type_code) from transactions
select lot_details, investor_id from lots
select t2.lot_details from investors as t1 join lots as t2 on t1.investor_id = t2.investor_id where t1.investor_details = "l"
select t1.purchase_details from purchases as t1 join transactions as t2 on t1.purchase_transaction_id = t2.transaction_id where t2.amount_of_transaction > 10000
select t1.sales_details, t2.date_of_transaction from sales as t1 join transactions as t2 on t1.sales_transaction_id = t2.transaction_id where t2.amount_of_transaction < 3000
select t1.lot_details from lots as t1 join transactions as t2 on t1.lot_id = t2.transaction_id join transactions as t3 on t2.transaction_id = t3.transaction_id where t3.share_count < 50
select t1.lot_details from lots as t1 join transactions as t2 on t1.lot_id = t2.transaction_id join transactions as t3 on t2.transaction_id = t3.transaction_id where t3.share_count > 100 and t3.transaction_type_code = "PUR"
select transaction_type_code, avg(amount_of_transaction) from transactions group by transaction_type_code
select transaction_type_code, max(share_count), min(share_count) from transactions group by transaction_type_code
select investor_id, avg(share_count) from transactions group by investor_id
select investor_id, avg(share_count) from transactions group by investor_id order by avg(share_count)
select investor_id, avg(amount_of_transaction) from transactions group by investor_id
select t2.lot_id, avg(amount_of_transaction) from transactions as t1 join transactions lots as t2 on t1.transaction_id = t2.transaction_id group by t2.lot_id
select t2.lot_id, avg(amount_of_transaction) from transactions as t1 join transactions lots as t2 on t1.transaction_id = t2.transaction_id group by t2.lot_id order by avg(amount_of_transaction)
select investor_id, count(*) from transactions where transaction_type_code = "SALE" group by investor_id
select investor_id, count(*) from transactions group by investor_id
select transaction_type_code from transactions group by transaction_type_code order by count(*) asc limit 1
select transaction_type_code from transactions group by transaction_type_code order by count(*) desc limit 1
select t1.transaction_type_description from reference transaction types as t1 join transactions as t2 on t1.transaction_type_code = t2.transaction_type_code group by t1.transaction_type_code order by count(*) desc limit 1
select t2.investor_id, t1.investor_details from investors as t1 join transactions as t2 on t1.investor_id = t2.investor_id group by t2.investor_id order by count(*) desc limit 1
select t2.investor_id, t1.investor_details from investors as t1 join transactions as t2 on t1.investor_id = t2.investor_id group by t2.investor_id order by count(*) desc limit 3
select t2.investor_id from investors as t1 join transactions as t2 on t1.investor_id = t2.investor_id group by t2.investor_id having count(*) >= 2
select t2.investor_id, t1.investor_details from investors as t1 join transactions as t2 on t1.investor_id = t2.investor_id where t2.transaction_type_code = "SALE" group by t2.investor_id having count(*) >= 2
select date_of_transaction from transactions where share_count >= 100 or amount_of_transaction >= 100
select sales_details from sales union select purchase_details from purchases
select lot_details from lots except select t1.lot_details from lots as t1 join transactions as t2 on t1.lot_id = t2.lot_id
select count(*) from hotels
select count(*) from hotels
select price_range from hotels
select price_range from hotels
select distinct location_name from locations
select distinct location_name from locations
select name, other_details from staff
select name, other_details from staff
select tourist_details from visitors
select tourist_details from visitors
select price_range from hotels where star_rating_code = "5"
select price_range from hotels where star_rating_code = "5"
select avg(price_range) from hotels where star_rating_code = "5" and pets_allowed_yn = 1
select avg(price_range) from hotels where star_rating_code = "5" and pets_allowed_yn = 1
select address from locations where location_name = "UK Gallery"
select address from locations where location_name = "UK Gallery"
select other_details from locations where location_name = "UK Gallery"
select other_details from locations where location_name = "UK Gallery"
select location_name from locations where location_name like "%film%"
select location_name from locations where location_name like "%film%"
select count(distinct name) from photos
select count(distinct name) from photos
select distinct visit_date from visits
select distinct visit_date from visits
select name from tourist attractions where how_to_get_there = "bus"
select name from tourist attractions where how_to_get_there = "bus"
select name, opening_hours from tourist attractions where how_to_get_there = "bus" or how_to_get_there = "walk"
select name, opening_hours from tourist attractions where how_to_get_there = "bus" or how_to_get_there = "walk"
select t2.star_rating_description from hotels as t1 join ref hotel star rating as t2 on t1.star_rating_code = t2.star_rating_code where t1.price_range > 10000
select t2.star_rating_description from hotels as t1 join ref hotel star rating as t2 on t1.star_rating_code = t2.star_rating_code where t1.price_range > 10000
select t1.museum_details, t2.opening_hours from museums as t1 join tourist attractions as t2 on t1.museum_id = t2.tourist_attraction_id
select t1.museum_details, t2.opening_hours from museums as t1 join tourist attractions as t2 on t1.museum_id = t2.tourist_attraction_id
select t2.name from photos as t1 join tourist attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t1.name = "game1"
select t2.name from photos as t1 join tourist attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t1.name = "game1"
select t1.name, t1.description from photos as t1 join tourist_attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t2.name = "film festival"
select t1.name, t1.description from photos as t1 join tourist_attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t2.name = "film festival"
select t1.royal_family_details, t2.how_to_get_there from royal family as t1 join tourist attractions as t2 on t1.royal_family_id = t2.tourist_attraction_id
select t1.royal_family_details, t2.how_to_get_there from royal family as t1 join tourist attractions as t2 on t1.royal_family_id = t2.tourist_attraction_id
select t1.shop_details from shops as t1 join tourist_attractions as t2 on t1.shop_id = t2.tourist_attraction_id where t2.how_to_get_there = "walk"
select t1.shop_details from shops as t1 join tourist attractions as t2 on t1.shop_id = t2.tourist_attraction_id where t2.how_to_get_there = "walk"
select t1.name from staff as t1 join tourist_attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t2.name = "US museum"
select t1.name from staff as t1 join tourist attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t2.name = "US museum"
select t1.market_details from street markets as t1 join tourist_attractions as t2 on t1.market_id = t2.tourist_attraction_id where t2.how_to_get_there = "walk" or t2.how_to_get_there = "bus"
select t1.market_details from street markets as t1 join tourist attractions as t2 on t1.market_id = t2.tourist_attraction_id where t2.how_to_get_there = "walk" or t2.how_to_get_there = "bus"
select t2.visit_date, t2.visit_details from visitors as t1 join visits as t2 on t1.tourist_id = t2.tourist_id where t1.tourist_details = "Vincent"
select t2.visit_date, t2.visit_details from visitors as t1 join visits as t2 on t1.tourist_id = t2.tourist_id where t1.tourist_details = "Vincent"
select t1.name from tourist attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id join visitors as t3 on t2.tourist_id = t3.tourist_id where t3.tourist_details = "Vincent"
select t1.name from tourist attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id join visitors as t3 on t2.tourist_id = t3.tourist_id where t3.tourist_details = "Vincent"
select t1.name, t3.visit_date from tourist attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_name = "Vincent" or t2.tourist_name = "Vivian"
select t1.name, t3.visit_date from tourist attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_name = "Vincent" or t2.tourist_name = "Vivian"
select star_rating_code, avg(price_range) from hotels group by star_rating_code
select star_rating_code, avg(price_range) from hotels group by star_rating_code
select pets_allowed_yn, avg(price_range) from hotels group by pets_allowed_yn
select pets_allowed_yn, avg(price_range) from hotels group by pets_allowed_yn
select hotel_id, star_rating_code from hotels order by price_range asc
select hotel_id, star_rating_code from hotels order by price_range asc
select other_hotel_details from hotels order by price_range desc limit 3
select other_hotel_details from hotels order by price_range desc limit 3
select other_hotel_details, star_rating_code from hotels order by price_range asc limit 3
select other_hotel_details, star_rating_code from hotels order by price_range asc limit 3
select how_to_get_there from tourist attractions group by how_to_get_there order by count(*) desc limit 1
select how_to_get_there from tourist attractions group by how_to_get_there order by count(*) desc limit 1
select t1.attraction_type_description, t2.attraction_type_code from ref attraction types as t1 join tourist attractions as t2 on t1.attraction_type_code = t2.attraction_type_code group by t2.attraction_type_code order by count(*) desc limit 1
select t1.attraction_type_description, t2.attraction_type_code from ref attraction types as t1 join tourist attractions as t2 on t1.attraction_type_code = t2.attraction_type_code group by t2.attraction_type_code order by count(*) desc limit 1
select how_to_get_there, count(*) from tourist attractions group by how_to_get_there
select how_to_get_there, count(*) from tourist attractions group by how_to_get_there
select t1.name, t2.tourist_attraction_id, count(*) from tourist attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id
select t1.name, t2.tourist_attraction_id, count(*) from tourist attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id
select t1.name, t2.tourist_attraction_id from tourist attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id having count(*) >= 2
select t1.name, t2.tourist_attraction_id from tourist attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id having count(*) >= 2
select t1.name, t1.tourist_attraction_id from tourist attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id having count(*) <= 1
select t1.name, t1.tourist_attraction_id from tourist attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id having count(*) <= 1
select t2.name from locations as t1 join tourist attractions as t2 on t1.location_id = t2.location_id where t1.address = "660 shea Crescent" or t2.how_to_get_there = "walk"
select t2.name from locations as t1 join tourist attractions as t2 on t1.location_id = t2.location_id where t1.address = "660 shea Crescent" or t2.how_to_get_there = "walk"
select t1.name from tourist attractions as t1 join tourist attraction features as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id join shops as t3 on t2.shop_id = t3.shop_id
select t1.name from tourist attractions as t1 join tourist attraction features as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id join shops as t3 on t2.shop_id = t3.shop_id
select t2.name from locations as t1 join tourist attractions as t2 on t1.location_id = t2.location_id where t1.address = "254 ottilie Junction" or t2.how_to_get_there = "bus"
select t2.name from locations as t1 join tourist attractions as t2 on t1.location_id = t2.location_id where t1.address = "254 ottilie Junction" or t2.how_to_get_there = "bus"
select t1.name from tourist attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_id = 1 intersect select t1.name from tourist attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_id = 1
select t1.name from tourist attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_id = 1 intersect select t1.name from tourist attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_id = 1
select t1.name from tourist attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_id = 1 except select t1.name from tourist attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_id = 1
select t1.name from tourist attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_name = "Alison" except select t1.name from tourist attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_name = "Rosalind"
select count(*) from visitors where tourist_id not in ( select tourist_id from visits )
select count(*) from visitors where tourist_id not in ( select tourist_id from visits )
select count(*) from video games
select count(*) from video games
select count(distinct gtype) from video games
select count(distinct gtype) from video games
select distinct gtype from video games
select distinct gtype from video games
select gname, gtype from video games order by gname
select gname, gtype from video games order by gname
select gname from video games where gtype = "Collectible card game"
select gname from video games where gtype = "Collectible card game"
select gtype from video games where gname = "Call of Destiny"
select gtype from video games where gname = "Call of Destiny"
select count(*) from video games where gtype = "Massively multiplayer online game"
select count(*) from video games where gtype = "Massively multiplayer online game"
select gtype, count(*) from video games group by gtype
select gtype, count(*) from video games group by gtype
select gtype from video games group by gtype order by count(*) desc limit 1
select gtype from video games group by gtype order by count(*) desc limit 1
select gtype from video games group by gtype order by count(*) limit 1
select gtype from video games group by gtype order by count(*) limit 1
select stuid from student where city_code = "CHI"
select stuid from student where city_code = "CHI"
select stuid from student where advisor = 1121
select stuid from student where advisor = 1121
select fname from student where major = 600
select fname from student where major = 600
select major, avg(age), min(age), max(age) from student group by major
select major, avg(age), min(age), max(age) from student group by major
select advisor from student group by advisor having count(*) >= 2
select advisor from student group by advisor having count(*) >= 2
select count(distinct sportname) from sports info
select count(distinct sportname) from sports info
select count(distinct stuid) from sports info
select count(distinct stuid) from sports info
select stuid from sports info where onscholarship = 'Y'
select stuid from sports info where onscholarship = 'Y'
select t2.lname from sports info as t1 join student as t2 on t1.stuid = t2.stuid where t1.onscholarship = 'Y'
select t2.lname from sports info as t1 join student as t2 on t1.stuid = t2.stuid where t1.onscholarship = 'Y'
select sum(gamesplayed) from sports info
select sum(gamesplayed) from sports info
select sum(gamesplayed) from sports info where onscholarship = 'Y'
select sum(gamesplayed) from sports info where onscholarship = 'Y'
select sportname, count(*) from sports info group by sportname
select sportname, count(*) from sports info group by sportname
select stuid, count(*), sum(gamesplayed) from sports info group by stuid
select stuid, count(*), sum(gamesplayed) from sports info group by stuid
select stuid from sports info group by stuid having sum(hoursperweek) > 10
select stuid from sports info group by stuid having sum(hoursperweek) > 10
select t2.fname, t2.lname from sports info as t1 join student as t2 on t1.stuid = t2.stuid group by t1.stuid order by count(*) desc limit 1
select t2.fname, t2.lname from sports info as t1 join student as t2 on t1.stuid = t2.stuid group by t1.stuid order by count(*) desc limit 1
select sportname from sports info where onscholarship = 'Y' group by sportname order by count(*) desc limit 1
select sportname from sports info where onscholarship = 'Y' group by sportname order by count(*) desc limit 1
select stuid from student except select stuid from sports info
select stuid from student except select stuid from sports info
select stuid from student where major = 600 intersect select stuid from sports info where onscholarship = 'Y'
select stuid from student where major = 600 intersect select stuid from sports info where onscholarship = 'Y'
select stuid from student where sex = 'F' intersect select stuid from sports info where sportname = "Football"
select stuid from student where sex = 'F' intersect select stuid from sports info where onscholarship = 'Y'
select stuid from student where sex = 'M' except select stuid from sportsinfo where onscholarship = 'Y'
select stuid from student where sex = 'M' except select stuid from sportsinfo where sportname = "Football"
select sum(hoursperweek), sum(gamesplayed) from sports info as t1 join student as t2 on t1.stuid = t2.stuid where t2.sex = "David" and t1.year = 2004
select sum(hoursperweek), sum(gamesplayed) from sports info as t1 join student as t2 on t1.stuid = t2.stuid where t2.fname = "David" and t2.lname = "Shieber"
select sum(hoursperweek), sum(gamesplayed) from sports info as t1 join student as t2 on t1.stuid = t2.stuid where t2.age < 20
select sum(hoursperweek), sum(gamesplayed) from sports info as t1 join student as t2 on t1.stuid = t2.stuid where t2.age < 20
select count(distinct stuid) from plays games
select count(distinct stuid) from plays games
select stuid from student except select stuid from plays games
select stuid from student except select stuid from plays games
select stuid from sports info intersect select stuid from plays games
select stuid from sports info intersect select stuid from plays games
select gameid, sum(hours_played) from plays games group by gameid
select gameid, sum(hours_played) from plays games group by gameid
select stuid, sum(hours_played) from plays games group by stuid
select stuid, sum(hours_played) from plays games group by stuid
select gname from plays games as t1 join videogames as t2 on t1.gameid = t2.gameid group by t1.gameid order by sum(hours_played) desc limit 1
select gname from plays games as t1 join videogames as t2 on t1.gameid = t2.gameid group by t1.gameid order by sum(hours_played) desc limit 1
select gname from plays games as t1 join videogames as t2 on t1.gameid = t2.gameid group by t1.gameid having sum(hours_played) >= 1000
select gname from plays games as t1 join videogames as t2 on t1.gameid = t2.gameid group by t1.gameid having sum(hours_played) >= 1000
select gname from plays as t1 join videogames as t2 on t1.gameid = t2.gameid join student as t3 on t3.stuid = t1.stuid where t3.lname = "Smith" and t3.fname = "Linda"
select gname from plays as t1 join videogames as t2 on t1.gameid = t2.gameid join student as t3 on t3.stuid = t1.stuid where t3.lname = "Smith"
select t2.lname, t2.fname from sports info as t1 join student as t2 on t1.stuid = t2.stuid where t1.sportname = "Football" or t1.sportname = "Lacrosse"
select t2.lname, t2.fname from sports info as t1 join student as t2 on t1.stuid = t2.stuid where t1.sportname = "Football" or t1.sportname = "Lacrosse"
select fname, age from student where stuid in (select stuid from sports where sports = "Football" intersect select stuid from sports where sports = "Lacrosse")
select fname, age from student where stuid in (select stuid from sportsinfo where sportsplayed = "Football" intersect select stuid from sportsinfo where sportsplayed = "Lacrosse")
select lname, sex from student where stuid in (select t1.stuid from plays as t1 join videogames as t2 on t1.gameid = t2.gameid intersect select t1.stuid from plays as t1 join videogames as t2 on t1.gameid = t2.gameid where t2.gname = "Call of Destiny" intersect select t1.stuid from plays as t1 join videogames as t2 on t1.gameid = t2.gameid where t2.gname = "Works of Widenius")
select lname, sex from student where stuid in (select t1.stuid from plays games as t1 join videogames as t2 on t1.gameid = t2.gameid where t2.gname = "Call of Destiny" intersect select t1.stuid from plays games as t1 join videogames as t2 on t1.gameid = t2.gameid where t2.gname = "Works of Widenius")
select customer_name from customers
select customer_name from customers
select count(*) from customers
select count(*) from customers
select avg(order_quantity) from order items
select avg(order_quantity) from order items
select customer_name from customers where payment_method = "Cash"
select customer_name from customers where payment_method = "Cash"
select date_became_customer from customers where customer_id between 10 and 20
select date_became_customer from customers where customer_id between 10 and 20
select payment_method from customers group by payment_method order by count(*) desc limit 1
select payment_method from customers group by payment_method order by count(*) desc limit 1
select customer_name from customers where payment_method = (select payment_method from customers group by payment_method order by count(*) desc limit 1)
select customer_name from customers where payment_method = (select payment_method from customers group by payment_method order by count(*) desc limit 1)
select distinct payment_method from customers
select distinct payment_method from customers
select distinct product_details from products
select distinct product_details from products
select customer_name from customers where customer_name like "%alex%"
select customer_name from customers where customer_name like "%alex%"
select product_details from products where product_details like "%latte%" or product_details like "%americano%"
select product_details from products where product_details like "%latte%" or product_details like "%americano%"
select t3.address_content from customers as t1 join customer addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t1.customer_name = "Maudie Kertzmann"
select t3.address_content from customers as t1 join customer addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t1.customer_name = "Maudie Kertzmann"
select count(*) from customers as t1 join customer addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t3.city = "Lake Geovannyton"
select count(*) from customers as t1 join customer addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t3.city = "Lake Geovannyton"
select t1.customer_name from customers as t1 join customer addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t3.state_province_county = "Colorado"
select t1.customer_name from customers as t1 join customer addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t3.state_province_county = "Colorado"
select city from addresses where city not in ( select distinct t3.city from customers as t1 join customer addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id)
select city from addresses where city not in ( select distinct t3.city from customers as t1 join customer addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id)
select t3.city from customers as t1 join customer addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id group by t3.city order by count(*) desc limit 1
select t3.city from customers as t1 join customer addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id group by t3.city order by count(*) desc limit 1
select distinct city from addresses
select distinct city from addresses
select city from addresses where zip_postcode = 255
select city from addresses where zip_postcode = 255
select state_province_county, country from addresses where zip_postcode like "4%"
select state_province_county, country from addresses where zip_postcode like "4%"
select country from addresses group by country having count(address_id) > 4
select country from addresses group by country having count(address_id) > 4
select channel_code from customer contact channels group by channel_code having count(customer_id) < 5
select channel_code from customer contact channels group by channel_code having count(customer_id) < 5
select distinct channel_code from customers as t1 join customer contact channels as t2 on t1.customer_id = t2.customer_id where t1.customer_name = "Tillman Ernser"
select distinct channel_code from customers as t1 join customer contact channels as t2 on t1.customer_id = t2.customer_id where t1.customer_name = "Tillman Ernser"
select max(t2.active_to_date) from customers as t1 join customer contact channels as t2 on t1.customer_id = t2.customer_id where t1.customer_name = "Tillman Ernser"
select max(t2.active_to_date) from customers as t1 join customer contact channels as t2 on t1.customer_id = t2.customer_id where t1.customer_name = "Tillman Ernser"
select avg(active_to_date - active_from_date) from customer contact channels
select avg(active_to_date - active_from_date) from customer contact channels
select channel_code, contact_number from customer contact channels where active_to_date - active_from_date = (select active_to_date - active_from_date from customer contact channels order by (active_to_date - active_from_date) desc limit 1)
select channel_code, contact_number from customer contact channels where active_to_date - active_from_date = (select active_to_date - active_from_date from customer contact channels order by (active_to_date - active_from_date) desc limit 1)
select t1.customer_name, t2.active_from_date from customers as t1 join customer contact channels as t2 on t1.customer_id = t2.customer_id where t2.channel_code = 'Email'
select t1.customer_name, t2.active_from_date from customers as t1 join customer contact channels as t2 on t1.customer_id = t2.customer_id where t2.channel_code = 'Email'
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order items as t3 on t2.order_id = t3.order_id where t3.order_quantity = ( select max(order_quantity) from order items)
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order items as t3 on t2.order_id = t3.order_id where t3.order_quantity = ( select max(order_quantity) from order items)
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id group by t1.customer_name order by sum(t3.order_quantity) desc limit 1
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id group by t1.customer_name order by sum(t3.order_quantity) desc limit 1
select t1.payment_method from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id group by t1.customer_name order by sum(t3.order_quantity) limit 1
select t1.payment_method from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id group by t1.customer_name order by sum(t3.order_quantity) limit 1
select count(distinct t3.product_id) from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order items as t3 on t2.order_id = t3.order_id where t1.customer_name = "Rodrick Heaney"
select count(distinct t3.product_id) from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order items as t3 on t2.order_id = t3.order_id where t1.customer_name = "Rodrick Heaney"
select sum(t3.order_quantity) from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order items as t3 on t2.order_id = t3.order_id where t1.customer_name = "Rodrick Heaney"
select sum(t3.order_quantity) from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id where t1.customer_name = "Rodrick Heaney"
select count(distinct customer_id) from customer orders where order_status = "Cancelled"
select count(distinct customer_id) from customer orders where order_status = "Cancelled"
select count(*) from customer orders where order_details = "Second time"
select count(*) from customer orders where order_details = "Second time"
select t1.customer_name, t2.order_date from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id where order_status = "Delivered"
select t1.customer_name, t2.order_date from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id where order_status = "Delivered"
select sum(t2.order_quantity) from customer orders as t1 join order items as t2 on t1.order_id = t2.order_id where t1.order_status = "Cancelled"
select sum(t2.order_quantity) from customer orders as t1 join order items as t2 on t1.order_id = t2.order_id where t1.order_status = "Cancelled"
select sum(t2.order_quantity) from customer orders as t1 join order items as t2 on t1.order_id = t2.order_id where t1.order_date < "2018-03-17 07:13:53"
select sum(t2.order_quantity) from customer orders as t1 join order items as t2 on t1.order_id = t2.order_id where t1.order_date < "2018-03-17 07:13:53"
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id order by t2.order_date desc limit 1
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id order by t2.order_date desc limit 1
select t2.product_details from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by count(*) desc limit 1
select t2.product_details from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by count(*) desc limit 1
select t2.product_details, t2.product_id from order items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by sum(t1.order_quantity) limit 1
select t2.product_details, t2.product_id from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by sum(t1.order_quantity) limit 1
select address_content from addresses where state_province_county = "East Julianaside" and state_province_county = "Texas" union select address_content from addresses where state_province_county = "Gleasonmouth" and state_province_county = "Arizona"
select address_content from addresses where state_province_county = "East Julianaside" and state_province_county = "Texas" union select address_content from addresses where state_province_county = "Gleasonmouth" and state_province_county = "Arizona"
select customer_name from customers where payment_method!= 'Cash'
select customer_name from customers where payment_method!= 'Cash'
select customer_name from customers except select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'Latte'
select customer_name from customers except select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'Latte'
select customer_name from customers except select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id
select customer_name from customers except select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'Latte' intersect select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'Americano'
select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'Latte' intersect select t1.customer_name from customers as t1 join customer orders as t2 on t1.customer_id = t2.customer_id join order items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'Americano'
select count(*) from artist
select count(*) from artist
select age from artist
select age from artist
select avg(age) from artist
select avg(age) from artist
select famous_title from artist where artist_id in(select artist_id from album)
select famous_title from artist where artist = "Triumfall"
select distinct(famous_release_date) from artist
select distinct(famous_release_date) from artist
select date_of_ceremony, result from music_festival
select date_of_ceremony, result from music_festival
select category from music_festival where result = "Awarded"
select category from music_festival where result = "Awarded"
select max(weeks_on_top), min(weeks_on_top) from volume
select max(weeks_on_top), min(weeks_on_top) from volume
select song from volume where weeks_on_top > 1
select song from volume where weeks_on_top > 1
select song from volume order by song
select song from volume order by song
select count(distinct artist_id) from volume
select count(distinct artist_id) from volume
select t1.date_of_ceremony from music festival as t1 join volume as t2 on t1.volume = t2.volume_id where t2.weeks_on_top > 2
select t1.date_of_ceremony from music_festival as t1 join volume as t2 on t1.volume = t2.volume_id where t2.weeks_on_top > 2
select t2.song from music_festival as t1 join volume as t2 on t1.volume = t2.volume_id where t1.result = "Nominated"
select t2.song from music_festival as t1 join volume as t2 on t1.volume = t2.volume_id where t1.result = "Nominated"
select t2.issue_date from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.artist_name = "Gorgoroth"
select t2.issue_date from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.artist_name = "Gorgoroth"
select t2.song from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age >= 32
select t2.song from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age >= 32
select avg(t2.weeks_on_top) from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age <= 25
select avg(t2.weeks_on_top) from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age <= 25
select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top > 2
select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top > 2
select famous_title, age from artist order by age desc
select famous_title, age from artist order by age desc
select famous_release_date from artist order by age desc limit 1
select famous_release_date from artist order by age desc limit 1
select category, count(*) from music_festival group by category
select category, count(*) from music festival group by category
select result from music_festival group by result order by count(*) desc limit 1
select result from music_festival group by result order by count(*) desc limit 1
select category from music_festival group by category having count(*) > 1
select category from music_festival group by category having count(*) > 1
select song from volume order by weeks_on_top desc limit 1
select song from volume order by weeks_on_top desc limit 1
select famous_title from artist where artist_id not in(select artist_id from volume)
select famous_title from artist where artist_id not in(select artist_id from volume)
select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top > 2 intersect select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top < 2
select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top > 2 intersect select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top < 2
select date_of_ceremony from music_festival where category = "Best Song" and result = "Awarded"
select date_of_ceremony from music_festival where category = "Best Song" and result = "Awarded"
select issue_date from volume order by weeks_on_top asc limit 1
select issue_date from volume order by weeks_on_top asc limit 1
select count(distinct artist_id) from volume
select count(distinct artist_id) from volume
select result, count(*) from music festival group by result order by count(*) desc
select result, count(*) from music_festival group by result order by count(*) desc
select issue_date from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age <= 23
select issue_date from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age <= 23
select count(*) from roller coaster
select name from roller coaster order by length asc
select length, height from roller coaster
select name from country where languages!= "German"
select status from roller coaster where length > 3300 or height > 100
select speed from roller coaster order by length desc limit 1
select avg(speed) from roller coaster
select status, count(*) from roller_coaster group by status
select status from roller coaster group by status order by count(*) desc limit 1
select status from roller coaster group by status having count(*) > 2
select park from roller_coaster order by speed desc limit 1
select t2.name, t1.name from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id
select t1.name from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id group by t1.name having count(*) > 1
select t1.name, t1.population from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id order by t2.height desc limit 1
select t1.name, avg(t2.speed) from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id group by t1.name
select count(*) from country where country_id not in ( select country_id from roller_coaster where length > 3000 )
select t1.name, t1.area, t1.population from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id where t2.speed > 60 intersect select t1.name, t1.area, t1.population from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id where t2.speed < 55
select count(distinct rank) from captain
select count(distinct rank) from captain
select count(*), rank from captain group by rank
select count(*), rank from captain group by rank
select count(*), rank from captain where age < 50 group by rank
select count(*), rank from captain where age < 50 group by rank
select name from captain order by age desc
select name from captain order by age desc
select name, class, rank from captain
select name, class, rank from captain
select rank from captain group by rank order by count(*) desc limit 1
select rank from captain group by rank order by count(*) desc limit 1
select class from captain group by class having count(*) > 2
select class from captain group by class having count(*) > 2
select name from captain where rank = 'Midshipman' or rank = 'Lieutenant'
select name from captain where rank = 'Midshipman' or rank = 'Lieutenant'
select avg(age), min(age), class from captain group by class
select avg(age), min(age), class from captain group by class
select rank from captain where class = 'Cutter' intersect select rank from captain where class = 'Armed'
select rank from captain where class = 'Cutter' intersect select rank from captain where class = 'Armed'
select rank from captain except select rank from captain where class = 'Third-rate ship of the line'
select rank from captain except select rank from captain where class = 'Third-rate ship of the line'
select name from captain order by age limit 1
select name from captain order by age limit 1
select count(*) from ship
select count(*) from ship
select name, type, flag from ship order by built_year desc limit 1
select name, type, flag from ship order by built_year desc limit 1
select count(*), flag from ship group by flag
select count(*), flag from ship group by flag
select flag from ship group by flag order by count(*) desc limit 1
select flag from ship group by flag order by count(*) desc limit 1
select name from ship order by built_year, class
select name from ship order by built_year, class
select type from ship where flag = 'Panama' intersect select type from ship where flag = 'Malta'
select type from ship where flag = 'Panama' intersect select type from ship where flag = 'Malta'
select built_year from ship group by built_year order by count(*) desc limit 1
select built_year from ship group by built_year order by count(*) desc limit 1
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id group by t2.ship_id having count(*) > 1
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id group by t2.ship_id having count(*) > 1
select name, class from ship where ship_id not in (select ship_id from captain)
select name, class from ship where ship_id not in (select ship_id from captain)
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id order by t2.age limit 1
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id order by t2.age limit 1
select name, flag from ship where ship_id not in (select ship_id from captain where rank = 'Midshipman')
select name, flag from ship where ship_id not in (select ship_id from captain where rank = 'Midshipman')
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id where t2.rank = 'Midshipman' intersect select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id where t2.rank = 'Lieutenant'
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id where t2.rank = 'Midshipman' intersect select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id where t2.rank = 'Lieutenant'
select host_city from hosting city order by year desc limit 1
select host_city from hosting city order by year desc limit 1
select match_id from match where competition = "1994 fifa world cup qualification"
select match_id from match where competition = "1994 fifa world cup qualification"
select t1.city from city as t1 join hosting city as t2 on t1.city_id = t2.host_city where t2.year > 2010
select t1.city from city as t1 join hosting city as t2 on t1.city_id = t2.host_city where t2.year > 2010
select t1.city from city as t1 join hosting city as t2 on t1.city_id = t2.host_city group by t2.host_city order by count(*) desc limit 1
select t1.city from city as t1 join hosting city as t2 on t1.city_id = t2.host_city group by t2.host_city order by count(*) desc limit 1
select t3.venue from city as t1 join hosting city as t2 on t1.city_id = t2.host_city join match as t3 on t2.match_id = t3.match_id where t1.city = "Nanjing ( jiangsu )" and t3.competition = "1994 fifa world cup qualification"
select t3.venue from city as t1 join hosting city as t2 on t1.city_id = t2.host_city join match as t3 on t2.match_id = t3.match_id where t1.city = "Nanjing ( jiangsu )" and t3.competition = "1994 fifa world cup qualification"
select t2.jan from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t1.city_id = "Shanghai"
select t2.jan from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t1.city = "Shanghai"
select t2.year from city as t1 join hosting city as t2 on t1.city_id = t2.host_city where t1.city = "Taizhou ( zhejiang )"
select t2.year from city as t1 join hosting city as t2 on t1.city_id = t2.host_city where t1.city = "Taizhou ( zhejiang )"
select city from city order by regional_population desc limit 3
select city from city order by regional_population desc limit 3
select city, gdp from city order by gdp limit 1
select city, gdp from city order by gdp limit 1
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id order by t2.feb desc limit 1
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id order by t2.feb desc limit 1
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.jul or t2.mar > t2.oct
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.jul or t2.mar > t2.oct
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.jul intersect select t3.city from city as t3 join hosting city as t4 on t3.city_id = t4.host_city
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.jul intersect select t3.city from city as t3 join hosting city as t4 on t3.city_id = t4.host_city
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.dec except select t3.city from city as t3 join hosting city as t4 on t3.city_id = t4.host_city
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.dec except select t3.city from city as t3 join hosting city as t4 on t3.city_id = t4.host_city
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.feb > t2.jun union select t3.city from city as t3 join hosting city as t4 on t3.city_id = t4.host_city
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.feb > t2.jun union select t3.city from city as t3 join hosting city as t4 on t3.city_id = t4.host_city
select city from city where regional_population > 10000000
select city from city where regional_population > 10000000
select city from city where regional_population > 10000000 union select city from city where regional_population < 5000000
select city from city where regional_population > 10000000 union select city from city where regional_population < 5000000
select count(*), competition from match group by competition
select count(*), competition from match group by competition
select venue from match order by date desc
select venue from match order by date desc
select gdp from city order by regional_population desc limit 1
select gdp from city order by regional_population desc limit 1
select t1.gdp, t1.regional_population from city as t1 join hosting city as t2 on t1.city_id = t2.host_city group by t2.host_city having count(*) > 1
select t1.gdp, t1.regional_population from city as t1 join hosting city as t2 on t1.city_id = t2.host_city group by t2.host_city having count(*) > 1
select individual_first_name, individual_middle_name, individual_last_name from individuals order by individual_last_name
select individual_first_name, individual_middle_name, individual_last_name from individuals order by individual_last_name
select distinct form_type_code from forms
select distinct form_type_code from forms
select t1.form_name from forms as t1 join party forms as t2 on t1.form_id = t2.form_id group by t2.form_id order by count(*) desc limit 1
select t1.form_name from forms as t1 join party forms as t2 on t1.form_id = t2.form_id group by t2.form_id order by count(*) desc limit 1
select payment_method_code, party_phone from parties where party_email = "enrico09@example.com"
select payment_method_code, party_phone from parties where party_email = "enrico09@example.com"
select t1.party_email from parties as t1 join party forms as t2 on t1.party_id = t2.party_id where t2.form_id = (select form_id from party forms group by form_id order by count(*) desc limit 1)
select t1.party_email from parties as t1 join party forms as t2 on t1.party_id = t2.party_id where t2.form_id = (select form_id from party forms group by form_id order by count(*) desc limit 1)
select organization_name from organizations order by date_formed asc
select organization_name from organizations order by date_formed asc
select organization_name from organizations order by date_formed desc limit 1
select organization_name from organizations order by date_formed desc limit 1
select t3.individual_last_name from organizations as t1 join organization contact individuals as t2 on t1.organization_id = t2.organization_id join individuals as t3 on t2.individual_id = t3.individual_id where t1.organization_name = "Labour Party" order by t2.date_contact_to desc limit 1
select t3.individual_last_name from organizations as t1 join organization contact individuals as t2 on t1.organization_id = t2.organization_id join individuals as t3 on t2.individual_id = t3.individual_id where t1.organization_name = "Labour Party" order by t2.date_contact_to desc limit 1
select t3.individual_last_name from organizations as t1 join organization contact individuals as t2 on t1.organization_id = t2.organization_id join individuals as t3 on t2.individual_id = t3.individual_id where t1.uk_vat_number = (select max(uk_vat_number) from organizations) order by t2.date_contact_to asc limit 1
select t3.individual_last_name from organizations as t1 join organization contact individuals as t2 on t1.organization_id = t2.organization_id join individuals as t3 on t2.individual_id = t3.individual_id where t1.uk_vat_number = (select max(uk_vat_number) from organizations) order by t2.date_contact_to asc limit 1
select count(*) from services
select count(*) from services
select service_name from services except select t1.service_name from services as t1 join party services as t2 on t1.service_id = t2.service_id
select service_name from services except select t1.service_name from services as t1 join party services as t2 on t1.service_id = t2.service_id
select town_city from addresses union select state_province_county from addresses
select town_city from addresses union select state_province_county from addresses
select count(*) from addresses where state_province_county = "Colorado"
select count(*) from addresses where state_province_county = "Colorado"
select payment_method_code from parties group by payment_method_code having count(*) > 3
select payment_method_code from parties group by payment_method_code having count(*) > 3
select organization_name from organizations where organization_name like "%party%"
select organization_name from organizations where organization_name like "%party%"
select count(distinct payment_method_code) from parties
select count(distinct payment_method_code) from parties
select t1.party_email from parties as t1 join party services as t2 on t1.party_id = t2.customer_id group by t1.party_email order by count(*) desc limit 1
select t1.party_email from parties as t1 join party services as t2 on t1.party_id = t2.customer_id group by t1.party_email order by count(*) desc limit 1
select state_province_county from addresses where line_1_number_building like "%6862 kaitlyn knolls%"
select state_province_county from addresses where line_1_number_building like "%6862 kaitlyn knolls%"
select t1.organization_name from organizations as t1 join organization contact individuals as t2 on t1.organization_id = t2.organization_id group by t1.organization_name order by count(*) desc limit 1
select t1.organization_name from organizations as t1 join organization contact individuals as t2 on t1.organization_id = t2.organization_id group by t1.organization_name order by count(*) desc limit 1
select distinct t1.individual_last_name from individuals as t1 join organization contact individuals as t2 on t1.individual_id = t2.individual_id
select distinct t1.individual_last_name from individuals as t1 join organization contact individuals as t2 on t1.individual_id = t2.individual_id
select count(*) from driver
select name, home_city, age from driver
select party, count(*) from driver group by party
select name from driver order by age desc
select distinct home_city from driver
select home_city from driver group by home_city order by count(*) desc limit 1
select party from driver where home_city = 'Hartford' and age > 40
select home_city from driver where age > 40 group by home_city having count(*) >= 2
select home_city from driver except select home_city from driver where age > 40
select name from driver where driver_id not in (select driver_id from school bus)
select type from school group by type having count(*) = 2
select t2.school, t3.name from school bus as t1 join school as t2 on t1.school_id = t2.school_id join driver as t3 on t1.driver_id = t3.driver_id
select max(years_working), min(years_working), avg(years_working) from school bus
select school, type from school where school_id not in (select school_id from school bus)
select t2.type, count(*) from school_bus as t1 join school as t2 on t1.school_id = t2.school_id group by t2.type
select count(*) from driver where home_city = 'Hartford' or age < 40
select name from driver where home_city = 'Hartford' and age < 40
select t1.name from driver as t1 join school bus as t2 on t1.driver_id = t2.driver_id order by years_working desc limit 1
select count(*) from flight where velocity > 200
select vehicle_flight_number, date, pilot from flight order by altitude asc
select id, country, city, name from airport order by name
select max(group_equity_shareholding) from operate company
select avg(velocity) from flight where pilot = 'Thompson'
select t1.name, t1.type from operate company as t1 join flight as t2 on t1.id = t2.company_id
select name from airport where country!= 'Iceland'
select distinct t1.type from operate company as t1 join flight as t2 on t1.id = t2.company_id where t2.velocity < 200
select t1.id, t1.name from operate company as t1 join flight as t2 on t1.id = t2.company_id group by t1.id having count(*) > 1
select t1.id, t1.name, t1.iata from airport as t1 join flight as t2 on t1.id = t2.airport_id group by t2.id order by count(*) desc limit 1
select distinct t2.pilot from airport as t1 join flight as t2 on t1.id = t2.airport_id where t1.country = 'United States' or t1.name = 'Billund Airport'
select type, count(*) from operate company group by type order by count(*) desc limit 1
select count(*) from airport where id not in ( select airport_id from flight where pilot = 'Thompson' );
select t2.pilot from operate company as t1 join flight as t2 on t1.id = t2.company_id where t1.principal_activities = 'Cargo' intersect select t2.pilot from operate company as t1 join flight as t2 on t1.id = t2.company_id where t1.principal_activities = 'Catering services'
select name from airport where name like '%international%'
select t3.id, count(*) from operate company as t1 join flight as t2 on t1.id = t2.company_id join airport as t3 on t2.airport_id = t3.id group by t3.id
select count(*), country from airport group by country
select country from airport group by country having count(*) > 2
select pilot from flight group by pilot order by count(*) desc limit 1
select count(*) from accounts
select count(*) from accounts
select account_id, account_details from accounts
select account_id, account_details from accounts
select count(*) from statements
select count(*) from statements
select statement_id, statement_details from statements
select statement_id, statement_details from statements
select t1.statement_id, t2.statement_details, t1.account_details from accounts as t1 join statements as t2 on t1.statement_id = t2.statement_id
select t1.statement_id, t2.statement_details, t1.account_details from accounts as t1 join statements as t2 on t1.statement_id = t2.statement_id
select statement_id, count(*) from accounts group by statement_id
select statement_id, count(*) from accounts group by statement_id
select t1.statement_id, t2.statement_details from accounts as t1 join statements as t2 on t1.statement_id = t2.statement_id group by t1.statement_id order by count(*) desc limit 1
select t1.statement_id, t2.statement_details from accounts as t1 join statements as t2 on t1.statement_id = t2.statement_id group by t1.statement_id order by count(*) desc limit 1
select count(*) from documents
select count(*) from documents
select document_type_code, document_name, document_description from documents where document_name = 'Noel CV' or document_name = 'King Book'
select document_type_code, document_name, document_description from documents where document_name = 'Noel CV' or document_name = 'King Book'
select document_id, document_name from documents
select document_id, document_name from documents
select document_name, document_id from documents where document_type_code = "BK"
select document_name, document_id from documents where document_type_code = "BK"
select count(*), project_id from documents where document_type_code = "BK" group by project_id
select count(*), project_id from documents where document_type_code = "BK" group by project_id
select document_name, document_date from documents as t1 join projects as t2 on t1.project_id = t2.project_id where t2.project_details = 'Graph database project'
select document_name, document_date from documents as t1 join projects as t2 on t1.project_id = t2.project_id where t2.project_details = 'Graph database project'
select project_id, count(*) from documents group by project_id
select project_id, count(*) from documents group by project_id
select project_id from documents group by project_id order by count(*) asc limit 1
select project_id from documents group by project_id order by count(*) asc limit 1
select project_id from documents group by project_id having count(*) >= 2
select project_id from documents group by project_id having count(*) >= 2
select document_type_code, count(*) from documents group by document_type_code
select document_type_code, count(*) from documents group by document_type_code
select document_type_code from documents group by document_type_code order by count(*) desc limit 1
select document_type_code from documents group by document_type_code order by count(*) desc limit 1
select document_type_code from documents group by document_type_code having count(*) < 3
select document_type_code from documents group by document_type_code having count(*) < 3
select t1.statement_details, t2.document_name from statements as t1 join documents as t2 on t1.statement_id = t2.document_id where t2.project_details = 'Private Project'
select t1.statement_details, t2.document_name from statements as t1 join documents as t2 on t1.statement_id = t2.document_id where t1.statement_details = 'Private Project'
select document_type_code, document_type_name, document_type_description from reference document types
select document_type_code, document_type_name, document_type_description from reference document types
select document_type_description from reference document types where document_type_name = "Film"
select document_type_description from reference document types where document_type_name = "Film"
select t1.document_type_name, t1.document_type_description, t2.document_date from reference document types as t1 join documents as t2 on t1.document_type_code = t2.document_type_code
select t1.document_type_name, t1.document_type_description, t2.document_date from reference document types as t1 join documents as t2 on t1.document_type_code = t2.document_type_code
select count(*) from projects
select count(*) from projects
select project_id, project_details from projects
select project_id, project_details from projects
select t1.project_id, t1.project_details from projects as t1 join documents as t2 on t1.project_id = t2.project_id group by t1.project_id having count(*) > 2
select t1.project_id, t1.project_details from projects as t1 join documents as t2 on t1.project_id = t2.project_id group by t1.project_id having count(*) > 2
select t1.project_details from projects as t1 join documents as t2 on t1.project_id = t2.project_id where t2.document_name = "King Book"
select t1.project_details from projects as t1 join documents as t2 on t1.project_id = t2.project_id where t2.document_name = "King Book"
select count(*) from reference budget codes
select count(*) from reference budget codes
select budget_type_code, budget_type_description from reference budget codes
select budget_type_code, budget_type_description from reference budget codes
select budget_type_description from reference budget codes where budget_type_code = "ORG"
select budget_type_description from reference budget codes where budget_type_code = "ORG"
select count(*) from documents with expenses
select count(*) from documents with expenses
select document_id from documents with expenses where budget_type_code = 'SF'
select document_id from documents where budget_type_code = 'SF'
select t2.budget_type_code, t2.budget_type_description, t1.document_id from documents as t1 join reference budget codes as t2 on t1.budget_type_code = t2.budget_type_code
select t2.budget_type_code, t2.budget_type_description, t1.document_id from documents as t1 join reference budget codes as t2 on t1.budget_type_code = t2.budget_type_code
select t1.document_id from documents as t1 join reference budget codes as t2 on t1.budget_type_code = t2.budget_type_code where t2.budget_type_description = "Government"
select t1.document_id from documents as t1 join reference budgets as t2 on t1.budget_type_code = t2.budget_type_code where t2.budget_type_description = "Government"
select budget_type_code, count(*) from documents group by budget_type_code
select budget_type_code, count(*) from documents group by budget_type_code
select budget_type_code from documents group by budget_type_code order by count(*) desc limit 1
select budget_type_code from documents with expenses group by budget_type_code order by count(*) desc limit 1
select document_id from documents except select document_id from documents with expenses
select document_id from documents except select document_id from documents with expenses
select document_id from documents where document_type_code = "CV" except select document_id from documents with expenses
select document_id from documents where document_type_code = "CV" except select document_id from documents with expenses
select t1.document_id from documents as t1 join documents as t2 on t1.document_id = t2.document_id where t1.document_name like '%s%'
select t1.document_id from documents as t1 join documents as t2 on t1.document_id = t2.document_id where t1.document_name like '%s%'
select count(*) from documents where document_id not in ( select document_id from documents with expenses )
select count(*) from documents where document_id not in ( select document_id from documents with expenses )
select t1.document_date from documents as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_type_code = 'GV' intersect select t1.document_date from documents as t1 join documents as t2 on t1.document_id = t2.document_id where t2.document_type_code = 'SF'
select t1.document_date from documents as t1 join documents as t2 on t1.document_id = t2.document_id where t2.budget_type_code = 'GV' intersect select t1.document_date from documents as t1 join documents as t2 on t1.document_id = t2.document_id where t2.budget_type_code = 'SF'
select max(account_details) from accounts union select account_details from accounts where account_details like "%5%"
select max(account_details) from accounts union select account_details from accounts where account_details like "%5%"
select count(*) from scientists
select count(*) from scientists
select sum(hours) from projects
select sum(hours) from projects
select count(distinct scientist) from assigned to
select count(distinct scientist) from assigned to
select count(distinct name) from projects
select count(distinct name) from projects
select avg(hours) from projects
select avg(hours) from projects
select name from projects order by hours desc limit 1
select name from projects order by hours desc limit 1
select name from projects where hours > (select avg(hours) from projects)
select name from projects where hours > (select avg(hours) from projects)
select t1.name, t1.hours from projects as t1 join assigned to as t2 on t1.code = t2.project group by t2.project order by count(*) desc limit 1
select t1.name, t1.hours from projects as t1 join assigned to as t2 on t1.code = t2.project group by t2.project order by count(*) desc limit 1
select t2.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t3.name like '%smith%'
select t2.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t3.name like '%smith%'
select sum(t2.hours) from assigned as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t3.name = 'Michael Rogers' or t3.name = 'Carol Smith'
select sum(t2.hours) from assigned as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t3.name = 'Michael Rogers' or t3.name = 'Carol Smith'
select name from projects where hours between 100 and 300
select name from projects where hours between 100 and 300
select t3.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.name = 'Matter of Time' intersect select t3.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.name = 'A puzzling Parallax'
select t3.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.name = 'Matter of Time' intersect select t3.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.name = 'A puzzling Parallax'
select name from scientists order by name
select name from scientists order by name
select count(*), t1.name from projects as t1 join assigned to as t2 on t1.code = t2.project group by t1.name
select count(*), t1.name from projects as t1 join assigned to as t2 on t1.code = t2.project group by t1.name
select count(*), t1.name from projects as t1 join assigned to t1.code, t1.hours where t1.hours > 300 group by t1.name
select count(*), t1.name from projects as t1 join assigned to t1.code, t1.hours from projects as t2 on t1.code = t2.project where t1.hours > 300 group by t1.name
select count(*), t1.name from scientists as t1 join assigned to as t2 on t1.ssn = t2.scientist group by t1.name
select count(*), t1.name from scientists as t1 join assigned to as t2 on t1.ssn = t2.scientist group by t1.name
select t3.ssn, t3.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = (select max(hours) from projects)
select t3.ssn, t3.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = (select max(hours) from projects)
select t2.name from assigned to as t1 join scientists as t2 on t1.scientist = t2.ssn
select t2.name from assigned to as t1 join scientists as t2 on t1.scientist = t2.ssn
select name from projects where code not in (select project from assigned to)
select name from projects where code not in (select project from assigned to)
select name from scientists where ssn not in (select scientist from assigned to)
select name from scientists where ssn not in (select scientist from assigned to)
select count(*) from scientists where ssn not in (select scientist from assigned to)
select count(*) from scientists where ssn not in (select scientist from assigned to)
select name from scientists except select t3.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = (select max(hours) from projects)
select name from scientists except select t3.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = (select max(hours) from projects)
select t1.name, t3.name, t3.hours from scientists as t1 join assigned to as t2 on t1.ssn = t2.scientist join projects as t3 on t2.project = t3.code order by t3.name, t1.name
select t1.name, t3.name, t3.hours from scientists as t1 join assigned to as t2 on t1.ssn = t2.scientist join projects as t3 on t2.project = t3.code order by t3.name, t1.name
select t2.name, t3.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = (select min(hours) from projects)
select t2.name, t3.name from assigned to as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = (select min(hours) from projects)
select name from wine order by score limit 1
select name from wine order by score limit 1
select winery from wine order by score limit 1
select winery from wine order by score limit 1
select name from wine where year = "2008"
select name from wine where year = "2008"
select grape, appelation from wine
select grape, appelation from wine
select name, score from wine
select name, score from wine
select area, county from appellations
select area, county from appellations
select price from wine where year < 2010
select price from wine where year < 2010
select name from wine where score > 90
select name from wine where score > 90
select distinct t2.name from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = "red"
select distinct t2.name from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = "red"
select distinct t2.name from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.area = "North Coast"
select distinct t2.name from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.area = "North Coast"
select count(*) from wine where winery = "Robert Biale"
select count(*) from wine where winery = "Robert Biale"
select count(*) from appellations where county = "Napa"
select count(*) from appellations where county = "Napa"
select avg(t2.price) from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = "Sonoma"
select avg(t2.price) from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = "Sonoma"
select t2.name, t2.score from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = "white"
select t2.name, t2.score from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = "white"
select max(t2.price) from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.area = "Central Coast" and t2.year < 2005
select max(t2.price) from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.area = "Central Coast" and t2.year < 2005
select distinct t1.grape from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = "white" and t2.score > 90
select distinct t1.grape from grapes as t1 join wine as t2 on t1.grape = t2.grape where t2.score > 90
select t2.name from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = "Red" and t2.price > 50
select t2.name from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = "red" and t2.price > 50
select t2.name from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = "Monterey" and t2.price < 50
select t2.name from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = "Monterey" and t2.price < 50
select count(*), grape from wine group by grape
select count(*), grape from wine group by grape
select avg(price), year from wine group by year
select avg(price), year from wine group by year
select distinct name from wine where price > (select min(price) from wine where winery = "John Anthony")
select distinct name from wine where price > (select min(price) from wine where winery = "John Anthony")
select distinct name from wine order by name
select distinct name from wine order by name
select distinct name from wine order by price
select distinct name from wine order by price
select t1.area from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having t2.year < 2010 order by count(*) desc limit 1
select t1.area from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having t2.year < 2010 order by count(*) desc limit 1
select t1.color from grapes as t1 join wine as t2 on t1.grape = t2.grape group by t2.grape order by avg(price) desc limit 1
select t1.color from grapes as t1 join wine as t2 on t1.grape = t2.grape group by t2.grape order by avg(price) desc limit 1
select distinct name from wine where year < 2000 or year > 2010
select distinct name from wine where year < 2000 or year > 2010
select distinct winery from wine where price between 50 and 100
select distinct winery from wine where price between 50 and 100
select avg(price), avg(cases) from wine where year = 2009 and grape = "Zinfandel"
select avg(price), avg(cases) from wine where year = 2009 and grape = "Zinfandel"
select max(price), max(score) from wine where appelation = "St. Helena"
select max(price), max(score) from wine where appelation = "St. Helena"
select max(price), max(score), year from wine group by year
select max(price), max(score), year from wine group by year
select avg(price), avg(score), appelation from wine group by appelation
select avg(price), avg(score), appelation from wine group by appelation
select winery from wine group by winery having count(*) >= 4
select winery from wine group by winery having count(*) >= 4
select t1.county from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having count(*) <= 3
select t1.county from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having count(*) <= 3
select name from wine where year < (select min(year) from wine where winery = "Brander")
select name from wine where year < (select min(year) from wine where winery = "Brander")
select name from wine where price > (select max(price) from wine where year = 2006)
select name from wine where price > (select max(price) from wine where year = 2006)
select t2.winery from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = "white" group by t2.winery order by count(*) desc limit 3
select t2.winery from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = "white" group by t2.winery order by count(*) desc limit 3
select grape, winery, year from wine where price > 100 order by year
select grape, winery, year from wine where price > 100 order by year
select grape, appelation, name from wine where score > 93 order by name
select grape, appelation, name from wine where score > 93 order by name
select appelation from wine where year > 2008 except select appelation from appellations where area = "Central Coast"
select appelation from wine where year > 2008 except select appelation from appellations where area = "Central Coast"
select avg(price) from wine where appelation not in (select t1.appelation from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = 'Sonoma')
select avg(price) from wine where appelation not in (select t1.appelation from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = 'Sonoma')
select t1.county from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t2.score > 90 group by t1.county order by count(*) desc limit 1
select t1.county from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t2.score > 90 group by t1.county order by count(*) desc limit 1
select count(*) from station
select name, location, number_of_platforms from station
select distinct location from station
select name, total_passengers from station where location!= 'London'
select name, main_services from station order by total_passengers desc limit 3
select avg(total_passengers), max(total_passengers) from station where location = 'London' or location = 'Glasgow'
select location, sum(number_of_platforms), sum(total_passengers) from station group by location
select distinct location from station where number_of_platforms >= 15 and total_passengers > 25
select location from station except select location from station where number_of_platforms >= 15
select location from station group by location order by count(*) desc limit 1
select name, time, service from train
select count(*) from train
select name, service from train order by time
select t2.name, count(*) from train station as t1 join station as t2 on t1.station_id = t2.station_id group by t1.station_id
select t2.name, t3.name from train_station as t1 join station as t2 on t1.station_id = t2.station_id join train as t3 on t3.train_id = t1.train_id
select t3.name, t3.time from train_station as t1 join station as t2 on t1.station_id = t2.station_id join train as t3 on t3.train_id = t1.train_id where t2.city = 'London' order by t3.time desc
select t2.name from train station as t1 join station as t2 on t1.station_id = t2.station_id group by t1.station_id order by count(*) desc limit 1
select t2.name from train station as t1 join station as t2 on t1.station_id = t2.station_id group by t1.station_id having count(*) >= 2
select location from station group by location having count(*) = 1
select name from station where station_id not in (select station_id from train station)
select t2.name from train station as t1 join station as t2 on t1.station_id = t2.station_id join train as t3 on t3.train_id = t1.train_id where t3.name = "Ananthapuri Express" intersect select t2.name from train station as t1 join station as t2 on t1.station_id = t2.station_id join train as t3 on t3.train_id = t1.train_id where t3.name = "Guruvayur Express"
select t2.name from train_station as t1 join train as t2 on t1.train_id = t2.train_id where t1.station_id not in (select t4.station_id from train station as t3 join station as t4 on t3.station_id = t4.station_id where t4.location = "London")
select name, location from station order by annual_entry_exit, annual_interchanges
select vehicle_id from vehicles;
select vehicle_id from vehicles;
select count(*) from vehicles;
select count(*) from vehicles;
select vehicle_details from vehicles where vehicle_id = 1;
select vehicle_details from vehicles where vehicle_id = 1;
select first_name, middle_name, last_name from staff;
select first_name, middle_name, last_name from staff;
select date_of_birth from staff where first_name = "Janessa" and last_name = "Sawayn";
select date_of_birth from staff where first_name = "Janessa" and last_name = "Sawayn";
select date_joined_staff from staff where first_name = "Janessa" and last_name = "Sawayn";
select date_joined_staff from staff where first_name = "Janessa" and last_name = "Sawayn";
select date_left_staff from staff where first_name = "Janessa" and last_name = "Sawayn";
select date_left_staff from staff where date_of_birth = "Janessa" and date_left_staff = "Sawayn";
select count(*) from staff where first_name = "Ludie";
select count(*) from staff where first_name = "Ludie";
select nickname from staff where first_name = "Janessa" and last_name = "Sawayn";
select nickname from staff where first_name = "Janessa" and last_name = "Sawayn";
select count(*) from staff;
select count(*) from staff;
select t1.city from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn";
select t1.city from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn";
select t1.country, t1.state_province_county from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn";
select t1.country, t1.state_province_county from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn";
select sum(t1.lesson_time) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = "Rylan" and t2.last_name = "Goodwin";
select sum(t1.lesson_time) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = "Rylan" and t2.last_name = "Goodwin";
select t1.zip_postcode from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn";
select t1.zip_postcode from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn";
select count(*) from addresses where state_province_county = "Georgia";
select count(*) from addresses where state_province_county = "Georgia";
select t2.first_name, t2.last_name from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t1.city = "Damianfort";
select t2.first_name, t2.last_name from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t1.city = "Damianfort";
select t1.city, count(*) from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id group by t1.city order by count(*) desc limit 1;
select t1.city, count(*) from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id group by t1.city order by count(*) desc limit 1;
select t1.state_province_county from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id group by t1.state_province_county having count(*) between 2 and 4;
select t1.state_province_county from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id group by t1.state_province_county having count(*) between 2 and 4;
select first_name, last_name from customers;
select first_name, last_name from customers;
select email_address, date_of_birth from customers where first_name = "Carole"
select email_address, date_of_birth from customers where first_name = "Carole"
select phone_number, email_address from customers where amount_outstanding > 2000;
select phone_number, email_address from customers where amount_outstanding > 2000;
select customer_status_code, cell_mobile_phone_number, email_address from customers where first_name = "Marina" or last_name = "Kohler"
select customer_status_code, cell_mobile_phone_number, email_address from customers where first_name = "Marina" or last_name = "Kohler"
select date_of_birth from customers where customer_status_code = 'Good Customer'
select date_of_birth from customers where customer_status_code = 'Good Customer'
select date_became_customer from customers where first_name = "Carole" and last_name = "Bernhard";
select date_became_customer from customers;
select count(*) from customers;
select count(*) from customers;
select customer_status_code, count(*) from customers group by customer_status_code;
select customer_status_code, count(*) from customers group by customer_status_code;
select customer_status_code from customers group by customer_status_code order by count(*) asc limit 1;
select customer_status_code from customers group by customer_status_code order by count(*) asc limit 1;
select count(*) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = "Rylan" and t2.last_name = "Goodwin" and t1.lesson_date = "Completed";
select count(*) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = "Rylan" and t2.last_name = "Goodwin" and t1.lesson_date = "1";
select max(amount_outstanding), min(amount_outstanding), avg(amount_outstanding) from customers;
select max(amount_outstanding), min(amount_outstanding), avg(amount_outstanding) from customers;
select first_name, last_name from customers where amount_outstanding between 1000 and 3000;
select first_name, last_name from customers where amount_outstanding between 1000 and 3000;
select t1.first_name, t1.last_name from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t2.city = "Lockmanfurt";
select t1.first_name, t1.last_name from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t2.city = "Lockmanfurt";
select t2.country from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t1.first_name = "Carole" and t1.last_name = "Bernhard"
select t2.country from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t1.first_name = "Carole" and t1.last_name = "Bernhard"
select t2.zip_postcode from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t1.first_name = "Carole" and t1.last_name = "Bernhard"
select t2.zip_postcode from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t1.first_name = "Carole" and t1.last_name = "Bernhard"
select t2.city from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id group by t2.city order by count(*) desc limit 1;
select t2.city from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id group by t2.city order by count(*) desc limit 1;
select sum(t1.amount_payment) from customer payments as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = "Carole" and t2.last_name = "Bernhard"
select sum(t1.amount_payment) from customer payments as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = "Carole" and t2.last_name = "Bernhard"
select count(*) from customers where customer_id not in ( select customer_id from customer payments );
select count(*) from customers where customer_id not in ( select customer_id from customer payments );
select t2.first_name, t2.last_name from customer payments as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count(*) > 2;
select t2.first_name, t2.last_name from customer payments as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count(*) > 2;
select payment_method_code, count(*) from customer payments group by payment_method_code;
select payment_method_code, count(*) from customer payments group by payment_method_code;
select count(*) from lessons where lesson_date = "Cancelled";
select count(*) from lessons where lesson_date not in ( select lesson_date from lessons );
select t1.lesson_id from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn" and nickname like "%s%";
select t1.lesson_id from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn" and nickname like "%s%";
select count(*) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name like "%a%"
select count(*) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name like "%a%"
select sum(lesson_time) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn";
select sum(lesson_time) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn";
select avg(price) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn";
select avg(price) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = "Janessa" and t2.last_name = "Sawayn";
select count(*) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = "Ray"
select count(*) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = "Ray"
select last_name from customers intersect select last_name from staff
select last_name from customers intersect select last_name from staff
select first_name from staff except select t2.first_name from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id
select first_name from staff except select t2.first_name from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id
select t1.vehicle_id, t1.vehicle_details from vehicles as t1 join lessons as t2 on t1.vehicle_id = t2.vehicle_id group by t1.vehicle_id order by count(*) desc limit 1
select count(*) from faculty
select count(*) from faculty
select distinct rank from faculty
select distinct rank from faculty
select distinct building from faculty
select distinct building from faculty
select rank, fname, lname from faculty
select rank, fname, lname from faculty
select fname, lname, phone from faculty where sex = 'F'
select fname, lname, phone from faculty where sex = 'F'
select facid from faculty where sex = 'M'
select facid from faculty where sex = 'M'
select count(*) from faculty where sex = 'F'
select count(*) from faculty where sex = 'F'
select phone, room, building from faculty where fname = "Jerry" and lname = "Prince"
select phone, room, building from faculty where fname = "Jerry" and lname = "Prince"
select count(*) from faculty where rank = "Professor" and building = "NEB"
select count(*) from faculty where building = "NEB"
select fname, lname from faculty
select fname, lname from faculty
select building, count(*) from faculty group by building
select building, count(*) from faculty group by building
select building from faculty group by building order by count(*) desc limit 1
select building from faculty group by building order by count(*) desc limit 1
select building from faculty group by building having count(*) >= 10
select building from faculty group by building having count(*) >= 10
select rank, count(*) from faculty group by rank
select rank, count(*) from faculty group by rank
select rank, sex, count(*) from faculty group by rank, sex
select rank, sex, count(*) from faculty group by rank, sex
select rank from faculty group by rank order by count(*) asc limit 1
select rank from faculty group by rank order by count(*) asc limit 1
select sex, count(*) from faculty group by sex
select sex, count(*) from faculty group by sex
select t1.fname, t1.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor where t2.sex = "Linda" and t2.lname = "Smith"
select t1.fname, t1.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor where t2.sex = "Linda"
select t2.stuid from faculty as t1 join student as t2 on t1.facid = t2.advisor where t1.rank = "Professor"
select t2.stuid from faculty as t1 join student as t2 on t1.facid = t2.advisor where t1.rank = "Professor"
select t2.fname, t2.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor where t1.sex = "Michael" and t1.lname = "Goodrich"
select t2.fname, t2.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor where t1.sex = "Michael" and t1.lname = "Goodrich"
select t1.facid, count(*) from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid
select t1.facid, count(*) from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid
select t1.rank, count(*) from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.rank
select t1.rank, count(*) from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.rank
select t1.fname, t1.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid order by count(*) desc limit 1
select t1.fname, t1.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid order by count(*) desc limit 1
select t1.facid from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid having count(*) >= 2
select t1.facid from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid having count(*) >= 2
select facid from faculty except select advisor from student
select facid from faculty except select advisor from student
select activity_name from activity
select activity_name from activity
select count(*) from activity
select count(*) from activity
select count(distinct facid) from faculty participates in
select count(distinct facid) from faculty participates in
select facid from faculty except select facid from faculty participates in
select facid from faculty except select facid from faculty participates in
select facid from faculty participates in intersect select advisor from student
select facid from faculty participates in intersect select advisor from student
select count(*) from faculty as t1 join faculty as t2 on t1.facid = t2.facid where t1.fname = "Mark" and t1.lname = "Giuliano"
select count(*) from faculty as t1 join faculty as t2 on t1.facid = t2.facid where t1.fname = "Mark" and t1.lname = "Giuliano"
select t3.activity_name from faculty as t1 join faculty as t2 on t1.facid = t2.facid join activity as t3 on t3.actid = t2.actid where t1.fname = "Mark" and t1.lname = "Giuliano"
select t3.activity_name from faculty as t1 join faculty as t2 on t1.facid = t2.facid join activity as t3 on t3.actid = t2.actid where t1.fname = "Mark" and t1.lname = "Giuliano"
select t1.fname, t1.lname, count(*), t1.facid from faculty as t1 join faculty participates in as t2 on t1.facid = t2.facid group by t1.facid
select t1.fname, t1.lname, count(*), t1.facid from faculty as t1 join faculty participates in as t2 on t1.facid = t2.facid group by t1.facid
select t1.activity_name, count(*) from activity as t1 join faculty as t2 on t1.actid = t2.actid group by t1.actid
select t1.activity_name, count(*) from activity as t1 join faculty as t2 on t1.actid = t2.actid group by t1.actid
select t1.fname, t1.lname from faculty as t1 join faculty participates in as t2 on t1.facid = t2.facid group by t1.facid order by count(*) desc limit 1
select t1.fname, t1.lname from faculty as t1 join faculty as t2 on t1.facid = t2.facid group by t1.facid order by count(*) desc limit 1
select t1.activity_name from activity as t1 join faculty participates as t2 on t1.actid = t2.actid group by t1.actid order by count(*) desc limit 1
select t1.activity_name from activity as t1 join faculty participates as t2 on t1.actid = t2.actid group by t1.actid order by count(*) desc limit 1
select stuid from student except select stuid from participates
select stuid from student except select stuid from participates
select stuid from participates in intersect select stuid from student where age < 20
select stuid from participates in intersect select stuid from student where age < 20
select t1.fname, t1.lname from student as t1 join participates as t2 on t1.stuid = t2.stuid group by t1.stuid order by count(*) desc limit 1
select t1.fname, t1.lname from student as t1 join participates as t2 on t1.stuid = t2.stuid group by t1.stuid order by count(*) desc limit 1
select t1.activity_name from activity as t1 join participates as t2 on t1.actid = t2.actid group by t1.actid order by count(*) desc limit 1
select t1.activity_name from activity as t1 join participates as t2 on t1.actid = t2.actid group by t1.actid order by count(*) desc limit 1
select distinct t1.lname from faculty as t1 join faculty as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'Canoeing' or t3.activity_name = 'Kayaking'
select distinct t1.lname from faculty as t1 join faculty as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'Canoeing' or t3.activity_name = 'Kayaking'
select lname from faculty where facid not in (select facid from faculty participates in)
select lname from faculty where facid not in (select facid from faculty participates in)
select t1.lname from faculty as t1 join faculty as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'Canoeing' intersect select t1.lname from faculty as t1 join faculty as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'Kayaking'
select t1.lname from faculty as t1 join faculty as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'Canoeing' intersect select t1.lname from faculty as t1 join faculty as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'Kayaking'
select t1.stuid from participates as t1 join activity as t2 on t2.actid = t2.actid where t2.actid = 'Canoeing' intersect select t1.stuid from participates as t1 join activity as t2 on t2.actid = t2.actid where t2.actid = 'Kayaking'
select t1.stuid from participates as t1 join activity as t2 on t2.actid = t2.actid where t2.activity_name = 'Canoeing' intersect select t1.stuid from participates as t1 join activity as t2 on t2.actid = t2.actid where t2.activity_name = 'Kayaking'
select name from airports where city = 'Goroka'
select name from airports where city = 'Goroka'
select name, city, country, elevation from airports where city = 'New York'
select name, city, country, elevation from airports where city = 'New York'
select count(*) from airlines
select count(*) from airlines
select count(*) from airlines where country = 'Russia'
select count(*) from airlines where country = 'Russia'
select max(elevation) from airports where country = 'Iceland'
select max(elevation) from airports where country = 'Iceland'
select name from airports where country = 'Cuba' or country = 'Argentina'
select name from airports where country = 'Cuba' or country = 'Argentina'
select country from airlines where name like 'Orbit%'
select country from airlines where name like 'Orbit%'
select name from airports where elevation between -50 and 50
select name from airports where elevation between -50 and 50
select country from airports order by elevation desc limit 1
select country from airports order by elevation desc limit 1
select count(*) from airports where name like '%international%'
select count(*) from airports where name like '%international%'
select count(distinct city) from airports where country = 'Greenland'
select count(distinct city) from airports where country = 'Greenland'
select count(*) from airlines as t1 join routes as t2 on t1.alid = t2.alid where t1.name = 'American Airlines'
select count(*) from airlines as t1 join routes as t2 on t1.alid = t2.alid where t1.name = 'American Airlines'
select count(*) from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where country = 'Canada'
select count(*) from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where country = 'Canada'
select name, city, country from airports order by elevation limit 1
select name, city, country from airports order by elevation limit 1
select name, city, country from airports order by elevation desc limit 1
select name, city, country from airports order by elevation desc limit 1
select t1.name, t1.city, t2.dst_apid from airports as t1 join routes as t2 on t1.apid = t2.dst_apid group by t2.dst_apid order by count(*) desc limit 1
select t1.name, t1.city, t2.dst_apid from airports as t1 join routes as t2 on t1.apid = t2.dst_apid group by t2.dst_apid order by count(*) desc limit 1
select t1.name, t2.alid from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t2.alid order by count(*) desc limit 10
select t1.name, t2.alid from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t2.alid order by count(*) desc limit 10
select t1.name, t1.city, t2.src_apid from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t2.src_apid order by count(*) desc limit 1
select t1.name, t1.city, t2.src_apid from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t2.src_apid order by count(*) desc limit 1
select count(distinct dst_apid) from airlines as t1 join routes as t2 on t1.alid = t2.alid where t1.name = 'American Airlines'
select count(distinct dst_apid) from airlines as t1 join routes as t2 on t1.alid = t2.alid where t1.name = 'American Airlines'
select country from airlines group by country order by count(*) desc limit 1
select country from airlines group by country order by count(*) desc limit 1
select country from airlines where active = 'Y' group by country order by count(*) desc limit 1
select country from airlines where active = 'Y' group by country order by count(*) desc limit 1
select country, count(*) from airlines group by country order by count(*) desc
select country, count(*) from airlines group by country order by count(*) desc
select count(*), country from airports group by country order by count(*) desc
select count(*), country from airports group by country order by count(*) desc
select count(*), city from airports where country = 'United States' group by city order by count(*) desc
select count(*), city from airports where country = 'United States' group by city order by count(*) desc
select city from airports where country = 'United States' group by city having count(*) > 3
select city from airports where country = 'United States' group by city having count(*) > 3
select count(*) from (select city from airports group by city having count(*) > 3)
select count(*) from (select city from airports group by city having count(*) > 3)
select city, count(*) from airports group by city having count(*) > 1
select city, count(*) from airports group by city having count(*) > 1
select city from airports group by city having count(*) > 2 order by count(*)
select city from airports group by city having count(*) > 2 order by count(*)
select count(*), t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t1.name
select count(*), t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t1.name
select count(*), t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t1.name order by count(*) desc
select count(*), t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t1.name order by count(*) desc
select avg(elevation), country from airports group by country
select avg(elevation), country from airports group by country
select city from airports group by city having count(*) = 2
select city from airports group by city having count(*) = 2
select t1.country, t1.name, count(*) from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t1.country, t1.name
select t1.country, t1.name, count(*) from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t1.country, t1.name
select count(*) from routes as t1 join airports as t2 on t1.dst_apid = t2.apid where t2.country = 'Italy'
select count(*) from routes as t1 join airports as t2 on t1.dst_apid = t2.apid where t2.country = 'Italy'
select count(*) from routes as t1 join airports as t2 on t1.dst_apid = t2.apid join airlines as t3 on t1.alid = t3.alid where t2.country = 'Italy' and t3.name = 'American Airlines'
select count(*) from routes as t1 join airports as t2 on t1.dst_apid = t2.apid join airlines as t3 on t1.alid = t3.alid where t2.country = 'Italy' and t3.name = 'American Airlines'
select count(*) from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.country = 'John f kennedy international Airport'
select count(*) from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.country = 'John f kennedy international Airport'
select count(*) from routes where dst_apid in (select apid from airports where country = 'Canada') and src_apid in (select apid from airports where country = 'United States')
select count(*) from routes where dst_apid in (select apid from airports where country = 'Canada') and src_apid in (select apid from airports where country = 'United States')
select rid from routes where dst_apid in (select apid from airports where country = 'United States') and src_apid in (select apid from airports where country = 'United States')
select rid from routes where dst_apid in (select apid from airports where country = 'United States') and src_apid in (select apid from airports where country = 'United States')
select t1.name from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t1.name order by count(*) desc limit 1
select t1.name from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t1.name order by count(*) desc limit 1
select t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.country = 'China' group by t1.name order by count(*) desc limit 1
select t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.country = 'China' group by t1.name order by count(*) desc limit 1
select t1.name from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.country = 'China' group by t1.name order by count(*) desc limit 1
select t1.name from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.country = 'China' group by t1.name order by count(*) desc limit 1
select order_id from orders order by date_order_placed desc limit 1
select order_id from orders order by date_order_placed desc limit 1
select order_id, customer_id from orders order by date_order_placed limit 1
select order_id, customer_id from orders order by date_order_placed limit 1
select order_id from shipments where shipment_tracking_number = "3452"
select order_id from shipments where shipment_tracking_number = "3452"
select order_item_id from order items where product_id = 11
select order_item_id from order items where product_id = 11
select distinct t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "Packing"
select distinct t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "Packing"
select distinct t1.customer_details from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "On Road"
select distinct t1.customer_details from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "On Road"
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1
select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1
select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1
select t2.order_id, t2.order_status from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t1.customer_name = "Jeramie"
select t2.order_id, t2.order_status from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t1.customer_name = "Jeramie"
select t2.date_order_placed from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t1.customer_name = "Jeramie"
select t2.date_order_placed from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t1.customer_name = "Jeramie"
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.date_order_placed >= "2009-01-01" and t2.date_order_placed <= "2010-01-01"
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.date_order_placed >= "2009-01-01" and t2.date_order_placed <= "2010-01-01"
select distinct t2.product_id from orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t1.date_order_placed >= "1975-01-01" and t1.date_order_placed <= "1976-01-01"
select distinct t2.product_id from orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t1.date_order_placed >= "1975-01-01" and t1.date_order_placed <= "1976-01-01"
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "On Road" intersect select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "Shipped"
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "On Road" intersect select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "Shipped"
select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "On Road" intersect select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "Shipped"
select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "On Road" intersect select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = "Shipped"
select t1.date_order_placed from orders as t1 join shipments as t2 on t1.order_id = t2.order_id where t2.shipment_tracking_number = 3452
select t1.date_order_placed from orders as t1 join shipments as t2 on t1.order_id = t2.order_id where t2.shipment_tracking_number = 3452
select t1.date_order_placed from orders as t1 join shipments as t2 on t1.order_id = t2.order_id where t2.invoice_number = 10
select t1.date_order_placed from orders as t1 join shipments as t2 on t1.order_id = t2.order_id where t2.invoice_number = 10
select count(*), t3.product_id from orders as t1 join order_items as t2 join products as t3 on t1.order_id = t2.order_id and t2.product_id = t3.product_id group by t3.product_id
select count(*), t3.product_id from orders as t1 join order_items as t2 join products as t3 on t1.order_id = t2.order_id and t2.product_id = t3.product_id group by t3.product_id
select t3.product_name, count(*) from orders as t1 join order_items as t2 join products as t3 on t1.order_id = t2.order_id and t2.product_id = t3.product_id group by t3.product_id
select t3.product_name, count(*) from orders as t1 join order_items as t2 join products as t3 on t1.order_id = t2.order_id and t2.product_id = t3.product_id group by t3.product_id
select order_id from shipments where shipment_date > "2000-01-01"
select order_id from shipments where shipment_date > "2000-01-01"
select order_id from shipments where shipment_date = (select max(shipment_date) from shipments)
select order_id from shipments where shipment_date = (select max(shipment_date) from shipments)
select distinct product_name from products order by product_name
select distinct product_name from products order by product_name
select distinct order_id from orders order by date_order_placed
select distinct order_id from orders order by date_order_placed
select t1.order_id from orders as t1 join order_items as t2 on t1.order_id = t2.order_id group by t1.order_id order by count(*) desc limit 1
select t1.order_id from orders as t1 join order_items as t2 on t1.order_id = t2.order_id group by t1.order_id order by count(*) desc limit 1
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1
select invoice_number from invoices where invoice_date < "1989-09-03" or invoice_date > "2007-12-25"
select invoice_number from invoices where invoice_date < "1989-09-03" or invoice_date > "2007-12-25"
select distinct invoice_details from invoices where invoice_date < "1989-09-03" or invoice_date > "2007-12-25"
select distinct invoice_details from invoices where invoice_date < "1989-09-03" or invoice_date > "2007-12-25"
select t2.customer_name, count(*) from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t2.customer_id having count(*) >= 2
select t2.customer_name, count(*) from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t2.customer_id having count(*) >= 2
select t2.customer_name from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t2.customer_id having count(*) <= 2
select t2.customer_name from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t2.customer_id having count(*) <= 2
select t1.customer_name from customers as t1 join orders as t2 join order_items as t3 join products as t4 on t1.customer_id = t2.customer_id and t2.order_id = t3.order_id and t3.product_id = t4.product_id where t4.product_name = "food" group by t1.customer_id having count(*) >= 1
select t1.customer_name from customers as t1 join orders as t2 join order_items as t3 join products as t4 on t1.customer_id = t2.customer_id and t2.order_id = t3.order_id and t3.product_id = t4.product_id where t4.product_name = "food" group by t1.customer_id having count(*) >= 1
select t1.customer_name from customers as t1 join orders as t2 join order_items as t3 join products as t4 on t1.customer_id = t2.customer_id and t2.order_id = t3.order_id and t3.product_id = t4.product_id where t3.order_item_status = "Cancel" and t4.product_name = "food" group by t1.customer_id having count(*) >= 1
select t1.customer_name from customers as t1 join orders as t2 join order_items as t3 join products as t4 on t1.customer_id = t2.customer_id and t2.order_id = t3.order_id and t3.product_id = t4.product_id where t3.order_item_status = "Cancel" and t4.product_name = "food" group by t1.customer_id having count(*) >= 1
select count(*) from architect where gender = 'F'
select name, nationality, id from architect where gender = 'M' order by name
select max(t1.length_meters), t2.name from bridge as t1 join architect as t2 on t1.architect_id = t2.id
select avg(length_feet) from bridge
select name, built_year from mill where type = 'Grondzeiler'
select distinct t1.name, t1.nationality from architect as t1 join mill as t2 on t1.id = t2.architect_id
select name from mill where location!= 'Donceel'
select distinct t1.type from mill as t1 join architect as t2 on t1.architect_id = t2.id where t2.nationality = 'American' or t2.nationality = 'Canadian'
select t1.id, t1.name from architect as t1 join bridge as t2 on t1.id = t2.architect_id group by t1.id having count(*) >= 3
select t1.id, t1.name, t1.nationality from architect as t1 join mill as t2 on t1.id = t2.architect_id group by t1.id order by count(*) desc limit 1
select t1.id, t1.name, t1.gender from architect as t1 join bridge as t2 on t1.id = t2.architect_id group by t1.id having count(*) = 2 union select t1.id, t1.name, t1.gender from architect as t1 join mill as t2 on t1.id = t2.architect_id group by t1.id having count(*) = 1
select location from bridge where name = 'Kolob Arch' or name = 'Rainbow Bridge'
select name from mill where name like '%moulin%'
select distinct t1.name from mill as t1 join architect as t2 on t1.architect_id = t2.id join bridge as t3 on t3.architect_id = t2.id where t3.length_meters > 80
select type, count(*) from mill group by type order by count(*) desc limit 1
select count(*) from architect where id not in ( select architect_id from mill where built_year < 1850 );
select t1.name from bridge as t1 join architect as t2 on t1.architect_id = t2.id where t2.nationality = 'american' order by t1.length_feet
select count(*) from book club
select count(*) from book club
select book_title, author_or_editor from book club where year > 1989
select book_title, author_or_editor from book club where year > 1989
select distinct publisher from book club
select distinct publisher from book club
select year, book_title, publisher from book club order by year desc
select year, book_title, publisher from book club order by year desc
select publisher, count(*) from book club group by publisher
select publisher, count(*) from book club group by publisher
select publisher from book club group by publisher order by count(*) desc limit 1
select publisher from book club group by publisher order by count(*) desc limit 1
select category, count(*) from book club group by category
select category, count(*) from book club group by category
select category from book club where year > 1989 group by category having count(*) >= 2
select category from book club where year > 1989 group by category having count(*) >= 2
select publisher from book club where year = 1989 intersect select publisher from book club where year = 1990
select publisher from book club where year = 1989 intersect select publisher from book club where year = 1990
select publisher from book club except select publisher from book club where year = 1989
select publisher from book club except select publisher from book club where year = 1989
select title, year, director from movie order by budget_million
select title, year, director from movie order by budget_million
select count (distinct director) from movie
select count (distinct director) from movie
select title, director from movie where year <= 2000 order by gross_worldwide desc limit 1
select title, director from movie where year <= 2000 order by gross_worldwide desc limit 1
select director from movie where year = 2000 intersect select director from movie where year = 1999
select director from movie where year = 2000 intersect select director from movie where year = 1999
select director from movie where year = 1999 or year = 2000
select director from movie where year = 1999 or year = 2000
select avg(budget_million), max(budget_million), min(budget_million) from movie where year < 2000
select avg(budget_million), max(budget_million), min(budget_million) from movie where year < 2000
select t1.company_name from culture company as t1 join book club as t2 on t1.book_club_id = t2.book_club_id where t2.publisher = 'Alyson'
select t1.company_name from culture company as t1 join book club as t2 on t1.book_club_id = t2.book_club_id where t2.publisher = 'Alyson'
select t1.title, t3.book_title from movie as t1 join culture company as t2 on t1.movie_id = t2.movie_id join book club as t3 on t3.book_club_id = t2.book_club_id where t2.country = "China"
select t1.title, t3.book_title from movie as t1 join culture company as t2 on t1.movie_id = t2.movie_id join book club as t3 on t3.book_club_id = t2.book_club_id where t2.incorporated_in = 'China'
select t2.company_name from movie as t1 join culture company as t2 on t1.movie_id = t2.movie_id where t1.year = 1999
select t2.company_name from movie as t1 join culture company as t2 on t1.movie_id = t2.movie_id where t1.year = 1999
